<?xml version='1.0'?>
<signatures version='1.0'>
<struct type='{CCPVRMipmap=&quot;address&quot;*&quot;len&quot;I}' name='CCPVRMipmap'>
<field type='*' name='address' declared_type='unsigned char*'/>
<field type='I' name='len' declared_type='unsigned int'/>
</struct>
<struct type='{CCZHeader=&quot;sig&quot;[4C]&quot;compression_type&quot;S&quot;version&quot;S&quot;reserved&quot;I&quot;len&quot;I}' name='CCZHeader'>
<field type='[4C]' name='sig' declared_type='uint8_t*'/>
<field type='S' name='compression_type' declared_type='uint16_t'/>
<field type='S' name='version' declared_type='uint16_t'/>
<field type='I' name='reserved' declared_type='uint32_t'/>
<field type='I' name='len' declared_type='uint32_t'/>
</struct>
<struct type='{UT_hash_bucket=&quot;hh_head&quot;^{UT_hash_handle}&quot;count&quot;I&quot;expand_mult&quot;I}' name='UT_hash_bucket'>
<field type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}' name='hh_head' declared_type='struct UT_hash_handle*'/>
<field type='I' name='count' declared_type='unsigned int'/>
<field type='I' name='expand_mult' declared_type='unsigned int'/>
</struct>
<struct type='{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}' name='UT_hash_handle'>
<field type='^{UT_hash_table=^{UT_hash_bucket}III^{UT_hash_handle}iIIIII}' name='tbl' declared_type='struct UT_hash_table*'/>
<field type='^v' name='prev' declared_type='void*'/>
<field type='^v' name='next' declared_type='void*'/>
<field type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}' name='hh_prev' declared_type='struct UT_hash_handle*'/>
<field type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}' name='hh_next' declared_type='struct UT_hash_handle*'/>
<field type='^v' name='key' declared_type='void*'/>
<field type='I' name='keylen' declared_type='unsigned int'/>
<field type='I' name='hashv' declared_type='unsigned int'/>
</struct>
<struct type='{UT_hash_table=&quot;buckets&quot;^{UT_hash_bucket}&quot;num_buckets&quot;I&quot;log2_num_buckets&quot;I&quot;num_items&quot;I&quot;tail&quot;^{UT_hash_handle}&quot;hho&quot;i&quot;ideal_chain_maxlen&quot;I&quot;nonideal_items&quot;I&quot;ineff_expands&quot;I&quot;noexpand&quot;I&quot;signature&quot;I}' name='UT_hash_table'>
<field type='^{UT_hash_bucket=^{UT_hash_handle}II}' name='buckets' declared_type='UT_hash_bucket*'/>
<field type='I' name='num_buckets' declared_type='unsigned int'/>
<field type='I' name='log2_num_buckets' declared_type='unsigned int'/>
<field type='I' name='num_items' declared_type='unsigned int'/>
<field type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}' name='tail' declared_type='struct UT_hash_handle*'/>
<field type='i' name='hho' declared_type='ptrdiff_t'/>
<field type='I' name='ideal_chain_maxlen' declared_type='unsigned int'/>
<field type='I' name='nonideal_items' declared_type='unsigned int'/>
<field type='I' name='ineff_expands' declared_type='unsigned int'/>
<field type='I' name='noexpand' declared_type='unsigned int'/>
<field type='I' name='signature' declared_type='uint32_t'/>
</struct>
<struct type='{ccArray=&quot;num&quot;I&quot;max&quot;I&quot;arr&quot;^@}' name='ccArray'>
<field type='I' name='num' declared_type='NSUInteger'/>
<field type='I' name='max' declared_type='NSUInteger'/>
<field type='^@' name='arr' declared_type='CCARRAY_ID*'/>
</struct>
<struct type='{_BMFontDef=&quot;charID&quot;S&quot;rect&quot;{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}&quot;xOffset&quot;s&quot;yOffset&quot;s&quot;xAdvance&quot;s}' name='ccBMFontDef'>
<field type='S' name='charID' declared_type='unichar'/>
<field type='{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}' name='rect' declared_type='CGRect'/>
<field type='s' name='xOffset' declared_type='short'/>
<field type='s' name='yOffset' declared_type='short'/>
<field type='s' name='xAdvance' declared_type='short'/>
</struct>
<struct type='{_BMFontPadding=&quot;left&quot;i&quot;top&quot;i&quot;right&quot;i&quot;bottom&quot;i}' name='ccBMFontPadding'>
<field type='i' name='left' declared_type='int'/>
<field type='i' name='top' declared_type='int'/>
<field type='i' name='right' declared_type='int'/>
<field type='i' name='bottom' declared_type='int'/>
</struct>
<struct type='{_ccBezierConfig=&quot;endPosition&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;controlPoint_1&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;controlPoint_2&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}}' name='ccBezierConfig'>
<field type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' name='endPosition' declared_type='CGPoint'/>
<field type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' name='controlPoint_1' declared_type='CGPoint'/>
<field type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' name='controlPoint_2' declared_type='CGPoint'/>
</struct>
<struct type='{_ccBlendFunc=&quot;src&quot;I&quot;dst&quot;I}' name='ccBlendFunc'>
<field type='I' name='src' declared_type='GLenum'/>
<field type='I' name='dst' declared_type='GLenum'/>
</struct>
<struct type='{ccArray=&quot;num&quot;I&quot;max&quot;I&quot;arr&quot;^@}' name='ccCArray'>
<field type='I' name='num' declared_type='NSUInteger'/>
<field type='I' name='max' declared_type='NSUInteger'/>
<field type='^@' name='arr' declared_type='CCARRAY_ID*'/>
</struct>
<struct type='{_ccColor3B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C}' name='ccColor3B'>
<field type='C' name='r' declared_type='GLubyte'/>
<field type='C' name='g' declared_type='GLubyte'/>
<field type='C' name='b' declared_type='GLubyte'/>
</struct>
<struct type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' name='ccColor4B'>
<field type='C' name='r' declared_type='GLubyte'/>
<field type='C' name='g' declared_type='GLubyte'/>
<field type='C' name='b' declared_type='GLubyte'/>
<field type='C' name='a' declared_type='GLubyte'/>
</struct>
<struct type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' name='ccColor4F'>
<field type='f' name='r' declared_type='GLfloat'/>
<field type='f' name='g' declared_type='GLfloat'/>
<field type='f' name='b' declared_type='GLfloat'/>
<field type='f' name='a' declared_type='GLfloat'/>
</struct>
<struct type='{_ccGridSize=&quot;x&quot;i&quot;y&quot;i}' name='ccGridSize'>
<field type='i' name='x' declared_type='NSInteger'/>
<field type='i' name='y' declared_type='NSInteger'/>
</struct>
<struct type='{_ccPointSprite=&quot;pos&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;size&quot;f}' name='ccPointSprite'>
<field type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' name='pos' declared_type='ccVertex2F'/>
<field type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' name='color' declared_type='ccColor4B'/>
<field type='f' name='size' declared_type='GLfloat'/>
</struct>
<struct type='{_ccQuad2=&quot;tl&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;tr&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;bl&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;br&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}}' name='ccQuad2'>
<field type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' name='tl' declared_type='ccVertex2F'/>
<field type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' name='tr' declared_type='ccVertex2F'/>
<field type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' name='bl' declared_type='ccVertex2F'/>
<field type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' name='br' declared_type='ccVertex2F'/>
</struct>
<struct type='{_ccQuad3=&quot;bl&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;br&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;tl&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;tr&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}}' name='ccQuad3'>
<field type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' name='bl' declared_type='ccVertex3F'/>
<field type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' name='br' declared_type='ccVertex3F'/>
<field type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' name='tl' declared_type='ccVertex3F'/>
<field type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' name='tr' declared_type='ccVertex3F'/>
</struct>
<struct type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' name='ccTex2F'>
<field type='f' name='u' declared_type='GLfloat'/>
<field type='f' name='v' declared_type='GLfloat'/>
</struct>
<struct type='{_ccTexParams=&quot;minFilter&quot;I&quot;magFilter&quot;I&quot;wrapS&quot;I&quot;wrapT&quot;I}' name='ccTexParams'>
<field type='I' name='minFilter' declared_type='GLuint'/>
<field type='I' name='magFilter' declared_type='GLuint'/>
<field type='I' name='wrapS' declared_type='GLuint'/>
<field type='I' name='wrapT' declared_type='GLuint'/>
</struct>
<struct type='{ccTouchHandlerHelperData=&quot;touchesSel&quot;:&quot;touchSel&quot;:&quot;type&quot;i}' name='ccTouchHandlerHelperData'>
<field type=':' name='touchesSel' declared_type='SEL'/>
<field type=':' name='touchSel' declared_type='SEL'/>
<field type='i' name='type' declared_type='ccTouchSelectorFlag'/>
</struct>
<struct type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='ccV2F_C4B_T2F'>
<field type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' name='vertices' declared_type='ccVertex2F'/>
<field type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' name='colors' declared_type='ccColor4B'/>
<field type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' name='texCoords' declared_type='ccTex2F'/>
</struct>
<struct type='{_ccV2F_C4B_T2F_Quad=&quot;bl&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tl&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}' name='ccV2F_C4B_T2F_Quad'>
<field type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='bl' declared_type='ccV2F_C4B_T2F'/>
<field type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='br' declared_type='ccV2F_C4B_T2F'/>
<field type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='tl' declared_type='ccV2F_C4B_T2F'/>
<field type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='tr' declared_type='ccV2F_C4B_T2F'/>
</struct>
<struct type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='ccV2F_C4F_T2F'>
<field type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' name='vertices' declared_type='ccVertex2F'/>
<field type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' name='colors' declared_type='ccColor4F'/>
<field type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' name='texCoords' declared_type='ccTex2F'/>
</struct>
<struct type='{_ccV2F_C4F_T2F_Quad=&quot;bl&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tl&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}' name='ccV2F_C4F_T2F_Quad'>
<field type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='bl' declared_type='ccV2F_C4F_T2F'/>
<field type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='br' declared_type='ccV2F_C4F_T2F'/>
<field type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='tl' declared_type='ccV2F_C4F_T2F'/>
<field type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='tr' declared_type='ccV2F_C4F_T2F'/>
</struct>
<struct type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='ccV3F_C4B_T2F'>
<field type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' name='vertices' declared_type='ccVertex3F'/>
<field type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' name='colors' declared_type='ccColor4B'/>
<field type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' name='texCoords' declared_type='ccTex2F'/>
</struct>
<struct type='{_ccV3F_C4B_T2F_Quad=&quot;tl&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;bl&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}' name='ccV3F_C4B_T2F_Quad'>
<field type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='tl' declared_type='ccV3F_C4B_T2F'/>
<field type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='bl' declared_type='ccV3F_C4B_T2F'/>
<field type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='tr' declared_type='ccV3F_C4B_T2F'/>
<field type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='br' declared_type='ccV3F_C4B_T2F'/>
</struct>
<struct type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='ccV3F_C4F_T2F'>
<field type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' name='vertices' declared_type='ccVertex3F'/>
<field type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' name='colors' declared_type='ccColor4F'/>
<field type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' name='texCoords' declared_type='ccTex2F'/>
</struct>
<struct type='{_ccV3F_C4F_T2F_Quad=&quot;tl&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;bl&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}' name='ccV3F_C4F_T2F_Quad'>
<field type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='tl' declared_type='ccV3F_C4F_T2F'/>
<field type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='bl' declared_type='ccV3F_C4F_T2F'/>
<field type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='tr' declared_type='ccV3F_C4F_T2F'/>
<field type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' name='br' declared_type='ccV3F_C4F_T2F'/>
</struct>
<struct type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' name='ccVertex2F'>
<field type='f' name='x' declared_type='GLfloat'/>
<field type='f' name='y' declared_type='GLfloat'/>
</struct>
<struct type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' name='ccVertex3F'>
<field type='f' name='x' declared_type='GLfloat'/>
<field type='f' name='y' declared_type='GLfloat'/>
<field type='f' name='z' declared_type='GLfloat'/>
</struct>
<struct type='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;startPos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;I&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}' name='sCCParticle'>
<field type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' name='pos' declared_type='CGPoint'/>
<field type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' name='startPos' declared_type='CGPoint'/>
<field type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' name='color' declared_type='ccColor4F'/>
<field type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' name='deltaColor' declared_type='ccColor4F'/>
<field type='f' name='size' declared_type='float'/>
<field type='f' name='deltaSize' declared_type='float'/>
<field type='f' name='rotation' declared_type='float'/>
<field type='f' name='deltaRotation' declared_type='float'/>
<field type='f' name='timeToLive' declared_type='ccTime'/>
<field type='I' name='atlasIndex' declared_type='NSUInteger'/>
<field type='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})' name='mode' declared_type='union sCCParticle::'/>
</struct>
<struct type='{sImageTGA=&quot;status&quot;i&quot;type&quot;C&quot;pixelDepth&quot;C&quot;width&quot;s&quot;height&quot;s&quot;imageData&quot;*&quot;flipped&quot;i}' name='sImageTGA'>
<field type='i' name='status' declared_type='int'/>
<field type='C' name='type' declared_type='unsigned char'/>
<field type='C' name='pixelDepth' declared_type='unsigned char'/>
<field type='s' name='width' declared_type='short'/>
<field type='s' name='height' declared_type='short'/>
<field type='*' name='imageData' declared_type='unsigned char*'/>
<field type='i' name='flipped' declared_type='int'/>
</struct>
<struct type='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;startPos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;I&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}' name='tCCParticle'>
<field type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' name='pos' declared_type='CGPoint'/>
<field type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' name='startPos' declared_type='CGPoint'/>
<field type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' name='color' declared_type='ccColor4F'/>
<field type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' name='deltaColor' declared_type='ccColor4F'/>
<field type='f' name='size' declared_type='float'/>
<field type='f' name='deltaSize' declared_type='float'/>
<field type='f' name='rotation' declared_type='float'/>
<field type='f' name='deltaRotation' declared_type='float'/>
<field type='f' name='timeToLive' declared_type='ccTime'/>
<field type='I' name='atlasIndex' declared_type='NSUInteger'/>
<field type='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})' name='mode' declared_type='union sCCParticle::'/>
</struct>
<struct type='{_hashElement=&quot;actions&quot;^{ccArray}&quot;actionIndex&quot;I&quot;currentActionSalvaged&quot;B&quot;paused&quot;B&quot;hh&quot;{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}&quot;target&quot;@&quot;currentAction&quot;@&quot;CCAction&quot;}' name='tHashElement'>
<field type='^{ccArray=II^@}' name='actions' declared_type='struct ccArray*'/>
<field type='I' name='actionIndex' declared_type='NSUInteger'/>
<field type='B' name='currentActionSalvaged' declared_type='BOOL'/>
<field type='B' name='paused' declared_type='BOOL'/>
<field type='{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}' name='hh' declared_type='UT_hash_handle'/>
<field type='@' name='target' declared_type='id'/>
<field type='@&quot;CCAction&quot;' name='currentAction' declared_type='CCAction*'/>
</struct>
<struct type='{sImageTGA=&quot;status&quot;i&quot;type&quot;C&quot;pixelDepth&quot;C&quot;width&quot;s&quot;height&quot;s&quot;imageData&quot;*&quot;flipped&quot;i}' name='tImageTGA'>
<field type='i' name='status' declared_type='int'/>
<field type='C' name='type' declared_type='unsigned char'/>
<field type='C' name='pixelDepth' declared_type='unsigned char'/>
<field type='s' name='width' declared_type='short'/>
<field type='s' name='height' declared_type='short'/>
<field type='*' name='imageData' declared_type='unsigned char*'/>
<field type='i' name='flipped' declared_type='int'/>
</struct>
<constant const='true' type='{_ccColor3B=CCC}' name='ccBLACK' declared_type='ccColor3B'/>
<constant const='true' type='{_ccColor3B=CCC}' name='ccBLUE' declared_type='ccColor3B'/>
<constant const='true' type='{_ccColor3B=CCC}' name='ccGRAY' declared_type='ccColor3B'/>
<constant const='true' type='{_ccColor3B=CCC}' name='ccGREEN' declared_type='ccColor3B'/>
<constant const='true' type='{_ccColor3B=CCC}' name='ccMAGENTA' declared_type='ccColor3B'/>
<constant const='true' type='{_ccColor3B=CCC}' name='ccORANGE' declared_type='ccColor3B'/>
<constant const='true' type='*' name='ccPositionColor_frag' declared_type='GLchar*'/>
<constant const='true' type='*' name='ccPositionColor_vert' declared_type='GLchar*'/>
<constant const='true' type='*' name='ccPositionTextureA8Color_frag' declared_type='GLchar*'/>
<constant const='true' type='*' name='ccPositionTextureA8Color_vert' declared_type='GLchar*'/>
<constant const='true' type='*' name='ccPositionTextureColorAlphaTest_frag' declared_type='GLchar*'/>
<constant const='true' type='*' name='ccPositionTextureColor_frag' declared_type='GLchar*'/>
<constant const='true' type='*' name='ccPositionTextureColor_vert' declared_type='GLchar*'/>
<constant const='true' type='*' name='ccPositionTexture_frag' declared_type='GLchar*'/>
<constant const='true' type='*' name='ccPositionTexture_uColor_frag' declared_type='GLchar*'/>
<constant const='true' type='*' name='ccPositionTexture_uColor_vert' declared_type='GLchar*'/>
<constant const='true' type='*' name='ccPositionTexture_vert' declared_type='GLchar*'/>
<constant const='true' type='*' name='ccPosition_uColor_frag' declared_type='GLchar*'/>
<constant const='true' type='*' name='ccPosition_uColor_vert' declared_type='GLchar*'/>
<constant const='true' type='{_ccColor3B=CCC}' name='ccRED' declared_type='ccColor3B'/>
<constant const='true' type='{_ccColor3B=CCC}' name='ccWHITE' declared_type='ccColor3B'/>
<constant const='true' type='{_ccColor3B=CCC}' name='ccYELLOW' declared_type='ccColor3B'/>
<constant type='B' name='kCCProfilerCategoryBatchSprite' declared_type='BOOL'/>
<constant type='B' name='kCCProfilerCategoryParticles' declared_type='BOOL'/>
<constant type='B' name='kCCProfilerCategorySprite' declared_type='BOOL'/>
<string_constant value='CCAnimationFrameDisplayedNotification' name='CCAnimationFrameDisplayedNotification' nsstring='true'/>
<string_constant value='a_color' name='kCCAttributeNameColor' nsstring='true'/>
<string_constant value='a_position' name='kCCAttributeNamePosition' nsstring='true'/>
<string_constant value='a_texCoord' name='kCCAttributeNameTexCoord' nsstring='true'/>
<string_constant value='ShaderPositionColor' name='kCCShader_PositionColor' nsstring='true'/>
<string_constant value='ShaderPositionTexture' name='kCCShader_PositionTexture' nsstring='true'/>
<string_constant value='ShaderPositionTextureA8Color' name='kCCShader_PositionTextureA8Color' nsstring='true'/>
<string_constant value='ShaderPositionTextureColor' name='kCCShader_PositionTextureColor' nsstring='true'/>
<string_constant value='ShaderPositionTextureColorAlphaTest' name='kCCShader_PositionTextureColorAlphaTest' nsstring='true'/>
<string_constant value='ShaderPositionTexture_uColor' name='kCCShader_PositionTexture_uColor' nsstring='true'/>
<string_constant value='ShaderPosition_uColor' name='kCCShader_Position_uColor' nsstring='true'/>
<string_constant value='u_alpha_value' name='kCCUniformAlphaTestValue'/>
<string_constant value='u_MVPMatrix' name='kCCUniformMVPMatrix_s'/>
<string_constant value='u_texture' name='kCCUniformSampler_s'/>
<enum value='4294967295' name='CCSpriteIndexNotInitialized'/>
<enum value='1' name='CCTMXOrientationHex'/>
<enum value='2' name='CCTMXOrientationIso'/>
<enum value='0' name='CCTMXOrientationOrtho'/>
<enum value='1' name='CCZ_COMPRESSION_BZIP2'/>
<enum value='2' name='CCZ_COMPRESSION_GZIP'/>
<enum value='3' name='CCZ_COMPRESSION_NONE'/>
<enum value='0' name='CCZ_COMPRESSION_ZLIB'/>
<enum value='771' name='CC_BLEND_DST'/>
<enum value='1' name='CC_BLEND_SRC'/>
<enum value='0' name='CC_DIRECTOR_IOS_USE_BACKGROUND_THREAD'/>
<enum value='0' name='CC_DIRECTOR_MAC_THREAD'/>
<enum value='0.1f' name='CC_DIRECTOR_STATS_INTERVAL'/>
<enum value='1' name='CC_ENABLE_DEPRECATED'/>
<enum value='0' name='CC_ENABLE_GL_STATE_CACHE'/>
<enum value='0' name='CC_ENABLE_PROFILERS'/>
<enum value='0' name='CC_FIX_ARTIFACTS_BY_STRECHING_TEXEL'/>
<enum value='8' name='CC_GL_ALL'/>
<enum value='8' name='CC_GL_BLEND'/>
<enum value='0' name='CC_LABELATLAS_DEBUG_DRAW'/>
<enum value='0' name='CC_LABELBMFONT_DEBUG_DRAW'/>
<enum value='0' name='CC_MAC_USE_DISPLAY_LINK_THREAD'/>
<enum value='2' name='CC_MAC_USE_MAIN_THREAD'/>
<enum value='1' name='CC_MAC_USE_OWN_THREAD'/>
<enum value='1' name='CC_NODE_RENDER_SUBPIXEL'/>
<enum value='16' name='CC_PVRMIPMAP_MAX'/>
<enum value='1' name='CC_SPRITEBATCHNODE_RENDER_SUBPIXEL'/>
<enum value='0' name='CC_SPRITE_DEBUG_DRAW'/>
<enum value='0' name='CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP'/>
<enum value='1' name='CC_TEXTURE_ATLAS_USE_VAO'/>
<enum value='1' name='CC_USE_LA88_LABELS'/>
<enum value='131072' name='COCOS2D_VERSION'/>
<enum value='10' name='HASH_BKT_CAPACITY_THRESH'/>
<enum value='2971803890' name='HASH_BLOOM_SIGNATURE'/>
<enum value='32' name='HASH_INITIAL_NUM_BUCKETS'/>
<enum value='5' name='HASH_INITIAL_NUM_BUCKETS_LOG2'/>
<enum value='2685476833' name='HASH_SIGNATURE'/>
<enum value='5' name='TGA_ERROR_COMPRESSED_FILE'/>
<enum value='1' name='TGA_ERROR_FILE_OPEN'/>
<enum value='3' name='TGA_ERROR_INDEXED_COLOR'/>
<enum value='4' name='TGA_ERROR_MEMORY'/>
<enum value='2' name='TGA_ERROR_READING_FILE'/>
<enum value='0' name='TGA_OK'/>
<enum value='2' name='TMXLayerAttribBase64'/>
<enum value='4' name='TMXLayerAttribGzip'/>
<enum value='1' name='TMXLayerAttribNone'/>
<enum value='8' name='TMXLayerAttribZlib'/>
<enum value='2' name='TMXPropertyLayer'/>
<enum value='1' name='TMXPropertyMap'/>
<enum value='0' name='TMXPropertyNone'/>
<enum value='4' name='TMXPropertyObject'/>
<enum value='3' name='TMXPropertyObjectGroup'/>
<enum value='5' name='TMXPropertyTile'/>
<enum value='-1' name='kCCActionTagInvalid'/>
<enum value='0' name='kCCDirectorProjection2D'/>
<enum value='1' name='kCCDirectorProjection3D'/>
<enum value='2' name='kCCDirectorProjectionCustom'/>
<enum value='1' name='kCCDirectorProjectionDefault'/>
<enum value='3758096384' name='kCCFlipedAll'/>
<enum value='536870911' name='kCCFlippedMask'/>
<enum value='0' name='kCCImageFormatJPEG'/>
<enum value='1' name='kCCImageFormatPNG'/>
<enum value='32' name='kCCItemSize'/>
<enum value='-1' name='kCCLabelAutomaticWidth'/>
<enum value='1' name='kCCLineBreakModeCharacterWrap'/>
<enum value='2' name='kCCLineBreakModeClip'/>
<enum value='3' name='kCCLineBreakModeHeadTruncation'/>
<enum value='5' name='kCCLineBreakModeMiddleTruncation'/>
<enum value='4' name='kCCLineBreakModeTailTruncation'/>
<enum value='0' name='kCCLineBreakModeWordWrap'/>
<enum value='168165376' name='kCCMacVersion_10_6'/>
<enum value='168230912' name='kCCMacVersion_10_7'/>
<enum value='168296448' name='kCCMacVersion_10_8'/>
<enum value='-128' name='kCCMenuHandlerPriority'/>
<enum value='1' name='kCCMenuStateTrackingTouch'/>
<enum value='0' name='kCCMenuStateWaiting'/>
<enum value='-1' name='kCCNodeTagInvalid'/>
<enum value='-1' name='kCCParticleDurationInfinity'/>
<enum value='0' name='kCCParticleModeGravity'/>
<enum value='1' name='kCCParticleModeRadius'/>
<enum value='-1' name='kCCParticleStartRadiusEqualToEndRadius'/>
<enum value='-1' name='kCCParticleStartSizeEqualToEndSize'/>
<enum value='0' name='kCCPositionTypeFree'/>
<enum value='2' name='kCCPositionTypeGrouped'/>
<enum value='1' name='kCCPositionTypeRelative'/>
<enum value='-2147483647' name='kCCPriorityNonSystemMin'/>
<enum value='-2147483648' name='kCCPrioritySystem'/>
<enum value='1' name='kCCProgressTimerTypeBar'/>
<enum value='0' name='kCCProgressTimerTypeRadial'/>
<enum value='4294967294' name='kCCRepeatForever'/>
<enum value='0' name='kCCResolutionUnknown'/>
<enum value='3' name='kCCResolutioniPad'/>
<enum value='4' name='kCCResolutioniPadRetinaDisplay'/>
<enum value='1' name='kCCResolutioniPhone'/>
<enum value='2' name='kCCResolutioniPhoneRetinaDisplay'/>
<enum value='536870912' name='kCCTMXTileDiagonalFlag'/>
<enum value='2147483648' name='kCCTMXTileHorizontalFlag'/>
<enum value='1073741824' name='kCCTMXTileVerticalFlag'/>
<enum value='1' name='kCCTextAlignmentCenter'/>
<enum value='0' name='kCCTextAlignmentLeft'/>
<enum value='2' name='kCCTextAlignmentRight'/>
<enum value='3' name='kCCTexture2DPixelFormat_A8'/>
<enum value='5' name='kCCTexture2DPixelFormat_AI88'/>
<enum value='0' name='kCCTexture2DPixelFormat_Default'/>
<enum value='4' name='kCCTexture2DPixelFormat_I8'/>
<enum value='9' name='kCCTexture2DPixelFormat_PVRTC2'/>
<enum value='8' name='kCCTexture2DPixelFormat_PVRTC4'/>
<enum value='2' name='kCCTexture2DPixelFormat_RGB565'/>
<enum value='7' name='kCCTexture2DPixelFormat_RGB5A1'/>
<enum value='1' name='kCCTexture2DPixelFormat_RGB888'/>
<enum value='6' name='kCCTexture2DPixelFormat_RGBA4444'/>
<enum value='0' name='kCCTexture2DPixelFormat_RGBA8888'/>
<enum value='0' name='kCCTouchBegan'/>
<enum value='3' name='kCCTouchCancelled'/>
<enum value='2' name='kCCTouchEnded'/>
<enum value='4' name='kCCTouchMax'/>
<enum value='1' name='kCCTouchMoved'/>
<enum value='15' name='kCCTouchSelectorAllBits'/>
<enum value='1' name='kCCTouchSelectorBeganBit'/>
<enum value='8' name='kCCTouchSelectorCancelledBit'/>
<enum value='4' name='kCCTouchSelectorEndedBit'/>
<enum value='2' name='kCCTouchSelectorMovedBit'/>
<enum value='0' name='kCCUniformMVPMatrix'/>
<enum value='1' name='kCCUniformSampler'/>
<enum value='2' name='kCCUniform_MAX'/>
<enum value='2' name='kCCVertexAttribFlag_Color'/>
<enum value='0' name='kCCVertexAttribFlag_None'/>
<enum value='7' name='kCCVertexAttribFlag_PosColorTex'/>
<enum value='1' name='kCCVertexAttribFlag_Position'/>
<enum value='4' name='kCCVertexAttribFlag_TexCoords'/>
<enum value='1' name='kCCVertexAttrib_Color'/>
<enum value='3' name='kCCVertexAttrib_MAX'/>
<enum value='0' name='kCCVertexAttrib_Position'/>
<enum value='2' name='kCCVertexAttrib_TexCoords'/>
<enum value='2' name='kCCVerticalTextAlignmentBottom'/>
<enum value='1' name='kCCVerticalTextAlignmentCenter'/>
<enum value='0' name='kCCVerticalTextAlignmentTop'/>
<enum value='67108864' name='kCCiOSVersion_4_0'/>
<enum value='67109120' name='kCCiOSVersion_4_0_1'/>
<enum value='67174400' name='kCCiOSVersion_4_1'/>
<enum value='67239936' name='kCCiOSVersion_4_2'/>
<enum value='67240192' name='kCCiOSVersion_4_2_1'/>
<enum value='67305472' name='kCCiOSVersion_4_3'/>
<enum value='67305728' name='kCCiOSVersion_4_3_1'/>
<enum value='67305984' name='kCCiOSVersion_4_3_2'/>
<enum value='67306240' name='kCCiOSVersion_4_3_3'/>
<enum value='67306496' name='kCCiOSVersion_4_3_4'/>
<enum value='67306752' name='kCCiOSVersion_4_3_5'/>
<enum value='83886080' name='kCCiOSVersion_5_0'/>
<enum value='83886336' name='kCCiOSVersion_5_0_1'/>
<enum value='83951616' name='kCCiOSVersion_5_1_0'/>
<enum value='100663296' name='kCCiOSVersion_6_0_0'/>
<enum value='1' name='kOrientationDownOver'/>
<enum value='0' name='kOrientationLeftOver'/>
<enum value='1' name='kOrientationRightOver'/>
<enum value='0' name='kOrientationUpOver'/>
<enum value='-1' name='kParticleDurationInfinity'/>
<enum value='-1' name='kParticleStartSizeEqualToEndSize'/>
<enum value='0' name='kPositionTypeFree'/>
<enum value='2' name='kPositionTypeGrouped'/>
<function name='CCProfilingBeginTimingBlock'>
<arg type='@' name='timerName' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CCProfilingEndTimingBlock'>
<arg type='@' name='timerName' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CCProfilingResetTimingBlock'>
<arg type='@' name='timerName' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CGAffineToGL'>
<arg const='true' type='^{CGAffineTransform=ffffff}' name='t' declared_type='CGAffineTransform*'/>
<arg type='^f' name='m' declared_type='GLfloat*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='FNTConfigLoadFile'>
<arg type='@' name='file' declared_type='NSString*'/>
<retval type='@' declared_type='CCBMFontConfiguration*'/>
</function>
<function name='FNTConfigRemoveCache'>
<retval type='v' declared_type='void'/>
</function>
<function name='GLToCGAffine'>
<arg const='true' type='^f' name='m' declared_type='GLfloat*'/>
<arg type='^{CGAffineTransform=ffffff}' name='t' declared_type='CGAffineTransform*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='base64Decode'>
<arg type='*' name='in' declared_type='unsigned char*'/>
<arg type='I' name='inLength' declared_type='unsigned int'/>
<arg type='^*' name='out' declared_type='unsigned char**'/>
<retval type='i' declared_type='int'/>
</function>
<function name='ccArrayAppendArray'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type='^{ccArray=II^@}' name='plusArr' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayAppendArrayWithResize'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type='^{ccArray=II^@}' name='plusArr' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayAppendObject'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type='@' name='object' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayAppendObjectWithResize'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type='@' name='object' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayContainsObject'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type='@' name='object' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccArrayDoubleCapacity'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayEnsureExtraCapacity'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type='I' name='extra' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayFastRemoveObject'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type='@' name='object' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayFastRemoveObjectAtIndex'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayFree'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayFullRemoveArray'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type='^{ccArray=II^@}' name='minusArr' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayGetIndexOfObject'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type='@' name='object' declared_type='id'/>
<retval type='I' declared_type='NSUInteger'/>
</function>
<function name='ccArrayInsertObjectAtIndex'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type='@' name='object' declared_type='id'/>
<arg type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayMakeObjectPerformSelectorWithArrayObjects'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type=':' name='sel' declared_type='SEL'/>
<arg type='@' name='object' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayMakeObjectsPerformSelector'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type=':' name='sel' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayMakeObjectsPerformSelectorWithObject'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type=':' name='sel' declared_type='SEL'/>
<arg type='@' name='object' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayNew'>
<arg type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='^{ccArray=II^@}' declared_type='ccArray*'/>
</function>
<function name='ccArrayRemoveAllObjects'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayRemoveArray'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type='^{ccArray=II^@}' name='minusArr' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayRemoveObject'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type='@' name='object' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayRemoveObjectAtIndex'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayShrink'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArraySwapObjectsAtIndexes'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccArray*'/>
<arg type='I' name='index1' declared_type='NSUInteger'/>
<arg type='I' name='index2' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayAppendArray'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccCArray*'/>
<arg type='^{ccArray=II^@}' name='plusArr' declared_type='ccCArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayAppendArrayWithResize'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccCArray*'/>
<arg type='^{ccArray=II^@}' name='plusArr' declared_type='ccCArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayAppendValue'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccCArray*'/>
<arg type='@' name='value' declared_type='CCARRAY_ID'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayAppendValueWithResize'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccCArray*'/>
<arg type='@' name='value' declared_type='CCARRAY_ID'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayContainsValue'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccCArray*'/>
<arg type='@' name='value' declared_type='CCARRAY_ID'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccCArrayDoubleCapacity'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccCArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayEnsureExtraCapacity'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccCArray*'/>
<arg type='I' name='extra' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayFastRemoveValueAtIndex'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccCArray*'/>
<arg type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayFree'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccCArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayFullRemoveArray'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccCArray*'/>
<arg type='^{ccArray=II^@}' name='minusArr' declared_type='ccCArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayGetIndexOfValue'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccCArray*'/>
<arg type='@' name='value' declared_type='CCARRAY_ID'/>
<retval type='I' declared_type='NSUInteger'/>
</function>
<function name='ccCArrayInsertValueAtIndex'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccCArray*'/>
<arg type='@' name='value' declared_type='CCARRAY_ID'/>
<arg type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayNew'>
<arg type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='^{ccArray=II^@}' declared_type='ccCArray*'/>
</function>
<function name='ccCArrayRemoveAllValues'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccCArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayRemoveArray'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccCArray*'/>
<arg type='^{ccArray=II^@}' name='minusArr' declared_type='ccCArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayRemoveValue'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccCArray*'/>
<arg type='@' name='value' declared_type='CCARRAY_ID'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayRemoveValueAtIndex'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccCArray*'/>
<arg type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCardinalSplineAt'>
<arg type='{CGPoint=ff}' name='p0' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='p1' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='p2' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='p3' declared_type='CGPoint'/>
<arg type='f' name='tension' declared_type='CGFloat'/>
<arg type='f' name='t' declared_type='ccTime'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccDrawCardinalSpline'>
<arg type='@' name='config' declared_type='CCPointArray*'/>
<arg type='f' name='tension' declared_type='CGFloat'/>
<arg type='I' name='segments' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawCatmullRom'>
<arg type='@' name='arrayOfControlPoints' declared_type='CCPointArray*'/>
<arg type='I' name='segments' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawCircle'>
<arg type='{CGPoint=ff}' name='center' declared_type='CGPoint'/>
<arg type='f' name='radius' declared_type='float'/>
<arg type='f' name='angle' declared_type='float'/>
<arg type='I' name='segments' declared_type='NSUInteger'/>
<arg type='B' name='drawLineToCenter' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawColor4B'>
<arg type='C' name='r' declared_type='GLubyte'/>
<arg type='C' name='g' declared_type='GLubyte'/>
<arg type='C' name='b' declared_type='GLubyte'/>
<arg type='C' name='a' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawColor4F'>
<arg type='f' name='r' declared_type='GLfloat'/>
<arg type='f' name='g' declared_type='GLfloat'/>
<arg type='f' name='b' declared_type='GLfloat'/>
<arg type='f' name='a' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawCubicBezier'>
<arg type='{CGPoint=ff}' name='origin' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='control1' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='control2' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='destination' declared_type='CGPoint'/>
<arg type='I' name='segments' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawLine'>
<arg type='{CGPoint=ff}' name='origin' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='destination' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawPoint'>
<arg type='{CGPoint=ff}' name='point' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawPoints'>
<arg const='true' type='^{CGPoint=ff}' name='points' declared_type='CGPoint*'/>
<arg type='I' name='numberOfPoints' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawPoly'>
<arg const='true' type='^{CGPoint=ff}' name='vertices' declared_type='CGPoint*'/>
<arg type='I' name='numOfVertices' declared_type='NSUInteger'/>
<arg type='B' name='closePolygon' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawQuadBezier'>
<arg type='{CGPoint=ff}' name='origin' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='control' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='destination' declared_type='CGPoint'/>
<arg type='I' name='segments' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawRect'>
<arg type='{CGPoint=ff}' name='origin' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='destination' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawSolidPoly'>
<arg const='true' type='^{CGPoint=ff}' name='poli' declared_type='CGPoint*'/>
<arg type='I' name='numberOfPoints' declared_type='NSUInteger'/>
<arg type='{ccColor4F=ffff}' name='color' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawSolidRect'>
<arg type='{CGPoint=ff}' name='origin' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='destination' declared_type='CGPoint'/>
<arg type='{ccColor4F=ffff}' name='color' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLActiveTexture'>
<arg type='I' name='textureEnum' declared_type='GLenum'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLBindTexture2D'>
<arg type='I' name='textureId' declared_type='GLuint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLBlendFunc'>
<arg type='I' name='sfactor' declared_type='GLenum'/>
<arg type='I' name='dfactor' declared_type='GLenum'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLDeleteProgram'>
<arg type='I' name='program' declared_type='GLuint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLDeleteTexture'>
<arg type='I' name='textureId' declared_type='GLuint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLEnable'>
<arg type='i' name='flags' declared_type='ccGLServerState'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLEnableVertexAttribs'>
<arg type='I' name='flags' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLGetActiveTexture'>
<retval type='I' declared_type='GLenum'/>
</function>
<function name='ccGLInvalidateStateCache'>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLUseProgram'>
<arg type='I' name='program' declared_type='GLuint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccInflateCCZFile'>
<arg const='true' type='*' name='filename' declared_type='char*'/>
<arg type='^*' name='out' declared_type='unsigned char**'/>
<retval type='i' declared_type='int'/>
</function>
<function name='ccInflateGZipFile'>
<arg const='true' type='*' name='filename' declared_type='char*'/>
<arg type='^*' name='out' declared_type='unsigned char**'/>
<retval type='i' declared_type='int'/>
</function>
<function name='ccInflateMemory'>
<arg type='*' name='in' declared_type='unsigned char*'/>
<arg type='I' name='inLength' declared_type='unsigned int'/>
<arg type='^*' name='out' declared_type='unsigned char**'/>
<retval type='i' declared_type='int'/>
</function>
<function name='ccInflateMemoryWithHint'>
<arg type='*' name='in' declared_type='unsigned char*'/>
<arg type='I' name='inLength' declared_type='unsigned int'/>
<arg type='^*' name='out' declared_type='unsigned char**'/>
<arg type='I' name='outLenghtHint' declared_type='unsigned int'/>
<retval type='i' declared_type='int'/>
</function>
<function name='ccLoadFileIntoMemory'>
<arg const='true' type='*' name='filename' declared_type='char*'/>
<arg type='^*' name='out' declared_type='unsigned char**'/>
<retval type='i' declared_type='NSInteger'/>
</function>
<function name='ccNextPOT'>
<arg type='L' name='value' declared_type='unsigned long'/>
<retval type='L' declared_type='unsigned long'/>
</function>
<function name='ccPointSize'>
<arg type='f' name='pointSize' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccSetProjectionMatrixDirty'>
<retval type='v' declared_type='void'/>
</function>
<function name='ccVertexLineIntersect'>
<arg type='f' name='Ax' declared_type='float'/>
<arg type='f' name='Ay' declared_type='float'/>
<arg type='f' name='Bx' declared_type='float'/>
<arg type='f' name='By' declared_type='float'/>
<arg type='f' name='Cx' declared_type='float'/>
<arg type='f' name='Cy' declared_type='float'/>
<arg type='f' name='Dx' declared_type='float'/>
<arg type='f' name='Dy' declared_type='float'/>
<arg type='^f' name='T' declared_type='float*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccVertexLineToPolygon'>
<arg type='^{CGPoint=ff}' name='points' declared_type='CGPoint*'/>
<arg type='f' name='stroke' declared_type='float'/>
<arg type='^{_ccVertex2F=ff}' name='vertices' declared_type='ccVertex2F*'/>
<arg type='I' name='offset' declared_type='NSUInteger'/>
<arg type='I' name='nuPoints' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='cc_insertionSort'>
<arg type='^{ccArray=II^@}' name='arr' declared_type='ccCArray*'/>
<arg function_pointer='true' type='^?' name='comparator' declared_type='cc_comparator'>
<arg const='true' type='^v' declared_type='void*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='i' declared_type='int'/>
</arg>
<retval type='v' declared_type='void'/>
</function>
<function name='cc_mergesortL'>
<arg type='^{ccArray=II^@}' name='array' declared_type='ccCArray*'/>
<arg type='L' name='width' declared_type='size_t'/>
<arg function_pointer='true' type='^?' name='comparator' declared_type='cc_comparator'>
<arg const='true' type='^v' declared_type='void*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='i' declared_type='int'/>
</arg>
<retval type='i' declared_type='int'/>
</function>
<function name='cc_pointerswap'>
<arg type='^v' name='a' declared_type='void*'/>
<arg type='^v' name='b' declared_type='void*'/>
<arg type='L' name='width' declared_type='size_t'/>
<retval type='v' declared_type='void'/>
</function>
<function inline='true' name='ccc3'>
<arg const='true' type='C' name='r' declared_type='GLubyte'/>
<arg const='true' type='C' name='g' declared_type='GLubyte'/>
<arg const='true' type='C' name='b' declared_type='GLubyte'/>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</function>
<function inline='true' name='ccc4'>
<arg const='true' type='C' name='r' declared_type='GLubyte'/>
<arg const='true' type='C' name='g' declared_type='GLubyte'/>
<arg const='true' type='C' name='b' declared_type='GLubyte'/>
<arg const='true' type='C' name='o' declared_type='GLubyte'/>
<retval type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
</function>
<function inline='true' name='ccc4FEqual'>
<arg type='{ccColor4F=ffff}' name='a' declared_type='ccColor4F'/>
<arg type='{ccColor4F=ffff}' name='b' declared_type='ccColor4F'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function inline='true' name='ccc4FFromccc3B'>
<arg type='{_ccColor3B=CCC}' name='c' declared_type='ccColor3B'/>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</function>
<function inline='true' name='ccc4FFromccc4B'>
<arg type='{_ccColor4B=CCCC}' name='c' declared_type='ccColor4B'/>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</function>
<function inline='true' name='ccc4f'>
<arg const='true' type='f' name='r' declared_type='GLfloat'/>
<arg const='true' type='f' name='g' declared_type='GLfloat'/>
<arg const='true' type='f' name='b' declared_type='GLfloat'/>
<arg const='true' type='f' name='a' declared_type='GLfloat'/>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</function>
<function inline='true' name='ccg'>
<arg const='true' type='i' name='x' declared_type='NSInteger'/>
<arg const='true' type='i' name='y' declared_type='NSInteger'/>
<retval type='{_ccGridSize=ii}' declared_type='ccGridSize'/>
</function>
<function inline='true' name='ccp'>
<arg type='f' name='x' declared_type='CGFloat'/>
<arg type='f' name='y' declared_type='CGFloat'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function inline='true' name='ccpAdd'>
<arg const='true' type='{CGPoint=ff}' name='v1' declared_type='CGPoint'/>
<arg const='true' type='{CGPoint=ff}' name='v2' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpAngle'>
<arg type='{CGPoint=ff}' name='a' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='b' declared_type='CGPoint'/>
<retval type='f' declared_type='float'/>
</function>
<function name='ccpAngleSigned'>
<arg type='{CGPoint=ff}' name='a' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='b' declared_type='CGPoint'/>
<retval type='f' declared_type='float'/>
</function>
<function name='ccpClamp'>
<arg type='{CGPoint=ff}' name='p' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='from' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='to' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpCompMult'>
<arg type='{CGPoint=ff}' name='a' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='b' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpCompOp'>
<arg type='{CGPoint=ff}' name='p' declared_type='CGPoint'/>
<arg function_pointer='true' type='^?' name='opFunc' declared_type='float (*)(float)'>
<arg type='f' declared_type='float'/>
<retval type='f' declared_type='float'/>
</arg>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function inline='true' name='ccpCross'>
<arg const='true' type='{CGPoint=ff}' name='v1' declared_type='CGPoint'/>
<arg const='true' type='{CGPoint=ff}' name='v2' declared_type='CGPoint'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='ccpDistance'>
<arg const='true' type='{CGPoint=ff}' name='v1' declared_type='CGPoint'/>
<arg const='true' type='{CGPoint=ff}' name='v2' declared_type='CGPoint'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function inline='true' name='ccpDistanceSQ'>
<arg const='true' type='{CGPoint=ff}' name='p1' declared_type='CGPoint'/>
<arg const='true' type='{CGPoint=ff}' name='p2' declared_type='CGPoint'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function inline='true' name='ccpDot'>
<arg const='true' type='{CGPoint=ff}' name='v1' declared_type='CGPoint'/>
<arg const='true' type='{CGPoint=ff}' name='v2' declared_type='CGPoint'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='ccpForAngle'>
<arg const='true' type='f' name='a' declared_type='CGFloat'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpFromSize'>
<arg type='{CGSize=ff}' name='s' declared_type='CGSize'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpFuzzyEqual'>
<arg type='{CGPoint=ff}' name='a' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='b' declared_type='CGPoint'/>
<arg type='f' name='variance' declared_type='float'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccpIntersectPoint'>
<arg type='{CGPoint=ff}' name='A' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='B' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='C' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='D' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpLength'>
<arg const='true' type='{CGPoint=ff}' name='v' declared_type='CGPoint'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function inline='true' name='ccpLengthSQ'>
<arg const='true' type='{CGPoint=ff}' name='v' declared_type='CGPoint'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='ccpLerp'>
<arg type='{CGPoint=ff}' name='a' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='b' declared_type='CGPoint'/>
<arg type='f' name='alpha' declared_type='float'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpLineIntersect'>
<arg type='{CGPoint=ff}' name='p1' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='p2' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='p3' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='p4' declared_type='CGPoint'/>
<arg type='^f' name='s' declared_type='float*'/>
<arg type='^f' name='t' declared_type='float*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function inline='true' name='ccpMidpoint'>
<arg const='true' type='{CGPoint=ff}' name='v1' declared_type='CGPoint'/>
<arg const='true' type='{CGPoint=ff}' name='v2' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function inline='true' name='ccpMult'>
<arg const='true' type='{CGPoint=ff}' name='v' declared_type='CGPoint'/>
<arg const='true' type='f' name='s' declared_type='CGFloat'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function inline='true' name='ccpNeg'>
<arg const='true' type='{CGPoint=ff}' name='v' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpNormalize'>
<arg const='true' type='{CGPoint=ff}' name='v' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function inline='true' name='ccpPerp'>
<arg const='true' type='{CGPoint=ff}' name='v' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function inline='true' name='ccpProject'>
<arg const='true' type='{CGPoint=ff}' name='v1' declared_type='CGPoint'/>
<arg const='true' type='{CGPoint=ff}' name='v2' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function inline='true' name='ccpRPerp'>
<arg const='true' type='{CGPoint=ff}' name='v' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function inline='true' name='ccpRotate'>
<arg const='true' type='{CGPoint=ff}' name='v1' declared_type='CGPoint'/>
<arg const='true' type='{CGPoint=ff}' name='v2' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpRotateByAngle'>
<arg type='{CGPoint=ff}' name='v' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='pivot' declared_type='CGPoint'/>
<arg type='f' name='angle' declared_type='float'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpSegmentIntersect'>
<arg type='{CGPoint=ff}' name='A' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='B' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='C' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='D' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function inline='true' name='ccpSub'>
<arg const='true' type='{CGPoint=ff}' name='v1' declared_type='CGPoint'/>
<arg const='true' type='{CGPoint=ff}' name='v2' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpToAngle'>
<arg const='true' type='{CGPoint=ff}' name='v' declared_type='CGPoint'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function inline='true' name='ccpUnrotate'>
<arg const='true' type='{CGPoint=ff}' name='v1' declared_type='CGPoint'/>
<arg const='true' type='{CGPoint=ff}' name='v2' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='clampf'>
<arg type='f' name='value' declared_type='float'/>
<arg type='f' name='min_inclusive' declared_type='float'/>
<arg type='f' name='max_inclusive' declared_type='float'/>
<retval type='f' declared_type='float'/>
</function>
<function name='cocos2dVersion'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='sortByPriority'>
<arg type='@' name='first' declared_type='id'/>
<arg type='@' name='second' declared_type='id'/>
<arg type='^v' name='context' declared_type='void*'/>
<retval type='i' declared_type='NSComparisonResult'/>
</function>
<function name='tgaDestroy'>
<arg type='^{sImageTGA=iCCss*i}' name='info' declared_type='tImageTGA*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='tgaLoad'>
<arg const='true' type='*' name='filename' declared_type='char*'/>
<retval type='^{sImageTGA=iCCss*i}' declared_type='tImageTGA*'/>
</function>
<function name='tgaLoadHeader'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' name='file' declared_type='FILE*'/>
<arg type='^{sImageTGA=iCCss*i}' name='info' declared_type='tImageTGA*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='tgaLoadImageData'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' name='file' declared_type='FILE*'/>
<arg type='^{sImageTGA=iCCss*i}' name='info' declared_type='tImageTGA*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='tgaRGBtogreyscale'>
<arg type='^{sImageTGA=iCCss*i}' name='info' declared_type='tImageTGA*'/>
<retval type='v' declared_type='void'/>
</function>
<class name='CCAccelAmplitude'>
<method selector='actionWithAction:duration:' class_method='true'>
<arg index='0' type='@' name='action' declared_type='CCAction*'/>
<arg index='1' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:duration:'>
<arg index='0' type='@' name='action' declared_type='CCAction*'/>
<arg index='1' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setRate:'>
<arg index='0' type='f' name='rate' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCAccelDeccelAmplitude'>
<method selector='actionWithAction:duration:' class_method='true'>
<arg index='0' type='@' name='action' declared_type='CCAction*'/>
<arg index='1' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:duration:'>
<arg index='0' type='@' name='action' declared_type='CCAction*'/>
<arg index='1' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setRate:'>
<arg index='0' type='f' name='rate' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCAction'>
<method selector='action' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='copyWithZone:'>
<arg index='0' type='^{_NSZone=}' name='zone' declared_type='NSZone*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isDone'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='originalTarget'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setTag:'>
<arg index='0' type='i' name='tag' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startWithTarget:'>
<arg index='0' type='@' name='target' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='step:'>
<arg index='0' type='f' name='dt' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stop'>
<retval type='v' declared_type='void'/>
</method>
<method selector='tag'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='target'>
<retval type='@' declared_type='id'/>
</method>
<method selector='update:'>
<arg index='0' type='f' name='time' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCActionCamera'>
<method selector='startWithTarget:'>
<arg index='0' type='@' name='aTarget' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCActionEase'>
<method selector='actionWithAction:' class_method='true'>
<arg index='0' type='@' name='action' declared_type='CCActionInterval*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:'>
<arg index='0' type='@' name='action' declared_type='CCActionInterval*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCActionInstant'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCActionInterval'>
<method selector='actionWithDuration:' class_method='true'>
<arg index='0' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='elapsed'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='initWithDuration:'>
<arg index='0' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isDone'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reverse'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</class>
<class name='CCActionManager'>
<method selector='addAction:target:paused:'>
<arg index='0' type='@' name='action' declared_type='CCAction*'/>
<arg index='1' type='@' name='target' declared_type='id'/>
<arg index='2' type='B' name='paused' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getActionByTag:target:'>
<arg index='0' type='i' name='tag' declared_type='NSInteger'/>
<arg index='1' type='@' name='target' declared_type='id'/>
<retval type='@' declared_type='CCAction*'/>
</method>
<method selector='numberOfRunningActionsInTarget:'>
<arg index='0' type='@' name='target' declared_type='id'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='pauseAllRunningActions'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='pauseTarget:'>
<arg index='0' type='@' name='target' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAction:'>
<arg index='0' type='@' name='action' declared_type='CCAction*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeActionByTag:target:'>
<arg index='0' type='i' name='tag' declared_type='NSInteger'/>
<arg index='1' type='@' name='target' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllActionsFromTarget:'>
<arg index='0' type='@' name='target' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeTarget:'>
<arg index='0' type='@' name='target' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeTargets:'>
<arg index='0' type='@' name='targetsToResume' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCActionTween'>
<method selector='actionWithDuration:key:from:to:' class_method='true'>
<arg index='0' type='f' name='aDuration' declared_type='ccTime'/>
<arg index='1' type='@' name='key' declared_type='NSString*'/>
<arg index='2' type='f' name='from' declared_type='float'/>
<arg index='3' type='f' name='to' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:key:from:to:'>
<arg index='0' type='f' name='aDuration' declared_type='ccTime'/>
<arg index='1' type='@' name='key' declared_type='NSString*'/>
<arg index='2' type='f' name='from' declared_type='float'/>
<arg index='3' type='f' name='to' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCAnimate'>
<method selector='actionWithAnimation:' class_method='true'>
<arg index='0' type='@' name='animation' declared_type='CCAnimation*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='animation'>
<retval type='@' declared_type='CCAnimation*'/>
</method>
<method selector='initWithAnimation:'>
<arg index='0' type='@' name='animation' declared_type='CCAnimation*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAnimation:'>
<arg index='0' type='@' name='animation' declared_type='CCAnimation*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCAnimation'>
<method selector='addSpriteFrame:'>
<arg index='0' type='@' name='frame' declared_type='CCSpriteFrame*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFrameWithFilename:'>
<arg index='0' type='@' name='filename' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFrameWithTexture:rect:'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<arg index='1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='animation' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='animationWithAnimationFrames:delayPerUnit:loops:' class_method='true'>
<arg index='0' type='@' name='arrayOfAnimationFrames' declared_type='NSArray*'/>
<arg index='1' type='f' name='delayPerUnit' declared_type='float'/>
<arg index='2' type='I' name='loops' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='animationWithSpriteFrames:' class_method='true'>
<arg index='0' type='@' name='arrayOfSpriteFrameNames' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='animationWithSpriteFrames:delay:' class_method='true'>
<arg index='0' type='@' name='arrayOfSpriteFrameNames' declared_type='NSArray*'/>
<arg index='1' type='f' name='delay' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='delayPerUnit'>
<retval type='f' declared_type='float'/>
</method>
<method selector='duration'>
<retval type='f' declared_type='float'/>
</method>
<method selector='frames'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='initWithAnimationFrames:delayPerUnit:loops:'>
<arg index='0' type='@' name='arrayOfAnimationFrames' declared_type='NSArray*'/>
<arg index='1' type='f' name='delayPerUnit' declared_type='float'/>
<arg index='2' type='I' name='loops' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSpriteFrames:'>
<arg index='0' type='@' name='arrayOfSpriteFrameNames' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSpriteFrames:delay:'>
<arg index='0' type='@' name='arrayOfSpriteFrameNames' declared_type='NSArray*'/>
<arg index='1' type='f' name='delay' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='loops'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='restoreOriginalFrame'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDelayPerUnit:'>
<arg index='0' type='f' name='delayPerUnit' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrames:'>
<arg index='0' type='@' name='frames' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLoops:'>
<arg index='0' type='I' name='loops' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRestoreOriginalFrame:'>
<arg index='0' type='B' name='restoreOriginalFrame' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='totalDelayUnits'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='CCAnimationCache'>
<method selector='addAnimation:name:'>
<arg index='0' type='@' name='animation' declared_type='CCAnimation*'/>
<arg index='1' type='@' name='name' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAnimationsWithDictionary:'>
<arg index='0' type='@' name='dictionary' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAnimationsWithFile:'>
<arg index='0' type='@' name='plist' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='animationByName:'>
<arg index='0' type='@' name='name' declared_type='NSString*'/>
<retval type='@' declared_type='CCAnimation*'/>
</method>
<method selector='purgeSharedAnimationCache' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAnimationByName:'>
<arg index='0' type='@' name='name' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedAnimationCache' class_method='true'>
<retval type='@' declared_type='CCAnimationCache*'/>
</method>
</class>
<class name='CCAnimationFrame'>
<method selector='delayUnits'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithSpriteFrame:delayUnits:userInfo:'>
<arg index='0' type='@' name='spriteFrame' declared_type='CCSpriteFrame*'/>
<arg index='1' type='f' name='delayUnits' declared_type='float'/>
<arg index='2' type='@' name='userInfo' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDelayUnits:'>
<arg index='0' type='f' name='delayUnits' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpriteFrame:'>
<arg index='0' type='@' name='spriteFrame' declared_type='CCSpriteFrame*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserInfo:'>
<arg index='0' type='@' name='userInfo' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='spriteFrame'>
<retval type='@' declared_type='CCSpriteFrame*'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='CCArray'>
<method selector='addObject:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjectsFromArray:'>
<arg index='0' type='@' name='otherArray' declared_type='CCArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjectsFromNSArray:'>
<arg index='0' type='@' name='otherArray' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='array' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='arrayWithArray:' class_method='true'>
<arg index='0' type='@' name='otherArray' declared_type='CCArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='arrayWithCapacity:' class_method='true'>
<arg index='0' type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='arrayWithNSArray:' class_method='true'>
<arg index='0' type='@' name='otherArray' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='capacity'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='containsObject:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='exchangeObject:withObject:'>
<arg index='0' type='@' name='object1' declared_type='id'/>
<arg index='1' type='@' name='object2' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='exchangeObjectAtIndex:withObjectAtIndex:'>
<arg index='0' type='I' name='index1' declared_type='NSUInteger'/>
<arg index='1' type='I' name='index2' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fastRemoveObject:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fastRemoveObjectAtIndex:'>
<arg index='0' type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getNSArray'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='indexOfObject:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='initWithArray:'>
<arg index='0' type='@' name='otherArray' declared_type='CCArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCapacity:'>
<arg index='0' type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithNSArray:'>
<arg index='0' type='@' name='otherArray' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertObject:atIndex:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertionSort:'>
<arg index='0' type=':' name='selector' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertionSortUsingCFuncComparator:'>
<arg index='0' function_pointer='true' type='^?' name='comparator' declared_type='int (*)(void *, void *)'>
<arg const='true' type='^v' declared_type='void*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='i' declared_type='int'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='isEqualToArray:'>
<arg index='0' type='@' name='otherArray' declared_type='CCArray*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='makeObjectPerformSelectorWithArrayObjects:selector:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type=':' name='aSelector' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeObjectsPerformSelector:'>
<arg index='0' type=':' name='aSelector' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeObjectsPerformSelector:withObject:'>
<arg index='0' type=':' name='aSelector' declared_type='SEL'/>
<arg index='1' type='@' name='object' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mergesortLUsingCFuncComparator:'>
<arg index='0' function_pointer='true' type='^?' name='comparator' declared_type='int (*)(void *, void *)'>
<arg const='true' type='^v' declared_type='void*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='i' declared_type='int'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='objectAtIndex:'>
<arg index='0' type='I' name='index' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='qsortUsingCFuncComparator:'>
<arg index='0' function_pointer='true' type='^?' name='comparator' declared_type='int (*)(void *, void *)'>
<arg const='true' type='^v' declared_type='void*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='i' declared_type='int'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='randomObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='reduceMemoryFootprint'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeLastObject'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectAtIndex:'>
<arg index='0' type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsInArray:'>
<arg index='0' type='@' name='otherArray' declared_type='CCArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectAtIndex:withObject:'>
<arg index='0' type='I' name='index' declared_type='NSUInteger'/>
<arg index='1' type='@' name='anObject' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reverseObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingFunction:context:'>
<arg index='0' function_pointer='true' type='^?' name='compare' declared_type='NSInteger (*)(id, id, void *)'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type='i' declared_type='NSInteger'/>
</arg>
<arg index='1' type='^v' name='context' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCAtlasNode'>
<method selector='atlasWithTileFile:tileWidth:tileHeight:itemsToRender:' class_method='true'>
<arg index='0' type='@' name='tile' declared_type='NSString*'/>
<arg index='1' type='I' name='w' declared_type='NSUInteger'/>
<arg index='2' type='I' name='h' declared_type='NSUInteger'/>
<arg index='3' type='I' name='c' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithTileFile:tileWidth:tileHeight:itemsToRender:'>
<arg index='0' type='@' name='tile' declared_type='NSString*'/>
<arg index='1' type='I' name='w' declared_type='NSUInteger'/>
<arg index='2' type='I' name='h' declared_type='NSUInteger'/>
<arg index='3' type='I' name='c' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='quadsToDraw'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' type='{_ccBlendFunc=II}' name='blendFunc' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg index='0' type='{_ccColor3B=CCC}' name='color' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg index='0' type='C' name='opacity' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setQuadsToDraw:'>
<arg index='0' type='I' name='quadsToDraw' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureAtlas:'>
<arg index='0' type='@' name='textureAtlas' declared_type='CCTextureAtlas*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textureAtlas'>
<retval type='@' declared_type='CCTextureAtlas*'/>
</method>
<method selector='updateAtlasValues'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCBMFontConfiguration'>
<method selector='atlasName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='configurationWithFNTFile:' class_method='true'>
<arg index='0' type='@' name='FNTfile' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFNTfile:'>
<arg index='0' type='@' name='FNTfile' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAtlasName:'>
<arg index='0' type='@' name='atlasName' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCBezierBy'>
<method selector='actionWithDuration:bezier:' class_method='true'>
<arg index='0' type='f' name='t' declared_type='ccTime'/>
<arg index='1' type='{_ccBezierConfig={CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}' name='c' declared_type='ccBezierConfig'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:bezier:'>
<arg index='0' type='f' name='t' declared_type='ccTime'/>
<arg index='1' type='{_ccBezierConfig={CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}' name='c' declared_type='ccBezierConfig'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCBezierTo'>
<method selector='startWithTarget:'>
<arg index='0' type='@' name='aTarget' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCBlink'>
<method selector='actionWithDuration:blinks:' class_method='true'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='I' name='blinks' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:blinks:'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='I' name='blinks' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCallBlock'>
<method selector='actionWithBlock:' class_method='true'>
<arg index='0' function_pointer='true' type='@?' name='block' declared_type='void (^)()'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBlock:'>
<arg index='0' function_pointer='true' type='@?' name='block' declared_type='void (^)()'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCallBlockN'>
<method selector='actionWithBlock:' class_method='true'>
<arg index='0' function_pointer='true' type='@?' name='block' declared_type='void (^)(CCNode *)'>
<arg type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBlock:'>
<arg index='0' function_pointer='true' type='@?' name='block' declared_type='void (^)(CCNode *)'>
<arg type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCallBlockO'>
<method selector='actionWithBlock:object:' class_method='true'>
<arg index='0' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='1' type='@' name='object' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBlock:object:'>
<arg index='0' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='1' type='@' name='object' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='object'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setObject:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCallFunc'>
<method selector='actionWithTarget:selector:' class_method='true'>
<arg index='0' type='@' name='t' declared_type='id'/>
<arg index='1' type=':' name='s' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithTarget:selector:'>
<arg index='0' type='@' name='t' declared_type='id'/>
<arg index='1' type=':' name='s' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setTargetCallback:'>
<arg index='0' type='@' name='targetCallback' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='targetCallback'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCallFuncN'>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCallFuncND'>
<method selector='actionWithTarget:selector:data:' class_method='true'>
<arg index='0' type='@' name='t' declared_type='id'/>
<arg index='1' type=':' name='s' declared_type='SEL'/>
<arg index='2' type='^v' name='d' declared_type='void*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='callbackMethod'>
<retval function_pointer='true' type='^?' declared_type='CC_CALLBACK_ND'>
<arg type='@' declared_type='id'/>
<arg type=':' declared_type='SEL'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='initWithTarget:selector:data:'>
<arg index='0' type='@' name='t' declared_type='id'/>
<arg index='1' type=':' name='s' declared_type='SEL'/>
<arg index='2' type='^v' name='d' declared_type='void*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setCallbackMethod:'>
<arg index='0' function_pointer='true' type='^?' name='callbackMethod' declared_type='CC_CALLBACK_ND'>
<arg type='@' declared_type='id'/>
<arg type=':' declared_type='SEL'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCallFuncO'>
<method selector='actionWithTarget:selector:object:' class_method='true'>
<arg index='0' type='@' name='t' declared_type='id'/>
<arg index='1' type=':' name='s' declared_type='SEL'/>
<arg index='2' type='@' name='object' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:object:'>
<arg index='0' type='@' name='t' declared_type='id'/>
<arg index='1' type=':' name='s' declared_type='SEL'/>
<arg index='2' type='@' name='object' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='object'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setObject:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCamera'>
<method selector='centerX:centerY:centerZ:'>
<arg index='0' type='^f' name='x' declared_type='float*'/>
<arg index='1' type='^f' name='y' declared_type='float*'/>
<arg index='2' type='^f' name='z' declared_type='float*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dirty'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='eyeX:eyeY:eyeZ:'>
<arg index='0' type='^f' name='x' declared_type='float*'/>
<arg index='1' type='^f' name='y' declared_type='float*'/>
<arg index='2' type='^f' name='z' declared_type='float*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getZEye' class_method='true'>
<retval type='f' declared_type='float'/>
</method>
<method selector='locate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='restore'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCenterX:centerY:centerZ:'>
<arg index='0' type='f' name='x' declared_type='float'/>
<arg index='1' type='f' name='y' declared_type='float'/>
<arg index='2' type='f' name='z' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDirty:'>
<arg index='0' type='B' name='dirty' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEyeX:eyeY:eyeZ:'>
<arg index='0' type='f' name='x' declared_type='float'/>
<arg index='1' type='f' name='y' declared_type='float'/>
<arg index='2' type='f' name='z' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUpX:upY:upZ:'>
<arg index='0' type='f' name='x' declared_type='float'/>
<arg index='1' type='f' name='y' declared_type='float'/>
<arg index='2' type='f' name='z' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='upX:upY:upZ:'>
<arg index='0' type='^f' name='x' declared_type='float*'/>
<arg index='1' type='^f' name='y' declared_type='float*'/>
<arg index='2' type='^f' name='z' declared_type='float*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCardinalSplineBy'>
<method selector='startWithTarget:'>
<arg index='0' type='@' name='target' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCardinalSplineTo'>
<method selector='actionWithDuration:points:tension:' class_method='true'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='@' name='points' declared_type='CCPointArray*'/>
<arg index='2' type='f' name='tension' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:points:tension:'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='@' name='points' declared_type='CCPointArray*'/>
<arg index='2' type='f' name='tension' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='points'>
<retval type='@' declared_type='CCPointArray*'/>
</method>
<method selector='setPoints:'>
<arg index='0' type='@' name='points' declared_type='CCPointArray*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCatmullRomBy'>
<method selector='actionWithDuration:points:' class_method='true'>
<arg index='0' type='f' name='dt' declared_type='ccTime'/>
<arg index='1' type='@' name='points' declared_type='CCPointArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:points:'>
<arg index='0' type='f' name='dt' declared_type='ccTime'/>
<arg index='1' type='@' name='points' declared_type='CCPointArray*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCatmullRomTo'>
<method selector='actionWithDuration:points:' class_method='true'>
<arg index='0' type='f' name='dt' declared_type='ccTime'/>
<arg index='1' type='@' name='points' declared_type='CCPointArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:points:'>
<arg index='0' type='f' name='dt' declared_type='ccTime'/>
<arg index='1' type='@' name='points' declared_type='CCPointArray*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCConfiguration'>
<method selector='OSVersion'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='checkForGLExtension:'>
<arg index='0' type='@' name='searchName' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='maxModelviewStackDepth'>
<retval type='i' declared_type='GLint'/>
</method>
<method selector='maxTextureSize'>
<retval type='i' declared_type='GLint'/>
</method>
<method selector='maxTextureUnits'>
<retval type='i' declared_type='GLint'/>
</method>
<method selector='sharedConfiguration' class_method='true'>
<retval type='@' declared_type='CCConfiguration*'/>
</method>
<method selector='supportsBGRA8888'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='supportsDiscardFramebuffer'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='supportsNPOT'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='supportsPVRTC'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='supportsShareableVAO'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CCDeccelAmplitude'>
<method selector='actionWithAction:duration:' class_method='true'>
<arg index='0' type='@' name='action' declared_type='CCAction*'/>
<arg index='1' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:duration:'>
<arg index='0' type='@' name='action' declared_type='CCAction*'/>
<arg index='1' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setRate:'>
<arg index='0' type='f' name='rate' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCDelayTime'>
<method selector='update:'>
<arg index='0' type='f' name='dt' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCDirector'>
<method selector='actionManager'>
<retval type='@' declared_type='CCActionManager*'/>
</method>
<method selector='animationInterval'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='contentScaleFactor'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='convertToGL:'>
<arg index='0' type='{CGPoint=ff}' name='p' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertToUI:'>
<arg index='0' type='{CGPoint=ff}' name='p' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='createStatsLabel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='displayStats'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='drawScene'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableRetinaDisplay:'>
<arg index='0' type='B' name='enableRetina' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='end'>
<retval type='v' declared_type='void'/>
</method>
<method selector='getZEye'>
<retval type='f' declared_type='float'/>
</method>
<method selector='isAnimating'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isPaused'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='nextDeltaTimeZero'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='notificationNode'>
<retval type='@' declared_type='id'/>
</method>
<method selector='pause'>
<retval type='v' declared_type='void'/>
</method>
<method selector='popScene'>
<retval type='v' declared_type='void'/>
</method>
<method selector='popToRootScene'>
<retval type='v' declared_type='void'/>
</method>
<method selector='projection'>
<retval type='i' declared_type='ccDirectorProjection'/>
</method>
<method selector='purgeCachedData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='pushScene:'>
<arg index='0' type='@' name='scene' declared_type='CCScene*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceScene:'>
<arg index='0' type='@' name='scene' declared_type='CCScene*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reshapeProjection:'>
<arg index='0' type='{CGSize=ff}' name='newWindowSize' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resume'>
<retval type='v' declared_type='void'/>
</method>
<method selector='runWithScene:'>
<arg index='0' type='@' name='scene' declared_type='CCScene*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='runningScene'>
<retval type='@' declared_type='CCScene*'/>
</method>
<method selector='runningThread'>
<retval type='@' declared_type='NSThread*'/>
</method>
<method selector='scheduler'>
<retval type='@' declared_type='CCScheduler*'/>
</method>
<method selector='secondsPerFrame'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='sendCleanupToScene'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setActionManager:'>
<arg index='0' type='@' name='actionManager' declared_type='CCActionManager*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlphaBlending:'>
<arg index='0' type='B' name='on' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAnimationInterval:'>
<arg index='0' type='d' name='animationInterval' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentScaleFactor:'>
<arg index='0' type='f' name='scaleFactor' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' name='delegate' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDepthTest:'>
<arg index='0' type='B' name='on' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayStats:'>
<arg index='0' type='B' name='displayStats' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGLDefaultValues'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNextDeltaTimeZero:'>
<arg index='0' type='B' name='nextDeltaTimeZero' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNotificationNode:'>
<arg index='0' type='@' name='notificationNode' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProjection:'>
<arg index='0' type='i' name='projection' declared_type='ccDirectorProjection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScheduler:'>
<arg index='0' type='@' name='scheduler' declared_type='CCScheduler*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTouchDispatcher:'>
<arg index='0' type='@' name='touchDispatcher' declared_type='CCTouchDispatcher*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setView:'>
<arg index='0' type='@' name='view' declared_type='CCGLView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedDirector' class_method='true'>
<retval type='@' declared_type='CCDirector*'/>
</method>
<method selector='startAnimation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopAnimation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='totalFrames'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='touchDispatcher'>
<retval type='@' declared_type='CCTouchDispatcher*'/>
</method>
<method selector='view'>
<retval type='@' declared_type='CCGLView*'/>
</method>
<method selector='winSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='winSizeInPixels'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='CCDirectorDisplayLink'>
<method selector='mainLoop:'>
<arg index='0' type='@' name='sender' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCDirectorIOS'>
<method selector='drawScene'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCES2Renderer'>
<method selector='colorRenderbuffer'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='context'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='defaultFramebuffer'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='msaaColorbuffer'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='msaaFramebuffer'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='resizeFromLayer:'>
<arg index='0' type='@' name='layer' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CCEaseElastic'>
<method selector='actionWithAction:period:' class_method='true'>
<arg index='0' type='@' name='action' declared_type='CCActionInterval*'/>
<arg index='1' type='f' name='period' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:period:'>
<arg index='0' type='@' name='action' declared_type='CCActionInterval*'/>
<arg index='1' type='f' name='period' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='period'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setPeriod:'>
<arg index='0' type='f' name='period' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseRateAction'>
<method selector='actionWithAction:rate:' class_method='true'>
<arg index='0' type='@' name='action' declared_type='CCActionInterval*'/>
<arg index='1' type='f' name='rate' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:rate:'>
<arg index='0' type='@' name='action' declared_type='CCActionInterval*'/>
<arg index='1' type='f' name='rate' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setRate:'>
<arg index='0' type='f' name='rate' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCFadeIn'>
<method selector='update:'>
<arg index='0' type='f' name='dt' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCFadeOut'>
<method selector='update:'>
<arg index='0' type='f' name='dt' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCFadeTo'>
<method selector='actionWithDuration:opacity:' class_method='true'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='C' name='opactiy' declared_type='GLubyte'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:opacity:'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='C' name='opacity' declared_type='GLubyte'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCFileUtils'>
<method selector='bundle'>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='enableFallbackSuffixes'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager'>
<retval type='@' declared_type='NSFileManager*'/>
</method>
<method selector='fullPathFromRelativePath:'>
<arg index='0' type='@' name='relPath' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fullPathFromRelativePath:resolutionType:'>
<arg index='0' type='@' name='relPath' declared_type='NSString*'/>
<arg index='1' type='^i' name='resolutionType' declared_type='ccResolutionType*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='iPadFileExistsAtPath:'>
<arg index='0' type='@' name='filename' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='iPadRetinaDisplayFileExistsAtPath:'>
<arg index='0' type='@' name='filename' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='iPadRetinaDisplaySuffix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='iPadSuffix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='iPhoneRetinaDisplayFileExistsAtPath:'>
<arg index='0' type='@' name='filename' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='iPhoneRetinaDisplaySuffix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='purgeCachedEntries'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSuffixFromFile:'>
<arg index='0' type='@' name='path' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setBundle:'>
<arg index='0' type='@' name='bundle' declared_type='NSBundle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnableFallbackSuffixes:'>
<arg index='0' type='B' name='enableFallbackSuffixes' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFileManager:'>
<arg index='0' type='@' name='fileManager' declared_type='NSFileManager*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setiPadRetinaDisplaySuffix:'>
<arg index='0' type='@' name='iPadRetinaDisplaySuffix' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setiPadSuffix:'>
<arg index='0' type='@' name='iPadSuffix' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setiPhoneRetinaDisplaySuffix:'>
<arg index='0' type='@' name='iPhoneRetinaDisplaySuffix' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedFileUtils' class_method='true'>
<retval type='@' declared_type='CCFileUtils*'/>
</method>
</class>
<class name='CCFiniteTimeAction'>
<method selector='duration'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='reverse'>
<retval type='@' declared_type='CCFiniteTimeAction*'/>
</method>
<method selector='setDuration:'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCFlipX'>
<method selector='actionWithFlipX:' class_method='true'>
<arg index='0' type='B' name='x' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFlipX:'>
<arg index='0' type='B' name='x' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCFlipX3D'>
<method selector='actionWithDuration:' class_method='true'>
<arg index='0' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:'>
<arg index='0' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCFlipY'>
<method selector='actionWithFlipY:' class_method='true'>
<arg index='0' type='B' name='y' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFlipY:'>
<arg index='0' type='B' name='y' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCFollow'>
<method selector='actionWithTarget:' class_method='true'>
<arg index='0' type='@' name='followedNode' declared_type='CCNode*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='actionWithTarget:worldBoundary:' class_method='true'>
<arg index='0' type='@' name='followedNode' declared_type='CCNode*'/>
<arg index='1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='boundarySet'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithTarget:'>
<arg index='0' type='@' name='followedNode' declared_type='CCNode*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:worldBoundary:'>
<arg index='0' type='@' name='followedNode' declared_type='CCNode*'/>
<arg index='1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setBoundarySet:'>
<arg index='0' type='B' name='boundarySet' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCGLProgram'>
<method selector='addAttribute:index:'>
<arg index='0' type='@' name='attributeName' declared_type='NSString*'/>
<arg index='1' type='I' name='index' declared_type='GLuint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fragmentShaderLog'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithVertexShaderByteArray:fragmentShaderByteArray:'>
<arg const='true' index='0' type='*' name='vShaderByteArray' declared_type='GLchar*'/>
<arg const='true' index='1' type='*' name='fShaderByteArray' declared_type='GLchar*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithVertexShaderFilename:fragmentShaderFilename:'>
<arg index='0' type='@' name='vShaderFilename' declared_type='NSString*'/>
<arg index='1' type='@' name='fShaderFilename' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='link'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='programLog'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setUniformForModelViewProjectionMatrix'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:with2fv:count:'>
<arg index='0' type='I' name='location' declared_type='NSUInteger'/>
<arg index='1' type='^f' name='floats' declared_type='GLfloat*'/>
<arg index='2' type='I' name='numberOfArrays' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:with3fv:count:'>
<arg index='0' type='I' name='location' declared_type='NSUInteger'/>
<arg index='1' type='^f' name='floats' declared_type='GLfloat*'/>
<arg index='2' type='I' name='numberOfArrays' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:with4fv:count:'>
<arg index='0' type='I' name='location' declared_type='NSUInteger'/>
<arg index='1' type='^v' name='floats' declared_type='GLvoid*'/>
<arg index='2' type='I' name='numberOfArrays' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withF1:'>
<arg index='0' type='I' name='location' declared_type='NSUInteger'/>
<arg index='1' type='f' name='f1' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withF1:f2:'>
<arg index='0' type='I' name='location' declared_type='NSUInteger'/>
<arg index='1' type='f' name='f1' declared_type='GLfloat'/>
<arg index='2' type='f' name='f2' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withF1:f2:f3:'>
<arg index='0' type='I' name='location' declared_type='NSUInteger'/>
<arg index='1' type='f' name='f1' declared_type='GLfloat'/>
<arg index='2' type='f' name='f2' declared_type='GLfloat'/>
<arg index='3' type='f' name='f3' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withF1:f2:f3:f4:'>
<arg index='0' type='I' name='location' declared_type='NSUInteger'/>
<arg index='1' type='f' name='f1' declared_type='GLfloat'/>
<arg index='2' type='f' name='f2' declared_type='GLfloat'/>
<arg index='3' type='f' name='f3' declared_type='GLfloat'/>
<arg index='4' type='f' name='f4' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withI1:'>
<arg index='0' type='I' name='location' declared_type='NSUInteger'/>
<arg index='1' type='i' name='i1' declared_type='GLint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withMatrix4fv:count:'>
<arg index='0' type='I' name='location' declared_type='NSUInteger'/>
<arg index='1' type='^v' name='matrix_array' declared_type='GLvoid*'/>
<arg index='2' type='I' name='numberOfMatrix' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateUniforms'>
<retval type='v' declared_type='void'/>
</method>
<method selector='use'>
<retval type='v' declared_type='void'/>
</method>
<method selector='vertexShaderLog'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='CCGLView'>
<method selector='context'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='convertPointFromViewToSurface:'>
<arg index='0' type='{CGPoint=ff}' name='point' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertRectFromViewToSurface:'>
<arg index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='depthFormat'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='initWithFrame:'>
<arg index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='frame' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFrame:pixelFormat:'>
<arg index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='frame' declared_type='CGRect'/>
<arg index='1' type='@' name='format' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFrame:pixelFormat:depthFormat:preserveBackbuffer:sharegroup:multiSampling:numberOfSamples:'>
<arg index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='frame' declared_type='CGRect'/>
<arg index='1' type='@' name='format' declared_type='NSString*'/>
<arg index='2' type='I' name='depth' declared_type='GLuint'/>
<arg index='3' type='B' name='retained' declared_type='BOOL'/>
<arg index='4' type='@' name='sharegroup' declared_type='id'/>
<arg index='5' type='B' name='sampling' declared_type='BOOL'/>
<arg index='6' type='I' name='nSamples' declared_type='unsigned int'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lockOpenGLContext'>
<retval type='v' declared_type='void'/>
</method>
<method selector='multiSampling'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pixelFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setMultiSampling:'>
<arg index='0' type='B' name='multiSampling' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTouchDelegate:'>
<arg index='0' type='@' name='touchDelegate' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='surfaceSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='swapBuffers'>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchDelegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='unlockOpenGLContext'>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewWithFrame:' class_method='true'>
<arg index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='frame' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='viewWithFrame:pixelFormat:' class_method='true'>
<arg index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='frame' declared_type='CGRect'/>
<arg index='1' type='@' name='format' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='viewWithFrame:pixelFormat:depthFormat:' class_method='true'>
<arg index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='frame' declared_type='CGRect'/>
<arg index='1' type='@' name='format' declared_type='NSString*'/>
<arg index='2' type='I' name='depth' declared_type='GLuint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='viewWithFrame:pixelFormat:depthFormat:preserveBackbuffer:sharegroup:multiSampling:numberOfSamples:' class_method='true'>
<arg index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='frame' declared_type='CGRect'/>
<arg index='1' type='@' name='format' declared_type='NSString*'/>
<arg index='2' type='I' name='depth' declared_type='GLuint'/>
<arg index='3' type='B' name='retained' declared_type='BOOL'/>
<arg index='4' type='@' name='sharegroup' declared_type='id'/>
<arg index='5' type='B' name='multisampling' declared_type='BOOL'/>
<arg index='6' type='I' name='samples' declared_type='unsigned int'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCGrabber'>
<method selector='afterRender:'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beforeRender:'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='grab:'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCGrid3D'>
<method selector='originalVertex:'>
<arg index='0' type='{_ccGridSize=ii}' name='pos' declared_type='ccGridSize'/>
<retval type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
</method>
<method selector='setVertex:vertex:'>
<arg index='0' type='{_ccGridSize=ii}' name='pos' declared_type='ccGridSize'/>
<arg index='1' type='{_ccVertex3F=fff}' name='vertex' declared_type='ccVertex3F'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='vertex:'>
<arg index='0' type='{_ccGridSize=ii}' name='pos' declared_type='ccGridSize'/>
<retval type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
</method>
</class>
<class name='CCGrid3DAction'>
<method selector='originalVertex:'>
<arg index='0' type='{_ccGridSize=ii}' name='pos' declared_type='ccGridSize'/>
<retval type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
</method>
<method selector='setVertex:vertex:'>
<arg index='0' type='{_ccGridSize=ii}' name='pos' declared_type='ccGridSize'/>
<arg index='1' type='{_ccVertex3F=fff}' name='vertex' declared_type='ccVertex3F'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='vertex:'>
<arg index='0' type='{_ccGridSize=ii}' name='pos' declared_type='ccGridSize'/>
<retval type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
</method>
</class>
<class name='CCGridAction'>
<method selector='actionWithSize:duration:' class_method='true'>
<arg index='0' type='{_ccGridSize=ii}' name='size' declared_type='ccGridSize'/>
<arg index='1' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='grid'>
<retval type='@' declared_type='CCGridBase*'/>
</method>
<method selector='gridSize'>
<retval type='{_ccGridSize=ii}' declared_type='ccGridSize'/>
</method>
<method selector='initWithSize:duration:'>
<arg index='0' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='1' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setGridSize:'>
<arg index='0' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCGridBase'>
<method selector='active'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='afterDraw:'>
<arg index='0' type='@' name='target' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beforeDraw'>
<retval type='v' declared_type='void'/>
</method>
<method selector='blit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='calculateVertexPoints'>
<retval type='v' declared_type='void'/>
</method>
<method selector='grabber'>
<retval type='@' declared_type='CCGrabber*'/>
</method>
<method selector='gridSize'>
<retval type='{_ccGridSize=ii}' declared_type='ccGridSize'/>
</method>
<method selector='gridWithSize:' class_method='true'>
<arg index='0' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='gridWithSize:texture:flippedTexture:' class_method='true'>
<arg index='0' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='1' type='@' name='texture' declared_type='CCTexture2D*'/>
<arg index='2' type='B' name='flipped' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSize:'>
<arg index='0' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSize:texture:flippedTexture:'>
<arg index='0' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='1' type='@' name='texture' declared_type='CCTexture2D*'/>
<arg index='2' type='B' name='flipped' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isTextureFlipped'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reuse'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reuseGrid'>
<retval type='i' declared_type='int'/>
</method>
<method selector='setActive:'>
<arg index='0' type='B' name='active' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGrabber:'>
<arg index='0' type='@' name='grabber' declared_type='CCGrabber*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsTextureFlipped:'>
<arg index='0' type='B' name='isTextureFlipped' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReuseGrid:'>
<arg index='0' type='i' name='reuseGrid' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShaderProgram:'>
<arg index='0' type='@' name='shaderProgram' declared_type='CCGLProgram*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStep:'>
<arg index='0' type='{CGPoint=ff}' name='step' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shaderProgram'>
<retval type='@' declared_type='CCGLProgram*'/>
</method>
<method selector='step'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
</class>
<class name='CCHide'>
<method selector='update:'>
<arg index='0' type='f' name='time' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCJumpBy'>
<method selector='actionWithDuration:position:height:jumps:' class_method='true'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='{CGPoint=ff}' name='position' declared_type='CGPoint'/>
<arg index='2' type='f' name='height' declared_type='ccTime'/>
<arg index='3' type='I' name='jumps' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:position:height:jumps:'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='{CGPoint=ff}' name='position' declared_type='CGPoint'/>
<arg index='2' type='f' name='height' declared_type='ccTime'/>
<arg index='3' type='I' name='jumps' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCJumpTiles3D'>
<method selector='actionWithJumps:amplitude:grid:duration:' class_method='true'>
<arg index='0' type='i' name='j' declared_type='int'/>
<arg index='1' type='f' name='amp' declared_type='float'/>
<arg index='2' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='3' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithJumps:amplitude:grid:duration:'>
<arg index='0' type='i' name='j' declared_type='int'/>
<arg index='1' type='f' name='amp' declared_type='float'/>
<arg index='2' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='3' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' type='f' name='amplitude' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' type='f' name='amplitudeRate' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCJumpTo'>
<method selector='startWithTarget:'>
<arg index='0' type='@' name='aTarget' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLabelAtlas'>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='@' name='charmapfile' declared_type='NSString*'/>
<arg index='2' type='I' name='w' declared_type='NSUInteger'/>
<arg index='3' type='I' name='h' declared_type='NSUInteger'/>
<arg index='4' type='I' name='firstElement' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fntFile:'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='@' name='fontFile' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:charMapFile:itemWidth:itemHeight:startCharMap:' class_method='true'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='@' name='charmapfile' declared_type='NSString*'/>
<arg index='2' type='I' name='w' declared_type='NSUInteger'/>
<arg index='3' type='I' name='h' declared_type='NSUInteger'/>
<arg index='4' type='I' name='firstElement' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:fntFile:' class_method='true'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='@' name='fontFile' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCLabelBMFont'>
<method selector='alignment'>
<retval type='i' declared_type='CCTextAlignment'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='createFontChars'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fntFile'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithString:fntFile:'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='@' name='fntFile' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fntFile:width:alignment:'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='@' name='fntFile' declared_type='NSString*'/>
<arg index='2' type='f' name='width' declared_type='float'/>
<arg index='3' type='i' name='alignment' declared_type='CCTextAlignment'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fntFile:width:alignment:imageOffset:'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='@' name='fntFile' declared_type='NSString*'/>
<arg index='2' type='f' name='width' declared_type='float'/>
<arg index='3' type='i' name='alignment' declared_type='CCTextAlignment'/>
<arg index='4' type='{CGPoint=ff}' name='offset' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:fntFile:' class_method='true'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='@' name='fntFile' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:fntFile:width:alignment:' class_method='true'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='@' name='fntFile' declared_type='NSString*'/>
<arg index='2' type='f' name='width' declared_type='float'/>
<arg index='3' type='i' name='alignment' declared_type='CCTextAlignment'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:fntFile:width:alignment:imageOffset:' class_method='true'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='@' name='fntFile' declared_type='NSString*'/>
<arg index='2' type='f' name='width' declared_type='float'/>
<arg index='3' type='i' name='alignment' declared_type='CCTextAlignment'/>
<arg index='4' type='{CGPoint=ff}' name='offset' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='purgeCachedData' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlignment:'>
<arg index='0' type='i' name='alignment' declared_type='CCTextAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg index='0' type='{_ccColor3B=CCC}' name='color' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFntFile:'>
<arg index='0' type='@' name='fntFile' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg index='0' type='C' name='opacity' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWidth:'>
<arg index='0' type='f' name='width' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLabelTTF'>
<method selector='dimensions'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='fontName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fontSize'>
<retval type='f' declared_type='float'/>
</method>
<method selector='horizontalAlignment'>
<retval type='i' declared_type='CCTextAlignment'/>
</method>
<method selector='initWithString:dimensions:hAlignment:fontName:fontSize:'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='{CGSize=ff}' name='dimensions' declared_type='CGSize'/>
<arg index='2' type='i' name='alignment' declared_type='CCTextAlignment'/>
<arg index='3' type='@' name='name' declared_type='NSString*'/>
<arg index='4' type='f' name='size' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:hAlignment:lineBreakMode:fontName:fontSize:'>
<arg index='0' type='@' name='str' declared_type='NSString*'/>
<arg index='1' type='{CGSize=ff}' name='dimensions' declared_type='CGSize'/>
<arg index='2' type='i' name='alignment' declared_type='CCTextAlignment'/>
<arg index='3' type='i' name='lineBreakMode' declared_type='CCLineBreakMode'/>
<arg index='4' type='@' name='name' declared_type='NSString*'/>
<arg index='5' type='f' name='size' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:fontName:fontSize:'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='{CGSize=ff}' name='dimensions' declared_type='CGSize'/>
<arg index='2' type='i' name='alignment' declared_type='CCTextAlignment'/>
<arg index='3' type='i' name='vertAlignment' declared_type='CCVerticalTextAlignment'/>
<arg index='4' type='@' name='name' declared_type='NSString*'/>
<arg index='5' type='f' name='size' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:lineBreakMode:fontName:fontSize:'>
<arg index='0' type='@' name='str' declared_type='NSString*'/>
<arg index='1' type='{CGSize=ff}' name='dimensions' declared_type='CGSize'/>
<arg index='2' type='i' name='alignment' declared_type='CCTextAlignment'/>
<arg index='3' type='i' name='vAlignment' declared_type='CCVerticalTextAlignment'/>
<arg index='4' type='i' name='lineBreakMode' declared_type='CCLineBreakMode'/>
<arg index='5' type='@' name='name' declared_type='NSString*'/>
<arg index='6' type='f' name='size' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fontName:fontSize:'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='@' name='name' declared_type='NSString*'/>
<arg index='2' type='f' name='size' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:dimensions:hAlignment:fontName:fontSize:' class_method='true'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='{CGSize=ff}' name='dimensions' declared_type='CGSize'/>
<arg index='2' type='i' name='alignment' declared_type='CCTextAlignment'/>
<arg index='3' type='@' name='name' declared_type='NSString*'/>
<arg index='4' type='f' name='size' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:dimensions:hAlignment:lineBreakMode:fontName:fontSize:' class_method='true'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='{CGSize=ff}' name='dimensions' declared_type='CGSize'/>
<arg index='2' type='i' name='alignment' declared_type='CCTextAlignment'/>
<arg index='3' type='i' name='lineBreakMode' declared_type='CCLineBreakMode'/>
<arg index='4' type='@' name='name' declared_type='NSString*'/>
<arg index='5' type='f' name='size' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:dimensions:hAlignment:vAlignment:fontName:fontSize:' class_method='true'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='{CGSize=ff}' name='dimensions' declared_type='CGSize'/>
<arg index='2' type='i' name='alignment' declared_type='CCTextAlignment'/>
<arg index='3' type='i' name='vertAlignment' declared_type='CCVerticalTextAlignment'/>
<arg index='4' type='@' name='name' declared_type='NSString*'/>
<arg index='5' type='f' name='size' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:dimensions:hAlignment:vAlignment:lineBreakMode:fontName:fontSize:' class_method='true'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='{CGSize=ff}' name='dimensions' declared_type='CGSize'/>
<arg index='2' type='i' name='alignment' declared_type='CCTextAlignment'/>
<arg index='3' type='i' name='vertAlignment' declared_type='CCVerticalTextAlignment'/>
<arg index='4' type='i' name='lineBreakMode' declared_type='CCLineBreakMode'/>
<arg index='5' type='@' name='name' declared_type='NSString*'/>
<arg index='6' type='f' name='size' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='labelWithString:fontName:fontSize:' class_method='true'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='@' name='name' declared_type='NSString*'/>
<arg index='2' type='f' name='size' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDimensions:'>
<arg index='0' type='{CGSize=ff}' name='dimensions' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontName:'>
<arg index='0' type='@' name='fontName' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontSize:'>
<arg index='0' type='f' name='fontSize' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHorizontalAlignment:'>
<arg index='0' type='i' name='horizontalAlignment' declared_type='CCTextAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:'>
<arg index='0' type='@' name='str' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVerticalAlignment:'>
<arg index='0' type='i' name='verticalAlignment' declared_type='CCVerticalTextAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='verticalAlignment'>
<retval type='i' declared_type='CCVerticalTextAlignment'/>
</method>
</class>
<class name='CCLayer'>
<method selector='isAccelerometerEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isTouchEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='registerWithTouchDispatcher'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsAccelerometerEnabled:'>
<arg index='0' type='B' name='isAccelerometerEnabled' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsTouchEnabled:'>
<arg index='0' type='B' name='isTouchEnabled' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLayerColor'>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='changeHeight:'>
<arg index='0' type='f' name='h' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeWidth:'>
<arg index='0' type='f' name='w' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeWidth:height:'>
<arg index='0' type='f' name='w' declared_type='GLfloat'/>
<arg index='1' type='f' name='h' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithColor:'>
<arg index='0' type='{_ccColor4B=CCCC}' name='color' declared_type='ccColor4B'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithColor:width:height:'>
<arg index='0' type='{_ccColor4B=CCCC}' name='color' declared_type='ccColor4B'/>
<arg index='1' type='f' name='w' declared_type='GLfloat'/>
<arg index='2' type='f' name='h' declared_type='GLfloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerWithColor:' class_method='true'>
<arg index='0' type='{_ccColor4B=CCCC}' name='color' declared_type='ccColor4B'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerWithColor:width:height:' class_method='true'>
<arg index='0' type='{_ccColor4B=CCCC}' name='color' declared_type='ccColor4B'/>
<arg index='1' type='f' name='w' declared_type='GLfloat'/>
<arg index='2' type='f' name='h' declared_type='GLfloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' type='{_ccBlendFunc=II}' name='blendFunc' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLayerGradient'>
<method selector='compressedInterpolation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='endColor'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='endOpacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='initWithColor:fadingTo:'>
<arg index='0' type='{_ccColor4B=CCCC}' name='start' declared_type='ccColor4B'/>
<arg index='1' type='{_ccColor4B=CCCC}' name='end' declared_type='ccColor4B'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithColor:fadingTo:alongVector:'>
<arg index='0' type='{_ccColor4B=CCCC}' name='start' declared_type='ccColor4B'/>
<arg index='1' type='{_ccColor4B=CCCC}' name='end' declared_type='ccColor4B'/>
<arg index='2' type='{CGPoint=ff}' name='v' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerWithColor:fadingTo:' class_method='true'>
<arg index='0' type='{_ccColor4B=CCCC}' name='start' declared_type='ccColor4B'/>
<arg index='1' type='{_ccColor4B=CCCC}' name='end' declared_type='ccColor4B'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerWithColor:fadingTo:alongVector:' class_method='true'>
<arg index='0' type='{_ccColor4B=CCCC}' name='start' declared_type='ccColor4B'/>
<arg index='1' type='{_ccColor4B=CCCC}' name='end' declared_type='ccColor4B'/>
<arg index='2' type='{CGPoint=ff}' name='v' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setCompressedInterpolation:'>
<arg index='0' type='B' name='compressedInterpolation' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndColor:'>
<arg index='0' type='{_ccColor3B=CCC}' name='endColor' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndOpacity:'>
<arg index='0' type='C' name='endOpacity' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartColor:'>
<arg index='0' type='{_ccColor3B=CCC}' name='startColor' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartOpacity:'>
<arg index='0' type='C' name='startOpacity' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVector:'>
<arg index='0' type='{CGPoint=ff}' name='vector' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startColor'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='startOpacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='vector'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
</class>
<class name='CCLayerMultiplex'>
<method selector='initWithLayers:vaList:'>
<arg index='0' type='@' name='layer' declared_type='CCLayer*'/>
<arg index='1' type='*' name='params' declared_type='va_list'/>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' selector='layerWithLayers:' class_method='true' variadic='true'>
<arg index='0' type='@' name='layer' declared_type='CCLayer*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='switchTo:'>
<arg index='0' type='I' name='n' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='switchToAndReleaseMe:'>
<arg index='0' type='I' name='n' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLens3D'>
<method selector='actionWithPosition:radius:grid:duration:' class_method='true'>
<arg index='0' type='{CGPoint=ff}' name='pos' declared_type='CGPoint'/>
<arg index='1' type='f' name='r' declared_type='float'/>
<arg index='2' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='3' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPosition:radius:grid:duration:'>
<arg index='0' type='{CGPoint=ff}' name='pos' declared_type='CGPoint'/>
<arg index='1' type='f' name='r' declared_type='float'/>
<arg index='2' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='3' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lensEffect'>
<retval type='f' declared_type='float'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setLensEffect:'>
<arg index='0' type='f' name='lensEffect' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg index='0' type='{CGPoint=ff}' name='position' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLiquid'>
<method selector='actionWithWaves:amplitude:grid:duration:' class_method='true'>
<arg index='0' type='i' name='wav' declared_type='int'/>
<arg index='1' type='f' name='amp' declared_type='float'/>
<arg index='2' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='3' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg index='0' type='i' name='wav' declared_type='int'/>
<arg index='1' type='f' name='amp' declared_type='float'/>
<arg index='2' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='3' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' type='f' name='amplitude' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' type='f' name='amplitudeRate' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenu'>
<method selector='alignItemsHorizontally'>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsHorizontallyWithPadding:'>
<arg index='0' type='f' name='padding' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method sentinel='0' selector='alignItemsInColumns:' variadic='true'>
<arg index='0' type='@' name='columns' declared_type='NSNumber*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsInColumns:vaList:'>
<arg index='0' type='@' name='columns' declared_type='NSNumber*'/>
<arg index='1' type='*' name='args' declared_type='va_list'/>
<retval type='v' declared_type='void'/>
</method>
<method sentinel='0' selector='alignItemsInRows:' variadic='true'>
<arg index='0' type='@' name='rows' declared_type='NSNumber*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsInRows:vaList:'>
<arg index='0' type='@' name='rows' declared_type='NSNumber*'/>
<arg index='1' type='*' name='args' declared_type='va_list'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsVertically'>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsVerticallyWithPadding:'>
<arg index='0' type='f' name='padding' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='enabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithArray:'>
<arg index='0' type='@' name='arrayOfItems' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='menuWithArray:' class_method='true'>
<arg index='0' type='@' name='arrayOfItems' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' selector='menuWithItems:' class_method='true' variadic='true'>
<arg index='0' type='@' name='item' declared_type='CCMenuItem*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='menuWithItems:vaList:' class_method='true'>
<arg index='0' type='@' name='firstItem' declared_type='CCMenuItem*'/>
<arg index='1' type='*' name='args' declared_type='va_list'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='setEnabled:'>
<arg index='0' type='B' name='enabled' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHandlerPriority:'>
<arg index='0' type='i' name='newPriority' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItem'>
<method selector='activate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='cleanup'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBlock:'>
<arg index='0' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:'>
<arg index='0' type='@' name='target' declared_type='id'/>
<arg index='1' type=':' name='selector' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSelected'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='itemWithBlock:' class_method='true'>
<arg index='0' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithTarget:selector:' class_method='true'>
<arg index='0' type='@' name='target' declared_type='id'/>
<arg index='1' type=':' name='selector' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rect'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='selected'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlock:'>
<arg index='0' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsEnabled:'>
<arg index='0' type='B' name='enabled' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTarget:selector:'>
<arg index='0' type='@' name='target' declared_type='id'/>
<arg index='1' type=':' name='selector' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unselected'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemAtlasFont'>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:block:'>
<arg index='0' type='@' name='value' declared_type='NSString*'/>
<arg index='1' type='@' name='charMapFile' declared_type='NSString*'/>
<arg index='2' type='i' name='itemWidth' declared_type='int'/>
<arg index='3' type='i' name='itemHeight' declared_type='int'/>
<arg index='4' type='c' name='startCharMap' declared_type='char'/>
<arg index='5' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:'>
<arg index='0' type='@' name='value' declared_type='NSString*'/>
<arg index='1' type='@' name='charMapFile' declared_type='NSString*'/>
<arg index='2' type='i' name='itemWidth' declared_type='int'/>
<arg index='3' type='i' name='itemHeight' declared_type='int'/>
<arg index='4' type='c' name='startCharMap' declared_type='char'/>
<arg index='5' type='@' name='target' declared_type='id'/>
<arg index='6' type=':' name='selector' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:' class_method='true'>
<arg index='0' type='@' name='value' declared_type='NSString*'/>
<arg index='1' type='@' name='charMapFile' declared_type='NSString*'/>
<arg index='2' type='i' name='itemWidth' declared_type='int'/>
<arg index='3' type='i' name='itemHeight' declared_type='int'/>
<arg index='4' type='c' name='startCharMap' declared_type='char'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:block:' class_method='true'>
<arg index='0' type='@' name='value' declared_type='NSString*'/>
<arg index='1' type='@' name='charMapFile' declared_type='NSString*'/>
<arg index='2' type='i' name='itemWidth' declared_type='int'/>
<arg index='3' type='i' name='itemHeight' declared_type='int'/>
<arg index='4' type='c' name='startCharMap' declared_type='char'/>
<arg index='5' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:' class_method='true'>
<arg index='0' type='@' name='value' declared_type='NSString*'/>
<arg index='1' type='@' name='charMapFile' declared_type='NSString*'/>
<arg index='2' type='i' name='itemWidth' declared_type='int'/>
<arg index='3' type='i' name='itemHeight' declared_type='int'/>
<arg index='4' type='c' name='startCharMap' declared_type='char'/>
<arg index='5' type='@' name='target' declared_type='id'/>
<arg index='6' type=':' name='selector' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCMenuItemFont'>
<method selector='fontName' class_method='true'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fontName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fontSize' class_method='true'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='fontSize'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='initWithString:block:'>
<arg index='0' type='@' name='value' declared_type='NSString*'/>
<arg index='1' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:target:selector:'>
<arg index='0' type='@' name='value' declared_type='NSString*'/>
<arg index='1' type='@' name='r' declared_type='id'/>
<arg index='2' type=':' name='s' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithString:' class_method='true'>
<arg index='0' type='@' name='value' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithString:block:' class_method='true'>
<arg index='0' type='@' name='value' declared_type='NSString*'/>
<arg index='1' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithString:target:selector:' class_method='true'>
<arg index='0' type='@' name='value' declared_type='NSString*'/>
<arg index='1' type='@' name='r' declared_type='id'/>
<arg index='2' type=':' name='s' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setFontName:' class_method='true'>
<arg index='0' type='@' name='n' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontName:'>
<arg index='0' type='@' name='n' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontSize:' class_method='true'>
<arg index='0' type='I' name='s' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontSize:'>
<arg index='0' type='I' name='s' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemImage'>
<method selector='initWithNormalImage:selectedImage:disabledImage:block:'>
<arg index='0' type='@' name='value' declared_type='NSString*'/>
<arg index='1' type='@' name='value2' declared_type='NSString*'/>
<arg index='2' type='@' name='value3' declared_type='NSString*'/>
<arg index='3' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithNormalImage:selectedImage:disabledImage:target:selector:'>
<arg index='0' type='@' name='value' declared_type='NSString*'/>
<arg index='1' type='@' name='value2' declared_type='NSString*'/>
<arg index='2' type='@' name='value3' declared_type='NSString*'/>
<arg index='3' type='@' name='r' declared_type='id'/>
<arg index='4' type=':' name='s' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalImage:selectedImage:' class_method='true'>
<arg index='0' type='@' name='value' declared_type='NSString*'/>
<arg index='1' type='@' name='value2' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalImage:selectedImage:block:' class_method='true'>
<arg index='0' type='@' name='value' declared_type='NSString*'/>
<arg index='1' type='@' name='value2' declared_type='NSString*'/>
<arg index='2' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalImage:selectedImage:disabledImage:block:' class_method='true'>
<arg index='0' type='@' name='value' declared_type='NSString*'/>
<arg index='1' type='@' name='value2' declared_type='NSString*'/>
<arg index='2' type='@' name='value3' declared_type='NSString*'/>
<arg index='3' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalImage:selectedImage:disabledImage:target:selector:' class_method='true'>
<arg index='0' type='@' name='value' declared_type='NSString*'/>
<arg index='1' type='@' name='value2' declared_type='NSString*'/>
<arg index='2' type='@' name='value3' declared_type='NSString*'/>
<arg index='3' type='@' name='r' declared_type='id'/>
<arg index='4' type=':' name='s' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalImage:selectedImage:target:selector:' class_method='true'>
<arg index='0' type='@' name='value' declared_type='NSString*'/>
<arg index='1' type='@' name='value2' declared_type='NSString*'/>
<arg index='2' type='@' name='r' declared_type='id'/>
<arg index='3' type=':' name='s' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDisabledSpriteFrame:'>
<arg index='0' type='@' name='frame' declared_type='CCSpriteFrame*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNormalSpriteFrame:'>
<arg index='0' type='@' name='frame' declared_type='CCSpriteFrame*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedSpriteFrame:'>
<arg index='0' type='@' name='frame' declared_type='CCSpriteFrame*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemLabel'>
<method selector='disabledColor'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithLabel:block:'>
<arg index='0' type='@' name='label' declared_type='CCNode*'/>
<arg index='1' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLabel:target:selector:'>
<arg index='0' type='@' name='label' declared_type='CCNode*'/>
<arg index='1' type='@' name='target' declared_type='id'/>
<arg index='2' type=':' name='selector' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithLabel:' class_method='true'>
<arg index='0' type='@' name='label' declared_type='CCNode*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithLabel:block:' class_method='true'>
<arg index='0' type='@' name='label' declared_type='CCNode*'/>
<arg index='1' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithLabel:target:selector:' class_method='true'>
<arg index='0' type='@' name='label' declared_type='CCNode*'/>
<arg index='1' type='@' name='target' declared_type='id'/>
<arg index='2' type=':' name='selector' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='label'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='setDisabledColor:'>
<arg index='0' type='{_ccColor3B=CCC}' name='disabledColor' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsEnabled:'>
<arg index='0' type='B' name='enabled' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabel:'>
<arg index='0' type='@' name='label' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:'>
<arg index='0' type='@' name='label' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemSprite'>
<method selector='disabledImage'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='initWithNormalSprite:selectedSprite:disabledSprite:block:'>
<arg index='0' type='@' name='normalSprite' declared_type='CCNode*'/>
<arg index='1' type='@' name='selectedSprite' declared_type='CCNode*'/>
<arg index='2' type='@' name='disabledSprite' declared_type='CCNode*'/>
<arg index='3' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithNormalSprite:selectedSprite:disabledSprite:target:selector:'>
<arg index='0' type='@' name='normalSprite' declared_type='CCNode*'/>
<arg index='1' type='@' name='selectedSprite' declared_type='CCNode*'/>
<arg index='2' type='@' name='disabledSprite' declared_type='CCNode*'/>
<arg index='3' type='@' name='target' declared_type='id'/>
<arg index='4' type=':' name='selector' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:' class_method='true'>
<arg index='0' type='@' name='normalSprite' declared_type='CCNode*'/>
<arg index='1' type='@' name='selectedSprite' declared_type='CCNode*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:block:' class_method='true'>
<arg index='0' type='@' name='normalSprite' declared_type='CCNode*'/>
<arg index='1' type='@' name='selectedSprite' declared_type='CCNode*'/>
<arg index='2' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:disabledSprite:block:' class_method='true'>
<arg index='0' type='@' name='normalSprite' declared_type='CCNode*'/>
<arg index='1' type='@' name='selectedSprite' declared_type='CCNode*'/>
<arg index='2' type='@' name='disabledSprite' declared_type='CCNode*'/>
<arg index='3' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:disabledSprite:target:selector:' class_method='true'>
<arg index='0' type='@' name='normalSprite' declared_type='CCNode*'/>
<arg index='1' type='@' name='selectedSprite' declared_type='CCNode*'/>
<arg index='2' type='@' name='disabledSprite' declared_type='CCNode*'/>
<arg index='3' type='@' name='target' declared_type='id'/>
<arg index='4' type=':' name='selector' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:target:selector:' class_method='true'>
<arg index='0' type='@' name='normalSprite' declared_type='CCNode*'/>
<arg index='1' type='@' name='selectedSprite' declared_type='CCNode*'/>
<arg index='2' type='@' name='target' declared_type='id'/>
<arg index='3' type=':' name='selector' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='normalImage'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='selectedImage'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='setDisabledImage:'>
<arg index='0' type='@' name='disabledImage' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNormalImage:'>
<arg index='0' type='@' name='normalImage' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedImage:'>
<arg index='0' type='@' name='selectedImage' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemToggle'>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithItems:block:'>
<arg index='0' type='@' name='arrayOfItems' declared_type='NSArray*'/>
<arg index='1' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithItems:block:' class_method='true'>
<arg index='0' type='@' name='arrayOfItems' declared_type='NSArray*'/>
<arg index='1' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' selector='itemWithTarget:selector:items:' class_method='true' variadic='true'>
<arg index='0' type='@' name='target' declared_type='id'/>
<arg index='1' type=':' name='selector' declared_type='SEL'/>
<arg index='2' type='@' name='item' declared_type='CCMenuItem*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemWithTarget:selector:items:vaList:' class_method='true'>
<arg index='0' type='@' name='target' declared_type='id'/>
<arg index='1' type=':' name='selector' declared_type='SEL'/>
<arg index='2' type='@' name='item' declared_type='CCMenuItem*'/>
<arg index='3' type='*' name='args' declared_type='va_list'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='selectedIndex'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='selectedItem'>
<retval type='@' declared_type='CCMenuItem*'/>
</method>
<method selector='setSelectedIndex:'>
<arg index='0' type='I' name='selectedIndex' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubItems:'>
<arg index='0' type='@' name='subItems' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='subItems'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
</class>
<class name='CCMotionStreak'>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='initWithFade:minSeg:width:color:texture:'>
<arg index='0' type='f' name='fade' declared_type='float'/>
<arg index='1' type='f' name='minSeg' declared_type='float'/>
<arg index='2' type='f' name='stroke' declared_type='float'/>
<arg index='3' type='{_ccColor3B=CCC}' name='color' declared_type='ccColor3B'/>
<arg index='4' type='@' name='texture' declared_type='CCTexture2D*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFade:minSeg:width:color:textureFilename:'>
<arg index='0' type='f' name='fade' declared_type='float'/>
<arg index='1' type='f' name='minSeg' declared_type='float'/>
<arg index='2' type='f' name='stroke' declared_type='float'/>
<arg index='3' type='{_ccColor3B=CCC}' name='color' declared_type='ccColor3B'/>
<arg index='4' type='@' name='path' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isFastMode'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reset'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' type='{_ccBlendFunc=II}' name='blendFunc' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFastMode:'>
<arg index='0' type='B' name='fastMode' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='streakWithFade:minSeg:width:color:texture:' class_method='true'>
<arg index='0' type='f' name='fade' declared_type='float'/>
<arg index='1' type='f' name='minSeg' declared_type='float'/>
<arg index='2' type='f' name='stroke' declared_type='float'/>
<arg index='3' type='{_ccColor3B=CCC}' name='color' declared_type='ccColor3B'/>
<arg index='4' type='@' name='texture' declared_type='CCTexture2D*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='streakWithFade:minSeg:width:color:textureFilename:' class_method='true'>
<arg index='0' type='f' name='fade' declared_type='float'/>
<arg index='1' type='f' name='minSeg' declared_type='float'/>
<arg index='2' type='f' name='stroke' declared_type='float'/>
<arg index='3' type='{_ccColor3B=CCC}' name='color' declared_type='ccColor3B'/>
<arg index='4' type='@' name='path' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='tintWithColor:'>
<arg index='0' type='{_ccColor3B=CCC}' name='colors' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMoveBy'>
<method selector='actionWithDuration:position:' class_method='true'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='{CGPoint=ff}' name='deltaPosition' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:position:'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='{CGPoint=ff}' name='deltaPosition' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCMoveTo'>
<method selector='actionWithDuration:position:' class_method='true'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='{CGPoint=ff}' name='position' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:position:'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='{CGPoint=ff}' name='position' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCNode'>
<method selector='actionManager'>
<retval type='@' declared_type='CCActionManager*'/>
</method>
<method selector='addChild:'>
<arg index='0' type='@' name='node' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addChild:z:'>
<arg index='0' type='@' name='node' declared_type='CCNode*'/>
<arg index='1' type='i' name='z' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addChild:z:tag:'>
<arg index='0' type='@' name='node' declared_type='CCNode*'/>
<arg index='1' type='i' name='z' declared_type='NSInteger'/>
<arg index='2' type='i' name='tag' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='anchorPoint'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='anchorPointInPoints'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='boundingBox'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='camera'>
<retval type='@' declared_type='CCCamera*'/>
</method>
<method selector='children'>
<retval type='@' declared_type='CCArray*'/>
</method>
<method selector='cleanup'>
<retval type='v' declared_type='void'/>
</method>
<method selector='contentSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='convertToNodeSpace:'>
<arg index='0' type='{CGPoint=ff}' name='worldPoint' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertToNodeSpaceAR:'>
<arg index='0' type='{CGPoint=ff}' name='worldPoint' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertToWorldSpace:'>
<arg index='0' type='{CGPoint=ff}' name='nodePoint' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertToWorldSpaceAR:'>
<arg index='0' type='{CGPoint=ff}' name='nodePoint' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertTouchToNodeSpace:'>
<arg index='0' type='@' name='touch' declared_type='id'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertTouchToNodeSpaceAR:'>
<arg index='0' type='@' name='touch' declared_type='id'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='draw'>
<retval type='v' declared_type='void'/>
</method>
<method selector='getActionByTag:'>
<arg index='0' type='i' name='tag' declared_type='NSInteger'/>
<retval type='@' declared_type='CCAction*'/>
</method>
<method selector='getChildByTag:'>
<arg index='0' type='i' name='tag' declared_type='NSInteger'/>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='glServerState'>
<retval type='i' declared_type='ccGLServerState'/>
</method>
<method selector='grid'>
<retval type='@' declared_type='CCGridBase*'/>
</method>
<method selector='ignoreAnchorPointForPosition'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isRunning'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='node' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='nodeToParentTransform'>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</method>
<method selector='nodeToWorldTransform'>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</method>
<method selector='numberOfRunningActions'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='onEnter'>
<retval type='v' declared_type='void'/>
</method>
<method selector='onEnterTransitionDidFinish'>
<retval type='v' declared_type='void'/>
</method>
<method selector='onExit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='onExitTransitionDidStart'>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderOfArrival'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='parent'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='parentToNodeTransform'>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</method>
<method selector='pauseSchedulerAndActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='removeAllChildrenWithCleanup:'>
<arg index='0' type='B' name='cleanup' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChild:cleanup:'>
<arg index='0' type='@' name='node' declared_type='CCNode*'/>
<arg index='1' type='B' name='cleanup' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChildByTag:cleanup:'>
<arg index='0' type='i' name='tag' declared_type='NSInteger'/>
<arg index='1' type='B' name='cleanup' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeFromParentAndCleanup:'>
<arg index='0' type='B' name='cleanup' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reorderChild:z:'>
<arg index='0' type='@' name='child' declared_type='CCNode*'/>
<arg index='1' type='i' name='zOrder' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeSchedulerAndActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotation'>
<retval type='f' declared_type='float'/>
</method>
<method selector='runAction:'>
<arg index='0' type='@' name='action' declared_type='CCAction*'/>
<retval type='@' declared_type='CCAction*'/>
</method>
<method selector='scale'>
<retval type='f' declared_type='float'/>
</method>
<method selector='scaleX'>
<retval type='f' declared_type='float'/>
</method>
<method selector='scaleY'>
<retval type='f' declared_type='float'/>
</method>
<method selector='schedule:'>
<arg index='0' type=':' name='s' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='schedule:interval:'>
<arg index='0' type=':' name='s' declared_type='SEL'/>
<arg index='1' type='f' name='seconds' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='schedule:interval:repeat:delay:'>
<arg index='0' type=':' name='selector' declared_type='SEL'/>
<arg index='1' type='f' name='interval' declared_type='ccTime'/>
<arg index='2' type='I' name='repeat' declared_type='uint'/>
<arg index='3' type='f' name='delay' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleOnce:delay:'>
<arg index='0' type=':' name='selector' declared_type='SEL'/>
<arg index='1' type='f' name='delay' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleUpdate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleUpdateWithPriority:'>
<arg index='0' type='i' name='priority' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduler'>
<retval type='@' declared_type='CCScheduler*'/>
</method>
<method selector='setActionManager:'>
<arg index='0' type='@' name='actionManager' declared_type='CCActionManager*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAnchorPoint:'>
<arg index='0' type='{CGPoint=ff}' name='anchorPoint' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentSize:'>
<arg index='0' type='{CGSize=ff}' name='contentSize' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGlServerState:'>
<arg index='0' type='i' name='glServerState' declared_type='ccGLServerState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGrid:'>
<arg index='0' type='@' name='grid' declared_type='CCGridBase*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIgnoreAnchorPointForPosition:'>
<arg index='0' type='B' name='ignoreAnchorPointForPosition' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOrderOfArrival:'>
<arg index='0' type='I' name='orderOfArrival' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParent:'>
<arg index='0' type='@' name='parent' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg index='0' type='{CGPoint=ff}' name='position' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotation:'>
<arg index='0' type='f' name='rotation' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScale:'>
<arg index='0' type='f' name='scale' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScaleX:'>
<arg index='0' type='f' name='scaleX' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScaleY:'>
<arg index='0' type='f' name='scaleY' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScheduler:'>
<arg index='0' type='@' name='scheduler' declared_type='CCScheduler*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShaderProgram:'>
<arg index='0' type='@' name='shaderProgram' declared_type='CCGLProgram*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSkewX:'>
<arg index='0' type='f' name='skewX' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSkewY:'>
<arg index='0' type='f' name='skewY' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTag:'>
<arg index='0' type='i' name='tag' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserData:'>
<arg index='0' type='^v' name='userData' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserObject:'>
<arg index='0' type='@' name='userObject' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVertexZ:'>
<arg index='0' type='f' name='vertexZ' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVisible:'>
<arg index='0' type='B' name='visible' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setZOrder:'>
<arg index='0' type='I' name='z' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shaderProgram'>
<retval type='@' declared_type='CCGLProgram*'/>
</method>
<method selector='skewX'>
<retval type='f' declared_type='float'/>
</method>
<method selector='skewY'>
<retval type='f' declared_type='float'/>
</method>
<method selector='sortAllChildren'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopAction:'>
<arg index='0' type='@' name='action' declared_type='CCAction*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopActionByTag:'>
<arg index='0' type='i' name='tag' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopAllActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='tag'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='transform'>
<retval type='v' declared_type='void'/>
</method>
<method selector='transformAncestors'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unschedule:'>
<arg index='0' type=':' name='s' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleAllSelectors'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleUpdate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='update:'>
<arg index='0' type='f' name='delta' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='userData'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='userObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='vertexZ'>
<retval type='f' declared_type='float'/>
</method>
<method selector='visible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='visit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='worldToNodeTransform'>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</method>
<method selector='zOrder'>
<retval type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='CCOrbitCamera'>
<method selector='actionWithDuration:radius:deltaRadius:angleZ:deltaAngleZ:angleX:deltaAngleX:' class_method='true'>
<arg index='0' type='f' name='t' declared_type='float'/>
<arg index='1' type='f' name='r' declared_type='float'/>
<arg index='2' type='f' name='dr' declared_type='float'/>
<arg index='3' type='f' name='z' declared_type='float'/>
<arg index='4' type='f' name='dz' declared_type='float'/>
<arg index='5' type='f' name='x' declared_type='float'/>
<arg index='6' type='f' name='dx' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:radius:deltaRadius:angleZ:deltaAngleZ:angleX:deltaAngleX:'>
<arg index='0' type='f' name='t' declared_type='float'/>
<arg index='1' type='f' name='r' declared_type='float'/>
<arg index='2' type='f' name='dr' declared_type='float'/>
<arg index='3' type='f' name='z' declared_type='float'/>
<arg index='4' type='f' name='dz' declared_type='float'/>
<arg index='5' type='f' name='x' declared_type='float'/>
<arg index='6' type='f' name='dx' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='sphericalRadius:zenith:azimuth:'>
<arg index='0' type='^f' name='r' declared_type='float*'/>
<arg index='1' type='^f' name='zenith' declared_type='float*'/>
<arg index='2' type='^f' name='azimuth' declared_type='float*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCParallaxNode'>
<method selector='addChild:z:parallaxRatio:positionOffset:'>
<arg index='0' type='@' name='node' declared_type='CCNode*'/>
<arg index='1' type='i' name='z' declared_type='NSInteger'/>
<arg index='2' type='{CGPoint=ff}' name='c' declared_type='CGPoint'/>
<arg index='3' type='{CGPoint=ff}' name='positionOffset' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parallaxArray'>
<retval type='^{ccArray=II^@}' declared_type='ccArray*'/>
</method>
<method selector='setParallaxArray:'>
<arg index='0' type='^{ccArray=II^@}' name='parallaxArray' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCParticleBatchNode'>
<method selector='addChild:z:tag:'>
<arg index='0' type='@' name='child' declared_type='CCParticleSystem*'/>
<arg index='1' type='i' name='z' declared_type='NSInteger'/>
<arg index='2' type='i' name='aTag' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='batchNodeWithFile:' class_method='true'>
<arg index='0' type='@' name='imageFile' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='batchNodeWithFile:capacity:' class_method='true'>
<arg index='0' type='@' name='fileImage' declared_type='NSString*'/>
<arg index='1' type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='batchNodeWithTexture:' class_method='true'>
<arg index='0' type='@' name='tex' declared_type='CCTexture2D*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='batchNodeWithTexture:capacity:' class_method='true'>
<arg index='0' type='@' name='tex' declared_type='CCTexture2D*'/>
<arg index='1' type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='disableParticle:'>
<arg index='0' type='I' name='particleIndex' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithFile:capacity:'>
<arg index='0' type='@' name='fileImage' declared_type='NSString*'/>
<arg index='1' type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg index='0' type='@' name='tex' declared_type='CCTexture2D*'/>
<arg index='1' type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertChild:inAtlasAtIndex:'>
<arg index='0' type='@' name='pSystem' declared_type='CCParticleSystem*'/>
<arg index='1' type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChild:cleanup:'>
<arg index='0' type='@' name='pSystem' declared_type='CCParticleSystem*'/>
<arg index='1' type='B' name='doCleanUp' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' type='{_ccBlendFunc=II}' name='blendFunc' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureAtlas:'>
<arg index='0' type='@' name='textureAtlas' declared_type='CCTextureAtlas*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textureAtlas'>
<retval type='@' declared_type='CCTextureAtlas*'/>
</method>
</class>
<class name='CCParticleSystem'>
<method selector='active'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='angle'>
<retval type='f' declared_type='float'/>
</method>
<method selector='angleVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='atlasIndex'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='autoRemoveOnFinish'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='batchNode'>
<retval type='@' declared_type='CCParticleBatchNode*'/>
</method>
<method selector='blendAdditive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='doesOpacityModifyRGB'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='duration'>
<retval type='f' declared_type='float'/>
</method>
<method selector='emissionRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='emitterMode'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='endColor'>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</method>
<method selector='endColorVar'>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</method>
<method selector='endRadius'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endRadiusVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endSize'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endSizeVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endSpin'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endSpinVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='gravity'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='initWithDictionary:'>
<arg index='0' type='@' name='dictionary' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFile:'>
<arg index='0' type='@' name='plistFile' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTotalParticles:'>
<arg index='0' type='I' name='numberOfParticles' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isFull'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='life'>
<retval type='f' declared_type='float'/>
</method>
<method selector='lifeVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='particleCount'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='particleWithFile:' class_method='true'>
<arg index='0' type='@' name='plistFile' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='posVar'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='positionType'>
<retval type='i' declared_type='tCCPositionType'/>
</method>
<method selector='postStep'>
<retval type='v' declared_type='void'/>
</method>
<method selector='radialAccel'>
<retval type='f' declared_type='float'/>
</method>
<method selector='radialAccelVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='resetSystem'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotatePerSecond'>
<retval type='f' declared_type='float'/>
</method>
<method selector='rotatePerSecondVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setAngle:'>
<arg index='0' type='f' name='angle' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAngleVar:'>
<arg index='0' type='f' name='angleVar' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAtlasIndex:'>
<arg index='0' type='I' name='atlasIndex' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoRemoveOnFinish:'>
<arg index='0' type='B' name='autoRemoveOnFinish' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBatchNode:'>
<arg index='0' type='@' name='batchNode' declared_type='CCParticleBatchNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendAdditive:'>
<arg index='0' type='B' name='blendAdditive' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' type='{_ccBlendFunc=II}' name='blendFunc' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDuration:'>
<arg index='0' type='f' name='duration' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEmissionRate:'>
<arg index='0' type='f' name='emissionRate' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEmitterMode:'>
<arg index='0' type='i' name='emitterMode' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndColor:'>
<arg index='0' type='{ccColor4F=ffff}' name='endColor' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndColorVar:'>
<arg index='0' type='{ccColor4F=ffff}' name='endColorVar' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndRadius:'>
<arg index='0' type='f' name='endRadius' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndRadiusVar:'>
<arg index='0' type='f' name='endRadiusVar' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSize:'>
<arg index='0' type='f' name='endSize' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSizeVar:'>
<arg index='0' type='f' name='endSizeVar' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSpin:'>
<arg index='0' type='f' name='endSpin' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSpinVar:'>
<arg index='0' type='f' name='endSpinVar' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGravity:'>
<arg index='0' type='{CGPoint=ff}' name='gravity' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLife:'>
<arg index='0' type='f' name='life' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLifeVar:'>
<arg index='0' type='f' name='lifeVar' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacityModifyRGB:'>
<arg index='0' type='B' name='opacityModifyRGB' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosVar:'>
<arg index='0' type='{CGPoint=ff}' name='posVar' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositionType:'>
<arg index='0' type='i' name='positionType' declared_type='tCCPositionType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRadialAccel:'>
<arg index='0' type='f' name='radialAccel' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRadialAccelVar:'>
<arg index='0' type='f' name='radialAccelVar' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotatePerSecond:'>
<arg index='0' type='f' name='rotatePerSecond' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotatePerSecondVar:'>
<arg index='0' type='f' name='rotatePerSecondVar' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourcePosition:'>
<arg index='0' type='{CGPoint=ff}' name='sourcePosition' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpeed:'>
<arg index='0' type='f' name='speed' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpeedVar:'>
<arg index='0' type='f' name='speedVar' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartColor:'>
<arg index='0' type='{ccColor4F=ffff}' name='startColor' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartColorVar:'>
<arg index='0' type='{ccColor4F=ffff}' name='startColorVar' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartRadius:'>
<arg index='0' type='f' name='startRadius' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartRadiusVar:'>
<arg index='0' type='f' name='startRadiusVar' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSize:'>
<arg index='0' type='f' name='startSize' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSizeVar:'>
<arg index='0' type='f' name='startSizeVar' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSpin:'>
<arg index='0' type='f' name='startSpin' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSpinVar:'>
<arg index='0' type='f' name='startSpinVar' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTangentialAccel:'>
<arg index='0' type='f' name='tangentialAccel' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTangentialAccelVar:'>
<arg index='0' type='f' name='tangentialAccelVar' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTotalParticles:'>
<arg index='0' type='I' name='totalParticles' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourcePosition'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='speed'>
<retval type='f' declared_type='float'/>
</method>
<method selector='speedVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startColor'>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</method>
<method selector='startColorVar'>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</method>
<method selector='startRadius'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startRadiusVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startSize'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startSizeVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startSpin'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startSpinVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='stopSystem'>
<retval type='v' declared_type='void'/>
</method>
<method selector='tangentialAccel'>
<retval type='f' declared_type='float'/>
</method>
<method selector='tangentialAccelVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='totalParticles'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='update:'>
<arg index='0' type='f' name='dt' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateQuadWithParticle:newPosition:'>
<arg index='0' type='^{sCCParticle={CGPoint=ff}{CGPoint=ff}{ccColor4F=ffff}{ccColor4F=ffff}fffffI(?={?={CGPoint=ff}ff}{?=ffff})}' name='particle' declared_type='tCCParticle*'/>
<arg index='1' type='{CGPoint=ff}' name='pos' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateWithNoTime'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCParticleSystemQuad'>
<method selector='initIndices'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initTexCoordsWithRect:'>
<arg index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayFrame:'>
<arg index='0' type='@' name='spriteFrame' declared_type='CCSpriteFrame*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:withRect:'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<arg index='1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCPlace'>
<method selector='actionWithPosition:' class_method='true'>
<arg index='0' type='{CGPoint=ff}' name='pos' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPosition:'>
<arg index='0' type='{CGPoint=ff}' name='pos' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCPointArray'>
<method selector='addControlPoint:'>
<arg index='0' type='{CGPoint=ff}' name='controlPoint' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='arrayWithCapacity:' class_method='true'>
<arg index='0' type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='controlPoints'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='getControlPointAtIndex:'>
<arg index='0' type='i' name='index' declared_type='NSInteger'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='initWithCapacity:'>
<arg index='0' type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertControlPoint:atIndex:'>
<arg index='0' type='{CGPoint=ff}' name='controlPoint' declared_type='CGPoint'/>
<arg index='1' type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeControlPointAtIndex:'>
<arg index='0' type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceControlPoint:atIndex:'>
<arg index='0' type='{CGPoint=ff}' name='controlPoint' declared_type='CGPoint'/>
<arg index='1' type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reverse'>
<retval type='@' declared_type='CCPointArray*'/>
</method>
<method selector='reverseInline'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setControlPoints:'>
<arg index='0' type='@' name='controlPoints' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCProfiler'>
<method selector='createAndAddTimerWithName:'>
<arg index='0' type='@' name='timerName' declared_type='NSString*'/>
<retval type='@' declared_type='CCProfilingTimer*'/>
</method>
<method selector='displayTimers'>
<retval type='v' declared_type='void'/>
</method>
<method selector='releaseAllTimers'>
<retval type='v' declared_type='void'/>
</method>
<method selector='releaseTimer:'>
<arg index='0' type='@' name='timerName' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedProfiler' class_method='true'>
<retval type='@' declared_type='CCProfiler*'/>
</method>
</class>
<class name='CCProfilingTimer'>
<method selector='reset'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCProgressFromTo'>
<method selector='actionWithDuration:from:to:' class_method='true'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='f' name='fromPercentage' declared_type='float'/>
<arg index='2' type='f' name='toPercentage' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:from:to:'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='f' name='fromPercentage' declared_type='float'/>
<arg index='2' type='f' name='toPercentage' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCProgressTimer'>
<method selector='barChangeRate'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithSprite:'>
<arg index='0' type='@' name='sprite' declared_type='CCSprite*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='midpoint'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='percentage'>
<retval type='f' declared_type='float'/>
</method>
<method selector='progressWithSprite:' class_method='true'>
<arg index='0' type='@' name='sprite' declared_type='CCSprite*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='reverseDirection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setBarChangeRate:'>
<arg index='0' type='{CGPoint=ff}' name='barChangeRate' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg index='0' type='{_ccColor3B=CCC}' name='color' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMidpoint:'>
<arg index='0' type='{CGPoint=ff}' name='midpoint' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg index='0' type='C' name='opacity' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPercentage:'>
<arg index='0' type='f' name='percentage' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReverseDirection:'>
<arg index='0' type='B' name='reverseDirection' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSprite:'>
<arg index='0' type='@' name='sprite' declared_type='CCSprite*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setType:'>
<arg index='0' type='i' name='type' declared_type='CCProgressTimerType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sprite'>
<retval type='@' declared_type='CCSprite*'/>
</method>
<method selector='type'>
<retval type='i' declared_type='CCProgressTimerType'/>
</method>
<method selector='vertexData'>
<retval type='^{_ccV2F_C4B_T2F={_ccVertex2F=ff}{_ccColor4B=CCCC}{_ccTex2F=ff}}' declared_type='ccV2F_C4B_T2F*'/>
</method>
<method selector='vertexDataCount'>
<retval type='i' declared_type='int'/>
</method>
</class>
<class name='CCProgressTo'>
<method selector='actionWithDuration:percent:' class_method='true'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='f' name='percent' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:percent:'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='f' name='percent' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCRenderTexture'>
<method selector='begin'>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginWithClear:g:b:a:'>
<arg index='0' type='f' name='r' declared_type='float'/>
<arg index='1' type='f' name='g' declared_type='float'/>
<arg index='2' type='f' name='b' declared_type='float'/>
<arg index='3' type='f' name='a' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginWithClear:g:b:a:depth:'>
<arg index='0' type='f' name='r' declared_type='float'/>
<arg index='1' type='f' name='g' declared_type='float'/>
<arg index='2' type='f' name='b' declared_type='float'/>
<arg index='3' type='f' name='a' declared_type='float'/>
<arg index='4' type='f' name='depthValue' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginWithClear:g:b:a:depth:stencil:'>
<arg index='0' type='f' name='r' declared_type='float'/>
<arg index='1' type='f' name='g' declared_type='float'/>
<arg index='2' type='f' name='b' declared_type='float'/>
<arg index='3' type='f' name='a' declared_type='float'/>
<arg index='4' type='f' name='depthValue' declared_type='float'/>
<arg index='5' type='i' name='stencilValue' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clear:g:b:a:'>
<arg index='0' type='f' name='r' declared_type='float'/>
<arg index='1' type='f' name='g' declared_type='float'/>
<arg index='2' type='f' name='b' declared_type='float'/>
<arg index='3' type='f' name='a' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearDepth:'>
<arg index='0' type='f' name='depthValue' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearStencil:'>
<arg index='0' type='i' name='stencilValue' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='end'>
<retval type='v' declared_type='void'/>
</method>
<method selector='getUIImage'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithWidth:height:pixelFormat:'>
<arg index='0' type='i' name='w' declared_type='int'/>
<arg index='1' type='i' name='h' declared_type='int'/>
<arg index='2' type='i' name='format' declared_type='CCTexture2DPixelFormat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithWidth:height:pixelFormat:depthStencilFormat:'>
<arg index='0' type='i' name='w' declared_type='int'/>
<arg index='1' type='i' name='h' declared_type='int'/>
<arg index='2' type='i' name='format' declared_type='CCTexture2DPixelFormat'/>
<arg index='3' type='I' name='depthStencilFormat' declared_type='GLuint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='newCGImage'>
<retval type='^{CGImage=}' declared_type='CGImageRef'/>
</method>
<method selector='renderTextureWithWidth:height:' class_method='true'>
<arg index='0' type='i' name='w' declared_type='int'/>
<arg index='1' type='i' name='h' declared_type='int'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='renderTextureWithWidth:height:pixelFormat:' class_method='true'>
<arg index='0' type='i' name='w' declared_type='int'/>
<arg index='1' type='i' name='h' declared_type='int'/>
<arg index='2' type='i' name='format' declared_type='CCTexture2DPixelFormat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='renderTextureWithWidth:height:pixelFormat:depthStencilFormat:' class_method='true'>
<arg index='0' type='i' name='w' declared_type='int'/>
<arg index='1' type='i' name='h' declared_type='int'/>
<arg index='2' type='i' name='format' declared_type='CCTexture2DPixelFormat'/>
<arg index='3' type='I' name='depthStencilFormat' declared_type='GLuint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='saveToFile:'>
<arg index='0' type='@' name='name' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='saveToFile:format:'>
<arg index='0' type='@' name='name' declared_type='NSString*'/>
<arg index='1' type='i' name='format' declared_type='tCCImageFormat'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setSprite:'>
<arg index='0' type='@' name='sprite' declared_type='CCSprite*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sprite'>
<retval type='@' declared_type='CCSprite*'/>
</method>
</class>
<class name='CCRepeat'>
<method selector='actionWithAction:times:' class_method='true'>
<arg index='0' type='@' name='action' declared_type='CCFiniteTimeAction*'/>
<arg index='1' type='I' name='times' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:times:'>
<arg index='0' type='@' name='action' declared_type='CCFiniteTimeAction*'/>
<arg index='1' type='I' name='times' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='innerAction'>
<retval type='@' declared_type='CCFiniteTimeAction*'/>
</method>
<method selector='setInnerAction:'>
<arg index='0' type='@' name='innerAction' declared_type='CCFiniteTimeAction*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCRepeatForever'>
<method selector='actionWithAction:' class_method='true'>
<arg index='0' type='@' name='action' declared_type='CCActionInterval*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:'>
<arg index='0' type='@' name='action' declared_type='CCActionInterval*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='innerAction'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='setInnerAction:'>
<arg index='0' type='@' name='innerAction' declared_type='CCActionInterval*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCReuseGrid'>
<method selector='actionWithTimes:' class_method='true'>
<arg index='0' type='i' name='times' declared_type='int'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTimes:'>
<arg index='0' type='i' name='times' declared_type='int'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCReverseTime'>
<method selector='actionWithAction:' class_method='true'>
<arg index='0' type='@' name='action' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:'>
<arg index='0' type='@' name='action' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCRipple3D'>
<method selector='actionWithPosition:radius:waves:amplitude:grid:duration:' class_method='true'>
<arg index='0' type='{CGPoint=ff}' name='pos' declared_type='CGPoint'/>
<arg index='1' type='f' name='r' declared_type='float'/>
<arg index='2' type='i' name='wav' declared_type='int'/>
<arg index='3' type='f' name='amp' declared_type='float'/>
<arg index='4' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='5' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithPosition:radius:waves:amplitude:grid:duration:'>
<arg index='0' type='{CGPoint=ff}' name='pos' declared_type='CGPoint'/>
<arg index='1' type='f' name='r' declared_type='float'/>
<arg index='2' type='i' name='wav' declared_type='int'/>
<arg index='3' type='f' name='amp' declared_type='float'/>
<arg index='4' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='5' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' type='f' name='amplitude' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' type='f' name='amplitudeRate' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg index='0' type='{CGPoint=ff}' name='position' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCRotateBy'>
<method selector='actionWithDuration:angle:' class_method='true'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='f' name='deltaAngle' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:angle:'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='f' name='deltaAngle' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCRotateTo'>
<method selector='actionWithDuration:angle:' class_method='true'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='f' name='angle' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:angle:'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='f' name='angle' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCScaleBy'>
<method selector='startWithTarget:'>
<arg index='0' type='@' name='aTarget' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCScaleTo'>
<method selector='actionWithDuration:scale:' class_method='true'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='f' name='s' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='actionWithDuration:scaleX:scaleY:' class_method='true'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='f' name='sx' declared_type='float'/>
<arg index='2' type='f' name='sy' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:scale:'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='f' name='s' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:scaleX:scaleY:'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='f' name='sx' declared_type='float'/>
<arg index='2' type='f' name='sy' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCScene'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCScheduler'>
<method selector='isTargetPaused:'>
<arg index='0' type='@' name='target' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pauseAllTargets'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='pauseAllTargetsWithMinPriority:'>
<arg index='0' type='i' name='minPriority' declared_type='NSInteger'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='pauseTarget:'>
<arg index='0' type='@' name='target' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeTarget:'>
<arg index='0' type='@' name='target' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeTargets:'>
<arg index='0' type='@' name='targetsToResume' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleSelector:forTarget:interval:paused:'>
<arg index='0' type=':' name='selector' declared_type='SEL'/>
<arg index='1' type='@' name='target' declared_type='id'/>
<arg index='2' type='f' name='interval' declared_type='ccTime'/>
<arg index='3' type='B' name='paused' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleSelector:forTarget:interval:paused:repeat:delay:'>
<arg index='0' type=':' name='selector' declared_type='SEL'/>
<arg index='1' type='@' name='target' declared_type='id'/>
<arg index='2' type='f' name='interval' declared_type='ccTime'/>
<arg index='3' type='B' name='paused' declared_type='BOOL'/>
<arg index='4' type='I' name='repeat' declared_type='uint'/>
<arg index='5' type='f' name='delay' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleUpdateForTarget:priority:paused:'>
<arg index='0' type='@' name='target' declared_type='id'/>
<arg index='1' type='i' name='priority' declared_type='NSInteger'/>
<arg index='2' type='B' name='paused' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeScale:'>
<arg index='0' type='f' name='timeScale' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timeScale'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='unscheduleAllSelectors'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleAllSelectorsForTarget:'>
<arg index='0' type='@' name='target' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleAllSelectorsWithMinPriority:'>
<arg index='0' type='i' name='minPriority' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleSelector:forTarget:'>
<arg index='0' type=':' name='selector' declared_type='SEL'/>
<arg index='1' type='@' name='target' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleUpdateForTarget:'>
<arg index='0' type='@' name='target' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='update:'>
<arg index='0' type='f' name='dt' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCSequence'>
<method selector='actionOne:two:' class_method='true'>
<arg index='0' type='@' name='actionOne' declared_type='CCFiniteTimeAction*'/>
<arg index='1' type='@' name='actionTwo' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='actionWithArray:' class_method='true'>
<arg index='0' type='@' name='arrayOfActions' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' selector='actions:' class_method='true' variadic='true'>
<arg index='0' type='@' name='action1' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='actions:vaList:' class_method='true'>
<arg index='0' type='@' name='action1' declared_type='CCFiniteTimeAction*'/>
<arg index='1' type='*' name='args' declared_type='va_list'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initOne:two:'>
<arg index='0' type='@' name='actionOne' declared_type='CCFiniteTimeAction*'/>
<arg index='1' type='@' name='actionTwo' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCShaderCache'>
<method selector='addProgram:forKey:'>
<arg index='0' type='@' name='program' declared_type='CCGLProgram*'/>
<arg index='1' type='@' name='key' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='loadDefaultShaders'>
<retval type='v' declared_type='void'/>
</method>
<method selector='programForKey:'>
<arg index='0' type='@' name='key' declared_type='NSString*'/>
<retval type='@' declared_type='CCGLProgram*'/>
</method>
<method selector='purgeSharedShaderCache' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedShaderCache' class_method='true'>
<retval type='@' declared_type='CCShaderCache*'/>
</method>
</class>
<class name='CCShaky3D'>
<method selector='actionWithRange:shakeZ:grid:duration:' class_method='true'>
<arg index='0' type='i' name='range' declared_type='int'/>
<arg index='1' type='B' name='shakeZ' declared_type='BOOL'/>
<arg index='2' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='3' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRange:shakeZ:grid:duration:'>
<arg index='0' type='i' name='range' declared_type='int'/>
<arg index='1' type='B' name='shakeZ' declared_type='BOOL'/>
<arg index='2' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='3' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCShakyTiles3D'>
<method selector='actionWithRange:shakeZ:grid:duration:' class_method='true'>
<arg index='0' type='i' name='range' declared_type='int'/>
<arg index='1' type='B' name='shakeZ' declared_type='BOOL'/>
<arg index='2' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='3' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRange:shakeZ:grid:duration:'>
<arg index='0' type='i' name='range' declared_type='int'/>
<arg index='1' type='B' name='shakeZ' declared_type='BOOL'/>
<arg index='2' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='3' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCShatteredTiles3D'>
<method selector='actionWithRange:shatterZ:grid:duration:' class_method='true'>
<arg index='0' type='i' name='range' declared_type='int'/>
<arg index='1' type='B' name='shatterZ' declared_type='BOOL'/>
<arg index='2' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='3' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRange:shatterZ:grid:duration:'>
<arg index='0' type='i' name='range' declared_type='int'/>
<arg index='1' type='B' name='shatterZ' declared_type='BOOL'/>
<arg index='2' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='3' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCShow'>
<method selector='update:'>
<arg index='0' type='f' name='time' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCShuffleTiles'>
<method selector='actionWithSeed:grid:duration:' class_method='true'>
<arg index='0' type='i' name='s' declared_type='int'/>
<arg index='1' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='2' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSeed:grid:duration:'>
<arg index='0' type='i' name='s' declared_type='int'/>
<arg index='1' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='2' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSkewBy'>
<method selector='initWithDuration:skewX:skewY:'>
<arg index='0' type='f' name='t' declared_type='ccTime'/>
<arg index='1' type='f' name='sx' declared_type='float'/>
<arg index='2' type='f' name='sy' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSkewTo'>
<method selector='actionWithDuration:skewX:skewY:' class_method='true'>
<arg index='0' type='f' name='t' declared_type='ccTime'/>
<arg index='1' type='f' name='sx' declared_type='float'/>
<arg index='2' type='f' name='sy' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:skewX:skewY:'>
<arg index='0' type='f' name='t' declared_type='ccTime'/>
<arg index='1' type='f' name='sx' declared_type='float'/>
<arg index='2' type='f' name='sy' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSpawn'>
<method selector='actionOne:two:' class_method='true'>
<arg index='0' type='@' name='one' declared_type='CCFiniteTimeAction*'/>
<arg index='1' type='@' name='two' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='actionWithArray:' class_method='true'>
<arg index='0' type='@' name='arrayOfActions' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' selector='actions:' class_method='true' variadic='true'>
<arg index='0' type='@' name='action1' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='actions:vaList:' class_method='true'>
<arg index='0' type='@' name='action1' declared_type='CCFiniteTimeAction*'/>
<arg index='1' type='*' name='args' declared_type='va_list'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initOne:two:'>
<arg index='0' type='@' name='one' declared_type='CCFiniteTimeAction*'/>
<arg index='1' type='@' name='two' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSpeed'>
<method selector='actionWithAction:speed:' class_method='true'>
<arg index='0' type='@' name='action' declared_type='CCActionInterval*'/>
<arg index='1' type='f' name='value' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:speed:'>
<arg index='0' type='@' name='action' declared_type='CCActionInterval*'/>
<arg index='1' type='f' name='value' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='innerAction'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='setInnerAction:'>
<arg index='0' type='@' name='innerAction' declared_type='CCActionInterval*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpeed:'>
<arg index='0' type='f' name='speed' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='speed'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='CCSplitCols'>
<method selector='actionWithCols:duration:' class_method='true'>
<arg index='0' type='i' name='cols' declared_type='int'/>
<arg index='1' type='f' name='duration' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCols:duration:'>
<arg index='0' type='i' name='cols' declared_type='int'/>
<arg index='1' type='f' name='duration' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSplitRows'>
<method selector='actionWithRows:duration:' class_method='true'>
<arg index='0' type='i' name='rows' declared_type='int'/>
<arg index='1' type='f' name='duration' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRows:duration:'>
<arg index='0' type='i' name='rows' declared_type='int'/>
<arg index='1' type='f' name='duration' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSprite'>
<method selector='atlasIndex'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='batchNode'>
<retval type='@' declared_type='CCSpriteBatchNode*'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='dirty'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='displayFrame'>
<retval type='@' declared_type='CCSpriteFrame*'/>
</method>
<method selector='flipX'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='flipY'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithCGImage:key:'>
<arg index='0' type='^{CGImage=}' name='image' declared_type='CGImageRef'/>
<arg index='1' type='@' name='key' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFile:'>
<arg index='0' type='@' name='filename' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFile:rect:'>
<arg index='0' type='@' name='filename' declared_type='NSString*'/>
<arg index='1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSpriteFrame:'>
<arg index='0' type='@' name='spriteFrame' declared_type='CCSpriteFrame*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSpriteFrameName:'>
<arg index='0' type='@' name='spriteFrameName' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:rect:'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<arg index='1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:rect:rotated:'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<arg index='1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<arg index='2' type='B' name='rotated' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isFrameDisplayed:'>
<arg index='0' type='@' name='frame' declared_type='CCSpriteFrame*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='offsetPosition'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='quad'>
<retval type='{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' declared_type='ccV3F_C4B_T2F_Quad'/>
</method>
<method selector='setAtlasIndex:'>
<arg index='0' type='I' name='atlasIndex' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBatchNode:'>
<arg index='0' type='@' name='batchNode' declared_type='CCSpriteBatchNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' type='{_ccBlendFunc=II}' name='blendFunc' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg index='0' type='{_ccColor3B=CCC}' name='color' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDirty:'>
<arg index='0' type='B' name='dirty' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayFrame:'>
<arg index='0' type='@' name='newFrame' declared_type='CCSpriteFrame*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayFrameWithAnimationName:index:'>
<arg index='0' type='@' name='animationName' declared_type='NSString*'/>
<arg index='1' type='i' name='frameIndex' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFlipX:'>
<arg index='0' type='B' name='flipX' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFlipY:'>
<arg index='0' type='B' name='flipY' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg index='0' type='C' name='opacity' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureAtlas:'>
<arg index='0' type='@' name='textureAtlas' declared_type='CCTextureAtlas*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureRect:'>
<arg index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureRect:rotated:untrimmedSize:'>
<arg index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<arg index='1' type='B' name='rotated' declared_type='BOOL'/>
<arg index='2' type='{CGSize=ff}' name='size' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVertexRect:'>
<arg index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='spriteWithCGImage:key:' class_method='true'>
<arg index='0' type='^{CGImage=}' name='image' declared_type='CGImageRef'/>
<arg index='1' type='@' name='key' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='spriteWithFile:' class_method='true'>
<arg index='0' type='@' name='filename' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='spriteWithFile:rect:' class_method='true'>
<arg index='0' type='@' name='filename' declared_type='NSString*'/>
<arg index='1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='spriteWithSpriteFrame:' class_method='true'>
<arg index='0' type='@' name='spriteFrame' declared_type='CCSpriteFrame*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='spriteWithSpriteFrameName:' class_method='true'>
<arg index='0' type='@' name='spriteFrameName' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='spriteWithTexture:' class_method='true'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='spriteWithTexture:rect:' class_method='true'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<arg index='1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='textureAtlas'>
<retval type='@' declared_type='CCTextureAtlas*'/>
</method>
<method selector='textureRect'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='textureRectRotated'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='updateTransform'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCSpriteBatchNode'>
<method selector='addQuadFromSprite:quadIndex:'>
<arg index='0' type='@' name='sprite' declared_type='CCSprite*'/>
<arg index='1' type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteWithoutQuad:z:tag:'>
<arg index='0' type='@' name='child' declared_type='CCSprite*'/>
<arg index='1' type='I' name='z' declared_type='NSUInteger'/>
<arg index='2' type='i' name='aTag' declared_type='NSInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='appendChild:'>
<arg index='0' type='@' name='sprite' declared_type='CCSprite*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='atlasIndexForChild:atZ:'>
<arg index='0' type='@' name='sprite' declared_type='CCSprite*'/>
<arg index='1' type='i' name='z' declared_type='NSInteger'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='batchNodeWithFile:' class_method='true'>
<arg index='0' type='@' name='fileImage' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='batchNodeWithFile:capacity:' class_method='true'>
<arg index='0' type='@' name='fileImage' declared_type='NSString*'/>
<arg index='1' type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='batchNodeWithTexture:' class_method='true'>
<arg index='0' type='@' name='tex' declared_type='CCTexture2D*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='batchNodeWithTexture:capacity:' class_method='true'>
<arg index='0' type='@' name='tex' declared_type='CCTexture2D*'/>
<arg index='1' type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='descendants'>
<retval type='@' declared_type='CCArray*'/>
</method>
<method selector='increaseAtlasCapacity'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithFile:capacity:'>
<arg index='0' type='@' name='fileImage' declared_type='NSString*'/>
<arg index='1' type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg index='0' type='@' name='tex' declared_type='CCTexture2D*'/>
<arg index='1' type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertChild:inAtlasAtIndex:'>
<arg index='0' type='@' name='child' declared_type='CCSprite*'/>
<arg index='1' type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rebuildIndexInOrder:atlasIndex:'>
<arg index='0' type='@' name='parent' declared_type='CCSprite*'/>
<arg index='1' type='I' name='index' declared_type='NSUInteger'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='removeChild:cleanup:'>
<arg index='0' type='@' name='sprite' declared_type='CCSprite*'/>
<arg index='1' type='B' name='doCleanup' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChildAtIndex:cleanup:'>
<arg index='0' type='I' name='index' declared_type='NSUInteger'/>
<arg index='1' type='B' name='doCleanup' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFromAtlas:'>
<arg index='0' type='@' name='sprite' declared_type='CCSprite*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reorderBatch:'>
<arg index='0' type='B' name='reorder' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' type='{_ccBlendFunc=II}' name='blendFunc' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureAtlas:'>
<arg index='0' type='@' name='textureAtlas' declared_type='CCTextureAtlas*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textureAtlas'>
<retval type='@' declared_type='CCTextureAtlas*'/>
</method>
</class>
<class name='CCSpriteFrame'>
<method selector='frameWithTexture:rect:' class_method='true'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<arg index='1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='frameWithTexture:rectInPixels:rotated:offset:originalSize:' class_method='true'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<arg index='1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<arg index='2' type='B' name='rotated' declared_type='BOOL'/>
<arg index='3' type='{CGPoint=ff}' name='offset' declared_type='CGPoint'/>
<arg index='4' type='{CGSize=ff}' name='originalSize' declared_type='CGSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='frameWithTextureFilename:rect:' class_method='true'>
<arg index='0' type='@' name='filename' declared_type='NSString*'/>
<arg index='1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='frameWithTextureFilename:rectInPixels:rotated:offset:originalSize:' class_method='true'>
<arg index='0' type='@' name='filename' declared_type='NSString*'/>
<arg index='1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<arg index='2' type='B' name='rotated' declared_type='BOOL'/>
<arg index='3' type='{CGPoint=ff}' name='offset' declared_type='CGPoint'/>
<arg index='4' type='{CGSize=ff}' name='originalSize' declared_type='CGSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:rect:'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<arg index='1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:rectInPixels:rotated:offset:originalSize:'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<arg index='1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<arg index='2' type='B' name='rotated' declared_type='BOOL'/>
<arg index='3' type='{CGPoint=ff}' name='offset' declared_type='CGPoint'/>
<arg index='4' type='{CGSize=ff}' name='originalSize' declared_type='CGSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTextureFilename:rect:'>
<arg index='0' type='@' name='filename' declared_type='NSString*'/>
<arg index='1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTextureFilename:rectInPixels:rotated:offset:originalSize:'>
<arg index='0' type='@' name='filename' declared_type='NSString*'/>
<arg index='1' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<arg index='2' type='B' name='rotated' declared_type='BOOL'/>
<arg index='3' type='{CGPoint=ff}' name='offset' declared_type='CGPoint'/>
<arg index='4' type='{CGSize=ff}' name='originalSize' declared_type='CGSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='offset'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='offsetInPixels'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='originalSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='originalSizeInPixels'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='rect'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='rectInPixels'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='rotated'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setOffset:'>
<arg index='0' type='{CGPoint=ff}' name='offset' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOffsetInPixels:'>
<arg index='0' type='{CGPoint=ff}' name='offsetInPixels' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOriginalSize:'>
<arg index='0' type='{CGSize=ff}' name='originalSize' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOriginalSizeInPixels:'>
<arg index='0' type='{CGSize=ff}' name='originalSizeInPixels' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRect:'>
<arg index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRectInPixels:'>
<arg index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rectInPixels' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotated:'>
<arg index='0' type='B' name='rotated' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='textureFilename'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='CCSpriteFrameCache'>
<method selector='addSpriteFrame:name:'>
<arg index='0' type='@' name='frame' declared_type='CCSpriteFrame*'/>
<arg index='1' type='@' name='frameName' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFramesWithFile:'>
<arg index='0' type='@' name='plist' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFramesWithFile:texture:'>
<arg index='0' type='@' name='plist' declared_type='NSString*'/>
<arg index='1' type='@' name='texture' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFramesWithFile:textureFilename:'>
<arg index='0' type='@' name='plist' declared_type='NSString*'/>
<arg index='1' type='@' name='filename' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='purgeSharedSpriteFrameCache' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFrameByName:'>
<arg index='0' type='@' name='name' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFrames'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFramesFromFile:'>
<arg index='0' type='@' name='plist' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFramesFromTexture:'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeUnusedSpriteFrames'>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedSpriteFrameCache' class_method='true'>
<retval type='@' declared_type='CCSpriteFrameCache*'/>
</method>
<method selector='spriteFrameByName:'>
<arg index='0' type='@' name='name' declared_type='NSString*'/>
<retval type='@' declared_type='CCSpriteFrame*'/>
</method>
</class>
<class name='CCTMXLayer'>
<method selector='addChild:z:tag:'>
<arg index='0' type='@' name='node' declared_type='CCNode*'/>
<arg index='1' type='i' name='z' declared_type='NSInteger'/>
<arg index='2' type='i' name='tag' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithTilesetInfo:layerInfo:mapInfo:'>
<arg index='0' type='@' name='tilesetInfo' declared_type='CCTMXTilesetInfo*'/>
<arg index='1' type='@' name='layerInfo' declared_type='CCTMXLayerInfo*'/>
<arg index='2' type='@' name='mapInfo' declared_type='CCTMXMapInfo*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='layerOrientation'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='layerSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='layerWithTilesetInfo:layerInfo:mapInfo:' class_method='true'>
<arg index='0' type='@' name='tilesetInfo' declared_type='CCTMXTilesetInfo*'/>
<arg index='1' type='@' name='layerInfo' declared_type='CCTMXLayerInfo*'/>
<arg index='2' type='@' name='mapInfo' declared_type='CCTMXMapInfo*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mapTileSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='positionAt:'>
<arg index='0' type='{CGPoint=ff}' name='tileCoordinate' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='propertyNamed:'>
<arg index='0' type='@' name='propertyName' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='releaseMap'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTileAt:'>
<arg index='0' type='{CGPoint=ff}' name='tileCoordinate' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayerName:'>
<arg index='0' type='@' name='layerName' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayerOrientation:'>
<arg index='0' type='I' name='layerOrientation' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayerSize:'>
<arg index='0' type='{CGSize=ff}' name='layerSize' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapTileSize:'>
<arg index='0' type='{CGSize=ff}' name='mapTileSize' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg index='0' type='@' name='properties' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileGID:at:'>
<arg index='0' type='I' name='gid' declared_type='uint32_t'/>
<arg index='1' type='{CGPoint=ff}' name='tileCoordinate' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileGID:at:withFlags:'>
<arg index='0' type='I' name='gid' declared_type='uint32_t'/>
<arg index='1' type='{CGPoint=ff}' name='pos' declared_type='CGPoint'/>
<arg index='2' type='i' name='flags' declared_type='ccTMXTileFlags'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTiles:'>
<arg index='0' type='^I' name='tiles' declared_type='uint32_t*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileset:'>
<arg index='0' type='@' name='tileset' declared_type='CCTMXTilesetInfo*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setupTiles'>
<retval type='v' declared_type='void'/>
</method>
<method selector='tileAt:'>
<arg index='0' type='{CGPoint=ff}' name='tileCoordinate' declared_type='CGPoint'/>
<retval type='@' declared_type='CCSprite*'/>
</method>
<method selector='tileGIDAt:'>
<arg index='0' type='{CGPoint=ff}' name='tileCoordinate' declared_type='CGPoint'/>
<retval type='I' declared_type='uint32_t'/>
</method>
<method selector='tileGIDAt:withFlags:'>
<arg index='0' type='{CGPoint=ff}' name='pos' declared_type='CGPoint'/>
<arg index='1' type='^i' name='flags' declared_type='ccTMXTileFlags*'/>
<retval type='I' declared_type='uint32_t'/>
</method>
<method selector='tiles'>
<retval type='^I' declared_type='uint32_t*'/>
</method>
<method selector='tileset'>
<retval type='@' declared_type='CCTMXTilesetInfo*'/>
</method>
</class>
<class name='CCTMXLayerInfo'>
<method selector='layerSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='maxGID'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='minGID'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='offset'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='unsigned char'/>
</method>
<method selector='ownTiles'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='setLayerSize:'>
<arg index='0' type='{CGSize=ff}' name='layerSize' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxGID:'>
<arg index='0' type='I' name='maxGID' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinGID:'>
<arg index='0' type='I' name='minGID' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setName:'>
<arg index='0' type='@' name='name' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOffset:'>
<arg index='0' type='{CGPoint=ff}' name='offset' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg index='0' type='C' name='opacity' declared_type='unsigned char'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOwnTiles:'>
<arg index='0' type='B' name='ownTiles' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg index='0' type='@' name='properties' declared_type='NSMutableDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTiles:'>
<arg index='0' type='^I' name='tiles' declared_type='unsigned int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVisible:'>
<arg index='0' type='B' name='visible' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tiles'>
<retval type='^I' declared_type='unsigned int*'/>
</method>
<method selector='visible'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CCTMXMapInfo'>
<method selector='filename'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='formatWithTMXFile:' class_method='true'>
<arg index='0' type='@' name='tmxFile' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='formatWithXML:resourcePath:' class_method='true'>
<arg index='0' type='@' name='tmxString' declared_type='NSString*'/>
<arg index='1' type='@' name='resourcePath' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTMXFile:'>
<arg index='0' type='@' name='tmxFile' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithXML:resourcePath:'>
<arg index='0' type='@' name='tmxString' declared_type='NSString*'/>
<arg index='1' type='@' name='resourcePath' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layers'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='mapSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='objectGroups'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='orientation'>
<retval type='i' declared_type='int'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='resources'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setFilename:'>
<arg index='0' type='@' name='filename' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayers:'>
<arg index='0' type='@' name='layers' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapSize:'>
<arg index='0' type='{CGSize=ff}' name='mapSize' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectGroups:'>
<arg index='0' type='@' name='objectGroups' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOrientation:'>
<arg index='0' type='i' name='orientation' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg index='0' type='@' name='properties' declared_type='NSMutableDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResources:'>
<arg index='0' type='@' name='resources' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileProperties:'>
<arg index='0' type='@' name='tileProperties' declared_type='NSMutableDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileSize:'>
<arg index='0' type='{CGSize=ff}' name='tileSize' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTilesets:'>
<arg index='0' type='@' name='tilesets' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tileProperties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='tileSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='tilesets'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
</class>
<class name='CCTMXObjectGroup'>
<method selector='groupName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='objectNamed:'>
<arg index='0' type='@' name='objectName' declared_type='NSString*'/>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='objects'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='positionOffset'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='propertyNamed:'>
<arg index='0' type='@' name='propertyName' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setGroupName:'>
<arg index='0' type='@' name='groupName' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjects:'>
<arg index='0' type='@' name='objects' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositionOffset:'>
<arg index='0' type='{CGPoint=ff}' name='positionOffset' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg index='0' type='@' name='properties' declared_type='NSMutableDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTMXTiledMap'>
<method selector='initWithTMXFile:'>
<arg index='0' type='@' name='tmxFile' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithXML:resourcePath:'>
<arg index='0' type='@' name='tmxString' declared_type='NSString*'/>
<arg index='1' type='@' name='resourcePath' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerNamed:'>
<arg index='0' type='@' name='layerName' declared_type='NSString*'/>
<retval type='@' declared_type='CCTMXLayer*'/>
</method>
<method selector='mapOrientation'>
<retval type='i' declared_type='int'/>
</method>
<method selector='mapSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='objectGroupNamed:'>
<arg index='0' type='@' name='groupName' declared_type='NSString*'/>
<retval type='@' declared_type='CCTMXObjectGroup*'/>
</method>
<method selector='objectGroups'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='propertiesForGID:'>
<arg index='0' type='I' name='GID' declared_type='unsigned int'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='propertyNamed:'>
<arg index='0' type='@' name='propertyName' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setObjectGroups:'>
<arg index='0' type='@' name='objectGroups' declared_type='NSMutableArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg index='0' type='@' name='properties' declared_type='NSMutableDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tileSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='tiledMapWithTMXFile:' class_method='true'>
<arg index='0' type='@' name='tmxFile' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='tiledMapWithXML:resourcePath:' class_method='true'>
<arg index='0' type='@' name='tmxString' declared_type='NSString*'/>
<arg index='1' type='@' name='resourcePath' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTMXTilesetInfo'>
<method selector='firstGid'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='imageSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='margin'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='rectForGID:'>
<arg index='0' type='I' name='gid' declared_type='unsigned int'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='setFirstGid:'>
<arg index='0' type='I' name='firstGid' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageSize:'>
<arg index='0' type='{CGSize=ff}' name='imageSize' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMargin:'>
<arg index='0' type='I' name='margin' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setName:'>
<arg index='0' type='@' name='name' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourceImage:'>
<arg index='0' type='@' name='sourceImage' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpacing:'>
<arg index='0' type='I' name='spacing' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileSize:'>
<arg index='0' type='{CGSize=ff}' name='tileSize' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourceImage'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='spacing'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='tileSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='CCTargetedAction'>
<method selector='actionWithTarget:action:' class_method='true'>
<arg index='0' type='@' name='target' declared_type='id'/>
<arg index='1' type='@' name='action' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='forcedTarget'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:action:'>
<arg index='0' type='@' name='target' declared_type='id'/>
<arg index='1' type='@' name='action' declared_type='CCFiniteTimeAction*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setForcedTarget:'>
<arg index='0' type='@' name='forcedTarget' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTargetedTouchHandler'>
<method selector='claimedTouches'>
<retval type='@' declared_type='NSMutableSet*'/>
</method>
<method selector='handlerWithDelegate:priority:swallowsTouches:' class_method='true'>
<arg index='0' type='@' name='aDelegate' declared_type='id'/>
<arg index='1' type='i' name='priority' declared_type='int'/>
<arg index='2' type='B' name='swallowsTouches' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDelegate:priority:swallowsTouches:'>
<arg index='0' type='@' name='aDelegate' declared_type='id'/>
<arg index='1' type='i' name='priority' declared_type='int'/>
<arg index='2' type='B' name='swallowsTouches' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setSwallowsTouches:'>
<arg index='0' type='B' name='swallowsTouches' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='swallowsTouches'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CCTexture2D'>
<method selector='PVRImagesHavePremultipliedAlpha:' class_method='true'>
<arg index='0' type='B' name='haveAlphaPremultiplied' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='bitsPerPixelForFormat'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='bitsPerPixelForFormat:' class_method='true'>
<arg index='0' type='i' name='format' declared_type='CCTexture2DPixelFormat'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='contentSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='contentSizeInPixels'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='defaultAlphaPixelFormat' class_method='true'>
<retval type='i' declared_type='CCTexture2DPixelFormat'/>
</method>
<method selector='drawAtPoint:'>
<arg index='0' type='{CGPoint=ff}' name='point' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawInRect:'>
<arg index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='generateMipmap'>
<retval type='v' declared_type='void'/>
</method>
<method selector='hasPremultipliedAlpha'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithCGImage:resolutionType:'>
<arg index='0' type='^{CGImage=}' name='cgImage' declared_type='CGImageRef'/>
<arg index='1' type='i' name='resolution' declared_type='ccResolutionType'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:pixelFormat:pixelsWide:pixelsHigh:contentSize:'>
<arg const='true' index='0' type='^v' name='data' declared_type='void*'/>
<arg index='1' type='i' name='pixelFormat' declared_type='CCTexture2DPixelFormat'/>
<arg index='2' type='I' name='width' declared_type='NSUInteger'/>
<arg index='3' type='I' name='height' declared_type='NSUInteger'/>
<arg index='4' type='{CGSize=ff}' name='size' declared_type='CGSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPVRFile:'>
<arg index='0' type='@' name='file' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:fontName:fontSize:'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='{CGSize=ff}' name='dimensions' declared_type='CGSize'/>
<arg index='2' type='i' name='alignment' declared_type='CCTextAlignment'/>
<arg index='3' type='i' name='vertAlignment' declared_type='CCVerticalTextAlignment'/>
<arg index='4' type='@' name='name' declared_type='NSString*'/>
<arg index='5' type='f' name='size' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:lineBreakMode:fontName:fontSize:'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='{CGSize=ff}' name='dimensions' declared_type='CGSize'/>
<arg index='2' type='i' name='alignment' declared_type='CCTextAlignment'/>
<arg index='3' type='i' name='vertAlignment' declared_type='CCVerticalTextAlignment'/>
<arg index='4' type='i' name='lineBreakMode' declared_type='CCLineBreakMode'/>
<arg index='5' type='@' name='name' declared_type='NSString*'/>
<arg index='6' type='f' name='size' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fontName:fontSize:'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<arg index='1' type='@' name='name' declared_type='NSString*'/>
<arg index='2' type='f' name='size' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='keepData:length:'>
<arg index='0' type='^v' name='data' declared_type='void*'/>
<arg index='1' type='I' name='length' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='maxS'>
<retval type='f' declared_type='GLfloat'/>
</method>
<method selector='maxT'>
<retval type='f' declared_type='GLfloat'/>
</method>
<method selector='name'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='pixelFormat'>
<retval type='i' declared_type='CCTexture2DPixelFormat'/>
</method>
<method selector='pixelsHigh'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='pixelsWide'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='releaseData:'>
<arg index='0' type='^v' name='data' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resolutionType'>
<retval type='i' declared_type='ccResolutionType'/>
</method>
<method selector='setAliasTexParameters'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAntiAliasTexParameters'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultAlphaPixelFormat:' class_method='true'>
<arg index='0' type='i' name='format' declared_type='CCTexture2DPixelFormat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxS:'>
<arg index='0' type='f' name='maxS' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxT:'>
<arg index='0' type='f' name='maxT' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResolutionType:'>
<arg index='0' type='i' name='resolutionType' declared_type='ccResolutionType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShaderProgram:'>
<arg index='0' type='@' name='shaderProgram' declared_type='CCGLProgram*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexParameters:'>
<arg index='0' type='^{_ccTexParams=IIII}' name='texParams' declared_type='ccTexParams*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shaderProgram'>
<retval type='@' declared_type='CCGLProgram*'/>
</method>
<method selector='stringForFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='CCTextureAtlas'>
<method selector='capacity'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='drawNumberOfQuads:'>
<arg index='0' type='I' name='n' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawNumberOfQuads:fromIndex:'>
<arg index='0' type='I' name='n' declared_type='NSUInteger'/>
<arg index='1' type='I' name='start' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawQuads'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillWithEmptyQuadsFromIndex:amount:'>
<arg index='0' type='I' name='index' declared_type='NSUInteger'/>
<arg index='1' type='I' name='amount' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='increaseTotalQuadsWith:'>
<arg index='0' type='I' name='amount' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithFile:capacity:'>
<arg index='0' type='@' name='file' declared_type='NSString*'/>
<arg index='1' type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg index='0' type='@' name='tex' declared_type='CCTexture2D*'/>
<arg index='1' type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertQuad:atIndex:'>
<arg index='0' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' name='quad' declared_type='ccV3F_C4B_T2F_Quad*'/>
<arg index='1' type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertQuadFromIndex:atIndex:'>
<arg index='0' type='I' name='fromIndex' declared_type='NSUInteger'/>
<arg index='1' type='I' name='newIndex' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertQuads:atIndex:amount:'>
<arg index='0' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' name='quads' declared_type='ccV3F_C4B_T2F_Quad*'/>
<arg index='1' type='I' name='index' declared_type='NSUInteger'/>
<arg index='2' type='I' name='amount' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveQuadsFromIndex:amount:atIndex:'>
<arg index='0' type='I' name='oldIndex' declared_type='NSUInteger'/>
<arg index='1' type='I' name='amount' declared_type='NSUInteger'/>
<arg index='2' type='I' name='newIndex' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveQuadsFromIndex:to:'>
<arg index='0' type='I' name='index' declared_type='NSUInteger'/>
<arg index='1' type='I' name='newIndex' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='quads'>
<retval type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' declared_type='ccV3F_C4B_T2F_Quad*'/>
</method>
<method selector='removeAllQuads'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeQuadAtIndex:'>
<arg index='0' type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeQuadsAtIndex:amount:'>
<arg index='0' type='I' name='index' declared_type='NSUInteger'/>
<arg index='1' type='I' name='amount' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resizeCapacity:'>
<arg index='0' type='I' name='n' declared_type='NSUInteger'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setQuads:'>
<arg index='0' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' name='quads' declared_type='ccV3F_C4B_T2F_Quad*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='textureAtlasWithFile:capacity:' class_method='true'>
<arg index='0' type='@' name='file' declared_type='NSString*'/>
<arg index='1' type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='textureAtlasWithTexture:capacity:' class_method='true'>
<arg index='0' type='@' name='tex' declared_type='CCTexture2D*'/>
<arg index='1' type='I' name='capacity' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='totalQuads'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='updateQuad:atIndex:'>
<arg index='0' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' name='quad' declared_type='ccV3F_C4B_T2F_Quad*'/>
<arg index='1' type='I' name='index' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTextureCache'>
<method selector='addCGImage:forKey:'>
<arg index='0' type='^{CGImage=}' name='image' declared_type='CGImageRef'/>
<arg index='1' type='@' name='key' declared_type='NSString*'/>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='addImage:'>
<arg index='0' type='@' name='fileimage' declared_type='NSString*'/>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='addImageAsync:target:selector:'>
<arg index='0' type='@' name='filename' declared_type='NSString*'/>
<arg index='1' type='@' name='target' declared_type='id'/>
<arg index='2' type=':' name='selector' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addImageAsync:withBlock:'>
<arg index='0' type='@' name='filename' declared_type='NSString*'/>
<arg index='1' function_pointer='true' type='@?' name='block' declared_type='void (^)(CCTexture2D *)'>
<arg type='@' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPVRImage:'>
<arg index='0' type='@' name='filename' declared_type='NSString*'/>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='dumpCachedTextureInfo'>
<retval type='v' declared_type='void'/>
</method>
<method selector='purgeSharedTextureCache' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllTextures'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTexture:'>
<arg index='0' type='@' name='tex' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTextureForKey:'>
<arg index='0' type='@' name='textureKeyName' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeUnusedTextures'>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedTextureCache' class_method='true'>
<retval type='@' declared_type='CCTextureCache*'/>
</method>
<method selector='textureForKey:'>
<arg index='0' type='@' name='key' declared_type='NSString*'/>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
</class>
<class name='CCTexturePVR'>
<method selector='format'>
<retval type='i' declared_type='CCTexture2DPixelFormat'/>
</method>
<method selector='hasAlpha'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='height'>
<retval type='I' declared_type='uint32_t'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg index='0' type='@' name='path' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg index='0' type='@' name='url' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='name'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='numberOfMipmaps'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='pvrTextureWithContentsOfFile:' class_method='true'>
<arg index='0' type='@' name='path' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='pvrTextureWithContentsOfURL:' class_method='true'>
<arg index='0' type='@' name='url' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='retainName'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setRetainName:'>
<arg index='0' type='B' name='retainName' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='width'>
<retval type='I' declared_type='uint32_t'/>
</method>
</class>
<class name='CCTileMapAtlas'>
<method selector='initWithTileFile:mapFile:tileWidth:tileHeight:'>
<arg index='0' type='@' name='tile' declared_type='NSString*'/>
<arg index='1' type='@' name='map' declared_type='NSString*'/>
<arg index='2' type='i' name='w' declared_type='int'/>
<arg index='3' type='i' name='h' declared_type='int'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='releaseMap'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTile:at:'>
<arg index='0' type='{_ccColor3B=CCC}' name='tile' declared_type='ccColor3B'/>
<arg index='1' type='{_ccGridSize=ii}' name='position' declared_type='ccGridSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tgaInfo'>
<retval type='^{sImageTGA=iCCss*i}' declared_type='tImageTGA*'/>
</method>
<method selector='tileAt:'>
<arg index='0' type='{_ccGridSize=ii}' name='position' declared_type='ccGridSize'/>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='tileMapAtlasWithTileFile:mapFile:tileWidth:tileHeight:' class_method='true'>
<arg index='0' type='@' name='tile' declared_type='NSString*'/>
<arg index='1' type='@' name='map' declared_type='NSString*'/>
<arg index='2' type='i' name='w' declared_type='int'/>
<arg index='3' type='i' name='h' declared_type='int'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTiledGrid3D'>
<method selector='originalTile:'>
<arg index='0' type='{_ccGridSize=ii}' name='pos' declared_type='ccGridSize'/>
<retval type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
</method>
<method selector='setTile:coords:'>
<arg index='0' type='{_ccGridSize=ii}' name='pos' declared_type='ccGridSize'/>
<arg index='1' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' name='coords' declared_type='ccQuad3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tile:'>
<arg index='0' type='{_ccGridSize=ii}' name='pos' declared_type='ccGridSize'/>
<retval type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
</method>
</class>
<class name='CCTiledGrid3DAction'>
<method selector='originalTile:'>
<arg index='0' type='{_ccGridSize=ii}' name='pos' declared_type='ccGridSize'/>
<retval type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
</method>
<method selector='setTile:coords:'>
<arg index='0' type='{_ccGridSize=ii}' name='pos' declared_type='ccGridSize'/>
<arg index='1' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' name='coords' declared_type='ccQuad3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tile:'>
<arg index='0' type='{_ccGridSize=ii}' name='pos' declared_type='ccGridSize'/>
<retval type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
</method>
</class>
<class name='CCTimer'>
<method selector='initWithTarget:selector:'>
<arg index='0' type='@' name='t' declared_type='id'/>
<arg index='1' type=':' name='s' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:interval:repeat:delay:'>
<arg index='0' type='@' name='t' declared_type='id'/>
<arg index='1' type=':' name='s' declared_type='SEL'/>
<arg index='2' type='f' name='seconds' declared_type='ccTime'/>
<arg index='3' type='I' name='r' declared_type='uint'/>
<arg index='4' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='interval'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='setInterval:'>
<arg index='0' type='f' name='interval' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timerWithTarget:selector:' class_method='true'>
<arg index='0' type='@' name='t' declared_type='id'/>
<arg index='1' type=':' name='s' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='timerWithTarget:selector:interval:' class_method='true'>
<arg index='0' type='@' name='t' declared_type='id'/>
<arg index='1' type=':' name='s' declared_type='SEL'/>
<arg index='2' type='f' name='seconds' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='update:'>
<arg index='0' type='f' name='dt' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTintBy'>
<method selector='actionWithDuration:red:green:blue:' class_method='true'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='s' name='deltaRed' declared_type='GLshort'/>
<arg index='2' type='s' name='deltaGreen' declared_type='GLshort'/>
<arg index='3' type='s' name='deltaBlue' declared_type='GLshort'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:red:green:blue:'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='s' name='deltaRed' declared_type='GLshort'/>
<arg index='2' type='s' name='deltaGreen' declared_type='GLshort'/>
<arg index='3' type='s' name='deltaBlue' declared_type='GLshort'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTintTo'>
<method selector='actionWithDuration:red:green:blue:' class_method='true'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='C' name='red' declared_type='GLubyte'/>
<arg index='2' type='C' name='green' declared_type='GLubyte'/>
<arg index='3' type='C' name='blue' declared_type='GLubyte'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:red:green:blue:'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='C' name='red' declared_type='GLubyte'/>
<arg index='2' type='C' name='green' declared_type='GLubyte'/>
<arg index='3' type='C' name='blue' declared_type='GLubyte'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCToggleVisibility'>
<method selector='update:'>
<arg index='0' type='f' name='time' declared_type='ccTime'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTouchDispatcher'>
<method selector='addStandardDelegate:priority:'>
<arg index='0' type='@' name='delegate' declared_type='id'/>
<arg index='1' type='i' name='priority' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addTargetedDelegate:priority:swallowsTouches:'>
<arg index='0' type='@' name='delegate' declared_type='id'/>
<arg index='1' type='i' name='priority' declared_type='int'/>
<arg index='2' type='B' name='swallowsTouches' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dispatchEvents'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeAllDelegates'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeDelegate:'>
<arg index='0' type='@' name='delegate' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDispatchEvents:'>
<arg index='0' type='B' name='dispatchEvents' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPriority:forDelegate:'>
<arg index='0' type='i' name='priority' declared_type='int'/>
<arg index='1' type='@' name='delegate' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTouchHandler'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='enabledSelectors'>
<retval type='i' declared_type='ccTouchSelectorFlag'/>
</method>
<method selector='handlerWithDelegate:priority:' class_method='true'>
<arg index='0' type='@' name='aDelegate' declared_type='id'/>
<arg index='1' type='i' name='priority' declared_type='int'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDelegate:priority:'>
<arg index='0' type='@' name='aDelegate' declared_type='id'/>
<arg index='1' type='i' name='priority' declared_type='int'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='priority'>
<retval type='i' declared_type='int'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' name='delegate' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnabledSelectors:'>
<arg index='0' type='i' name='enabledSelectors' declared_type='ccTouchSelectorFlag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPriority:'>
<arg index='0' type='i' name='priority' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionFade'>
<method selector='initWithDuration:scene:withColor:'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='@' name='scene' declared_type='CCScene*'/>
<arg index='2' type='{_ccColor3B=CCC}' name='color' declared_type='ccColor3B'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='transitionWithDuration:scene:withColor:' class_method='true'>
<arg index='0' type='f' name='duration' declared_type='ccTime'/>
<arg index='1' type='@' name='scene' declared_type='CCScene*'/>
<arg index='2' type='{_ccColor3B=CCC}' name='color' declared_type='ccColor3B'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionFadeTR'>
<method selector='actionWithSize:'>
<arg index='0' type='{_ccGridSize=ii}' name='vector' declared_type='ccGridSize'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</class>
<class name='CCTransitionMoveInL'>
<method selector='action'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='initScenes'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionPageTurn'>
<method selector='actionWithSize:'>
<arg index='0' type='{_ccGridSize=ii}' name='vector' declared_type='ccGridSize'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='initWithDuration:scene:backwards:'>
<arg index='0' type='f' name='t' declared_type='ccTime'/>
<arg index='1' type='@' name='s' declared_type='CCScene*'/>
<arg index='2' type='B' name='back' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='transitionWithDuration:scene:backwards:' class_method='true'>
<arg index='0' type='f' name='t' declared_type='ccTime'/>
<arg index='1' type='@' name='s' declared_type='CCScene*'/>
<arg index='2' type='B' name='back' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionScene'>
<method selector='finish'>
<retval type='v' declared_type='void'/>
</method>
<method selector='hideOutShowIn'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithDuration:scene:'>
<arg index='0' type='f' name='t' declared_type='ccTime'/>
<arg index='1' type='@' name='s' declared_type='CCScene*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='transitionWithDuration:scene:' class_method='true'>
<arg index='0' type='f' name='t' declared_type='ccTime'/>
<arg index='1' type='@' name='s' declared_type='CCScene*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionSceneOriented'>
<method selector='initWithDuration:scene:orientation:'>
<arg index='0' type='f' name='t' declared_type='ccTime'/>
<arg index='1' type='@' name='s' declared_type='CCScene*'/>
<arg index='2' type='i' name='o' declared_type='tOrientation'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='transitionWithDuration:scene:orientation:' class_method='true'>
<arg index='0' type='f' name='t' declared_type='ccTime'/>
<arg index='1' type='@' name='s' declared_type='CCScene*'/>
<arg index='2' type='i' name='o' declared_type='tOrientation'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionSlideInL'>
<method selector='action'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='initScenes'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionSplitCols'>
<method selector='action'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</class>
<class name='CCTurnOffTiles'>
<method selector='actionWithSeed:grid:duration:' class_method='true'>
<arg index='0' type='i' name='s' declared_type='int'/>
<arg index='1' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='2' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSeed:grid:duration:'>
<arg index='0' type='i' name='s' declared_type='int'/>
<arg index='1' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='2' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTwirl'>
<method selector='actionWithPosition:twirls:amplitude:grid:duration:' class_method='true'>
<arg index='0' type='{CGPoint=ff}' name='pos' declared_type='CGPoint'/>
<arg index='1' type='i' name='t' declared_type='int'/>
<arg index='2' type='f' name='amp' declared_type='float'/>
<arg index='3' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='4' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithPosition:twirls:amplitude:grid:duration:'>
<arg index='0' type='{CGPoint=ff}' name='pos' declared_type='CGPoint'/>
<arg index='1' type='i' name='t' declared_type='int'/>
<arg index='2' type='f' name='amp' declared_type='float'/>
<arg index='3' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='4' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' type='f' name='amplitude' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' type='f' name='amplitudeRate' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg index='0' type='{CGPoint=ff}' name='position' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCWaves'>
<method selector='actionWithWaves:amplitude:horizontal:vertical:grid:duration:' class_method='true'>
<arg index='0' type='i' name='wav' declared_type='int'/>
<arg index='1' type='f' name='amp' declared_type='float'/>
<arg index='2' type='B' name='h' declared_type='BOOL'/>
<arg index='3' type='B' name='v' declared_type='BOOL'/>
<arg index='4' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='5' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithWaves:amplitude:horizontal:vertical:grid:duration:'>
<arg index='0' type='i' name='wav' declared_type='int'/>
<arg index='1' type='f' name='amp' declared_type='float'/>
<arg index='2' type='B' name='h' declared_type='BOOL'/>
<arg index='3' type='B' name='v' declared_type='BOOL'/>
<arg index='4' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='5' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' type='f' name='amplitude' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' type='f' name='amplitudeRate' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCWaves3D'>
<method selector='actionWithWaves:amplitude:grid:duration:' class_method='true'>
<arg index='0' type='i' name='wav' declared_type='int'/>
<arg index='1' type='f' name='amp' declared_type='float'/>
<arg index='2' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='3' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg index='0' type='i' name='wav' declared_type='int'/>
<arg index='1' type='f' name='amp' declared_type='float'/>
<arg index='2' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='3' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' type='f' name='amplitude' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' type='f' name='amplitudeRate' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCWavesTiles3D'>
<method selector='actionWithWaves:amplitude:grid:duration:' class_method='true'>
<arg index='0' type='i' name='wav' declared_type='int'/>
<arg index='1' type='f' name='amp' declared_type='float'/>
<arg index='2' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='3' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg index='0' type='i' name='wav' declared_type='int'/>
<arg index='1' type='f' name='amp' declared_type='float'/>
<arg index='2' type='{_ccGridSize=ii}' name='gridSize' declared_type='ccGridSize'/>
<arg index='3' type='f' name='d' declared_type='ccTime'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg index='0' type='f' name='amplitude' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg index='0' type='f' name='amplitudeRate' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSObject'>
<method selector='backingSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='ccTouchBegan:withEvent:'>
<arg index='0' type='@' name='touch' declared_type='id'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccTouchCancelled:withEvent:'>
<arg index='0' type='@' name='touch' declared_type='id'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchEnded:withEvent:'>
<arg index='0' type='@' name='touch' declared_type='id'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchMoved:withEvent:'>
<arg index='0' type='@' name='touch' declared_type='id'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesBegan:withEvent:'>
<arg index='0' type='@' name='touches' declared_type='NSSet*'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesCancelled:withEvent:'>
<arg index='0' type='@' name='touches' declared_type='NSSet*'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesEnded:withEvent:'>
<arg index='0' type='@' name='touches' declared_type='NSSet*'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesMoved:withEvent:'>
<arg index='0' type='@' name='touches' declared_type='NSSet*'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='colorRenderBuffer'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='context'>
<retval type='@' declared_type='id'/>
</method>
<method selector='defaultFrameBuffer'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='doesOpacityModifyRGB'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='easeActionWithAction:'>
<arg index='0' type='@' name='action' declared_type='CCActionInterval*'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='initWithDepthFormat:withPixelFormat:withSharegroup:withMultiSampling:withNumberOfSamples:'>
<arg index='0' type='I' name='depthFormat' declared_type='unsigned int'/>
<arg index='1' type='I' name='pixelFormat' declared_type='unsigned int'/>
<arg index='2' type='@' name='sharegroup' declared_type='id'/>
<arg index='3' type='B' name='multiSampling' declared_type='BOOL'/>
<arg index='4' type='I' name='requestedSamples' declared_type='unsigned int'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='msaaColorBuffer'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='msaaFrameBuffer'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='resizeFromLayer:'>
<arg index='0' type='@' name='layer' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setBlendFunc:'>
<arg index='0' type='{_ccBlendFunc=II}' name='blendFunc' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCString:'>
<arg index='0' type='*' name='label' declared_type='char*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg index='0' type='{_ccColor3B=CCC}' name='color' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg index='0' type='C' name='opacity' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacityModifyRGB:'>
<arg index='0' type='B' name='boolean' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:'>
<arg index='0' type='@' name='label' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldAutorotateToInterfaceOrientation:'>
<arg index='0' type='@' name='interfaceOrientation' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='string'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='touchesBegan:withEvent:'>
<arg index='0' type='@' name='touches' declared_type='NSSet*'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesCancelled:withEvent:'>
<arg index='0' type='@' name='touches' declared_type='NSSet*'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesEnded:withEvent:'>
<arg index='0' type='@' name='touches' declared_type='NSSet*'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesMoved:withEvent:'>
<arg index='0' type='@' name='touches' declared_type='NSSet*'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateProjection'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSThread'>
<method selector='performBlock:'>
<arg index='0' function_pointer='true' type='@?' name='block' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='performBlock:waitUntilDone:'>
<arg index='0' function_pointer='true' type='@?' name='block' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<arg index='1' type='B' name='wait' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performBlock:withObject:waitUntilDone:'>
<arg index='0' function_pointer='true' type='@?' name='block' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='1' type='@' name='object' declared_type='id'/>
<arg index='2' type='B' name='wait' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<informal_protocol name='CCBlendProtocol'>
<method selector='blendFunc' type='{_ccBlendFunc=II}8@0:4'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='setBlendFunc:' type='v16@0:4{_ccBlendFunc=II}8'>
<arg index='0' type='{_ccBlendFunc=II}' name='blendFunc' declared_type='ccBlendFunc'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCDirectorDelegate'>
<method selector='shouldAutorotateToInterfaceOrientation:' type='B12@0:4@8'>
<arg index='0' type='@' name='interfaceOrientation' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='updateProjection' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCESRenderer'>
<method selector='backingSize' type='{CGSize=ff}8@0:4'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='colorRenderBuffer' type='I8@0:4'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='context' type='@8@0:4'>
<retval type='@' declared_type='id'/>
</method>
<method selector='defaultFrameBuffer' type='I8@0:4'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='initWithDepthFormat:withPixelFormat:withSharegroup:withMultiSampling:withNumberOfSamples:' type='@28@0:4I8I12@16B20I24'>
<arg index='0' type='I' name='depthFormat' declared_type='unsigned int'/>
<arg index='1' type='I' name='pixelFormat' declared_type='unsigned int'/>
<arg index='2' type='@' name='sharegroup' declared_type='id'/>
<arg index='3' type='B' name='multiSampling' declared_type='BOOL'/>
<arg index='4' type='I' name='requestedSamples' declared_type='unsigned int'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='msaaColorBuffer' type='I8@0:4'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='msaaFrameBuffer' type='I8@0:4'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='resizeFromLayer:' type='B12@0:4@8'>
<arg index='0' type='@' name='layer' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='CCLabelProtocol'>
<method selector='setCString:' type='v12@0:4*8'>
<arg index='0' type='*' name='label' declared_type='char*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:' type='v12@0:4@8'>
<arg index='0' type='@' name='label' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='string' type='@8@0:4'>
<retval type='@' declared_type='NSString*'/>
</method>
</informal_protocol>
<informal_protocol name='CCRGBAProtocol'>
<method selector='color' type='{_ccColor3B=CCC}8@0:4'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='doesOpacityModifyRGB' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='opacity' type='C8@0:4'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='setColor:' type='v11@0:4{_ccColor3B=CCC}8'>
<arg index='0' type='{_ccColor3B=CCC}' name='color' declared_type='ccColor3B'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:' type='v12@0:4C8'>
<arg index='0' type='C' name='opacity' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacityModifyRGB:' type='v12@0:4B8'>
<arg index='0' type='B' name='boolean' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCStandardTouchDelegate'>
<method selector='ccTouchesBegan:withEvent:' type='v16@0:4@8@12'>
<arg index='0' type='@' name='touches' declared_type='NSSet*'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesCancelled:withEvent:' type='v16@0:4@8@12'>
<arg index='0' type='@' name='touches' declared_type='NSSet*'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesEnded:withEvent:' type='v16@0:4@8@12'>
<arg index='0' type='@' name='touches' declared_type='NSSet*'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesMoved:withEvent:' type='v16@0:4@8@12'>
<arg index='0' type='@' name='touches' declared_type='NSSet*'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCTargetedTouchDelegate'>
<method selector='ccTouchBegan:withEvent:' type='B16@0:4@8@12'>
<arg index='0' type='@' name='touch' declared_type='id'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccTouchCancelled:withEvent:' type='v16@0:4@8@12'>
<arg index='0' type='@' name='touch' declared_type='id'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchEnded:withEvent:' type='v16@0:4@8@12'>
<arg index='0' type='@' name='touch' declared_type='id'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchMoved:withEvent:' type='v16@0:4@8@12'>
<arg index='0' type='@' name='touch' declared_type='id'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCTextureProtocol'>
<method selector='setTexture:' type='v12@0:4@8'>
<arg index='0' type='@' name='texture' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='texture' type='@8@0:4'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
</informal_protocol>
<informal_protocol name='CCTouchDelegate'>
<method selector='touchesBegan:withEvent:' type='v16@0:4@8@12'>
<arg index='0' type='@' name='touches' declared_type='NSSet*'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesCancelled:withEvent:' type='v16@0:4@8@12'>
<arg index='0' type='@' name='touches' declared_type='NSSet*'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesEnded:withEvent:' type='v16@0:4@8@12'>
<arg index='0' type='@' name='touches' declared_type='NSSet*'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesMoved:withEvent:' type='v16@0:4@8@12'>
<arg index='0' type='@' name='touches' declared_type='NSSet*'/>
<arg index='1' type='@' name='event' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCTransitionEaseScene'>
<method selector='easeActionWithAction:' type='@12@0:4@8'>
<arg index='0' type='@' name='action' declared_type='CCActionInterval*'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</informal_protocol>
</signatures>
