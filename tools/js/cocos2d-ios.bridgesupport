<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='CCPVRMipmap' type='{CCPVRMipmap=&quot;address&quot;*&quot;len&quot;I}'>
<field name='address' type='*' declared_type='unsigned char*'/>
<field name='len' type='I' declared_type='unsigned int'/>
</struct>
<struct name='CCZHeader' type='{CCZHeader=&quot;sig&quot;[4C]&quot;compression_type&quot;S&quot;version&quot;S&quot;reserved&quot;I&quot;len&quot;I}'>
<field name='sig' type='[4C]' declared_type='uint8_t*'/>
<field name='compression_type' type='S' declared_type='uint16_t'/>
<field name='version' type='S' declared_type='uint16_t'/>
<field name='reserved' type='I' declared_type='uint32_t'/>
<field name='len' type='I' declared_type='uint32_t'/>
</struct>
<struct name='UT_hash_bucket' type='{UT_hash_bucket=&quot;hh_head&quot;^{UT_hash_handle}&quot;count&quot;I&quot;expand_mult&quot;I}'>
<field name='hh_head' type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}' declared_type='struct UT_hash_handle*'/>
<field name='count' type='I' declared_type='unsigned int'/>
<field name='expand_mult' type='I' declared_type='unsigned int'/>
</struct>
<struct name='UT_hash_handle' type='{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}'>
<field name='tbl' type='^{UT_hash_table=^{UT_hash_bucket}III^{UT_hash_handle}iIIIII}' declared_type='struct UT_hash_table*'/>
<field name='prev' type='^v' declared_type='void*'/>
<field name='next' type='^v' declared_type='void*'/>
<field name='hh_prev' type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}' declared_type='struct UT_hash_handle*'/>
<field name='hh_next' type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}' declared_type='struct UT_hash_handle*'/>
<field name='key' type='^v' declared_type='void*'/>
<field name='keylen' type='I' declared_type='unsigned int'/>
<field name='hashv' type='I' declared_type='unsigned int'/>
</struct>
<struct name='UT_hash_table' type='{UT_hash_table=&quot;buckets&quot;^{UT_hash_bucket}&quot;num_buckets&quot;I&quot;log2_num_buckets&quot;I&quot;num_items&quot;I&quot;tail&quot;^{UT_hash_handle}&quot;hho&quot;i&quot;ideal_chain_maxlen&quot;I&quot;nonideal_items&quot;I&quot;ineff_expands&quot;I&quot;noexpand&quot;I&quot;signature&quot;I}'>
<field name='buckets' type='^{UT_hash_bucket=^{UT_hash_handle}II}' declared_type='UT_hash_bucket*'/>
<field name='num_buckets' type='I' declared_type='unsigned int'/>
<field name='log2_num_buckets' type='I' declared_type='unsigned int'/>
<field name='num_items' type='I' declared_type='unsigned int'/>
<field name='tail' type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}' declared_type='struct UT_hash_handle*'/>
<field name='hho' type='i' declared_type='ptrdiff_t'/>
<field name='ideal_chain_maxlen' type='I' declared_type='unsigned int'/>
<field name='nonideal_items' type='I' declared_type='unsigned int'/>
<field name='ineff_expands' type='I' declared_type='unsigned int'/>
<field name='noexpand' type='I' declared_type='unsigned int'/>
<field name='signature' type='I' declared_type='uint32_t'/>
</struct>
<struct name='ccArray' type='{ccArray=&quot;num&quot;I&quot;max&quot;I&quot;arr&quot;^@}'>
<field name='num' type='I' declared_type='NSUInteger'/>
<field name='max' type='I' declared_type='NSUInteger'/>
<field name='arr' type='^@' declared_type='CCARRAY_ID*'/>
</struct>
<struct name='ccBMFontDef' type='{_BMFontDef=&quot;charID&quot;S&quot;rect&quot;{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}&quot;xOffset&quot;s&quot;yOffset&quot;s&quot;xAdvance&quot;s}'>
<field name='charID' type='S' declared_type='unichar'/>
<field name='rect' type='{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}' declared_type='CGRect'/>
<field name='xOffset' type='s' declared_type='short'/>
<field name='yOffset' type='s' declared_type='short'/>
<field name='xAdvance' type='s' declared_type='short'/>
</struct>
<struct name='ccBMFontPadding' type='{_BMFontPadding=&quot;left&quot;i&quot;top&quot;i&quot;right&quot;i&quot;bottom&quot;i}'>
<field name='left' type='i' declared_type='int'/>
<field name='top' type='i' declared_type='int'/>
<field name='right' type='i' declared_type='int'/>
<field name='bottom' type='i' declared_type='int'/>
</struct>
<struct name='ccBezierConfig' type='{_ccBezierConfig=&quot;endPosition&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;controlPoint_1&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;controlPoint_2&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}}'>
<field name='endPosition' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' declared_type='CGPoint'/>
<field name='controlPoint_1' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' declared_type='CGPoint'/>
<field name='controlPoint_2' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' declared_type='CGPoint'/>
</struct>
<struct name='ccBlendFunc' type='{_ccBlendFunc=&quot;src&quot;I&quot;dst&quot;I}'>
<field name='src' type='I' declared_type='GLenum'/>
<field name='dst' type='I' declared_type='GLenum'/>
</struct>
<struct name='ccCArray' type='{ccArray=&quot;num&quot;I&quot;max&quot;I&quot;arr&quot;^@}'>
<field name='num' type='I' declared_type='NSUInteger'/>
<field name='max' type='I' declared_type='NSUInteger'/>
<field name='arr' type='^@' declared_type='CCARRAY_ID*'/>
</struct>
<struct name='ccColor3B' type='{_ccColor3B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C}'>
<field name='r' type='C' declared_type='GLubyte'/>
<field name='g' type='C' declared_type='GLubyte'/>
<field name='b' type='C' declared_type='GLubyte'/>
</struct>
<struct name='ccColor4B' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}'>
<field name='r' type='C' declared_type='GLubyte'/>
<field name='g' type='C' declared_type='GLubyte'/>
<field name='b' type='C' declared_type='GLubyte'/>
<field name='a' type='C' declared_type='GLubyte'/>
</struct>
<struct name='ccColor4F' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}'>
<field name='r' type='f' declared_type='GLfloat'/>
<field name='g' type='f' declared_type='GLfloat'/>
<field name='b' type='f' declared_type='GLfloat'/>
<field name='a' type='f' declared_type='GLfloat'/>
</struct>
<struct name='ccGridSize' type='{_ccGridSize=&quot;x&quot;i&quot;y&quot;i}'>
<field name='x' type='i' declared_type='NSInteger'/>
<field name='y' type='i' declared_type='NSInteger'/>
</struct>
<struct name='ccPointSprite' type='{_ccPointSprite=&quot;pos&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;size&quot;f}'>
<field name='pos' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F'/>
<field name='color' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' declared_type='ccColor4B'/>
<field name='size' type='f' declared_type='GLfloat'/>
</struct>
<struct name='ccQuad2' type='{_ccQuad2=&quot;tl&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;tr&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;bl&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;br&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}}'>
<field name='tl' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F'/>
<field name='tr' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F'/>
<field name='bl' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F'/>
<field name='br' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F'/>
</struct>
<struct name='ccQuad3' type='{_ccQuad3=&quot;bl&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;br&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;tl&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;tr&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}}'>
<field name='bl' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F'/>
<field name='br' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F'/>
<field name='tl' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F'/>
<field name='tr' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F'/>
</struct>
<struct name='ccTex2F' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}'>
<field name='u' type='f' declared_type='GLfloat'/>
<field name='v' type='f' declared_type='GLfloat'/>
</struct>
<struct name='ccTexParams' type='{_ccTexParams=&quot;minFilter&quot;I&quot;magFilter&quot;I&quot;wrapS&quot;I&quot;wrapT&quot;I}'>
<field name='minFilter' type='I' declared_type='GLuint'/>
<field name='magFilter' type='I' declared_type='GLuint'/>
<field name='wrapS' type='I' declared_type='GLuint'/>
<field name='wrapT' type='I' declared_type='GLuint'/>
</struct>
<struct name='ccTouchHandlerHelperData' type='{ccTouchHandlerHelperData=&quot;touchesSel&quot;:&quot;touchSel&quot;:&quot;type&quot;i}'>
<field name='touchesSel' type=':' declared_type='SEL'/>
<field name='touchSel' type=':' declared_type='SEL'/>
<field name='type' type='i' declared_type='ccTouchSelectorFlag'/>
</struct>
<struct name='ccV2F_C4B_T2F' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'>
<field name='vertices' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F'/>
<field name='colors' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' declared_type='ccColor4B'/>
<field name='texCoords' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' declared_type='ccTex2F'/>
</struct>
<struct name='ccV2F_C4B_T2F_Quad' type='{_ccV2F_C4B_T2F_Quad=&quot;bl&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tl&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}'>
<field name='bl' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4B_T2F'/>
<field name='br' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4B_T2F'/>
<field name='tl' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4B_T2F'/>
<field name='tr' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4B_T2F'/>
</struct>
<struct name='ccV2F_C4F_T2F' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'>
<field name='vertices' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}' declared_type='ccVertex2F'/>
<field name='colors' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F'/>
<field name='texCoords' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' declared_type='ccTex2F'/>
</struct>
<struct name='ccV2F_C4F_T2F_Quad' type='{_ccV2F_C4F_T2F_Quad=&quot;bl&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tl&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}'>
<field name='bl' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4F_T2F'/>
<field name='br' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4F_T2F'/>
<field name='tl' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4F_T2F'/>
<field name='tr' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV2F_C4F_T2F'/>
</struct>
<struct name='ccV3F_C4B_T2F' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'>
<field name='vertices' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F'/>
<field name='colors' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}' declared_type='ccColor4B'/>
<field name='texCoords' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' declared_type='ccTex2F'/>
</struct>
<struct name='ccV3F_C4B_T2F_Quad' type='{_ccV3F_C4B_T2F_Quad=&quot;tl&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;bl&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}'>
<field name='tl' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4B_T2F'/>
<field name='bl' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4B_T2F'/>
<field name='tr' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4B_T2F'/>
<field name='br' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4B_T2F'/>
</struct>
<struct name='ccV3F_C4F_T2F' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'>
<field name='vertices' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}' declared_type='ccVertex3F'/>
<field name='colors' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F'/>
<field name='texCoords' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}' declared_type='ccTex2F'/>
</struct>
<struct name='ccV3F_C4F_T2F_Quad' type='{_ccV3F_C4F_T2F_Quad=&quot;tl&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;bl&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}'>
<field name='tl' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4F_T2F'/>
<field name='bl' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4F_T2F'/>
<field name='tr' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4F_T2F'/>
<field name='br' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}' declared_type='ccV3F_C4F_T2F'/>
</struct>
<struct name='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'>
<field name='x' type='f' declared_type='GLfloat'/>
<field name='y' type='f' declared_type='GLfloat'/>
</struct>
<struct name='ccVertex3F' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field name='x' type='f' declared_type='GLfloat'/>
<field name='y' type='f' declared_type='GLfloat'/>
<field name='z' type='f' declared_type='GLfloat'/>
</struct>
<struct name='sCCParticle' type='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;startPos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;I&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}'>
<field name='pos' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' declared_type='CGPoint'/>
<field name='startPos' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' declared_type='CGPoint'/>
<field name='color' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F'/>
<field name='deltaColor' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F'/>
<field name='size' type='f' declared_type='float'/>
<field name='deltaSize' type='f' declared_type='float'/>
<field name='rotation' type='f' declared_type='float'/>
<field name='deltaRotation' type='f' declared_type='float'/>
<field name='timeToLive' type='f' declared_type='ccTime'/>
<field name='atlasIndex' type='I' declared_type='NSUInteger'/>
<field name='mode' type='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})' declared_type='union sCCParticle::'/>
</struct>
<struct name='sImageTGA' type='{sImageTGA=&quot;status&quot;i&quot;type&quot;C&quot;pixelDepth&quot;C&quot;width&quot;s&quot;height&quot;s&quot;imageData&quot;*&quot;flipped&quot;i}'>
<field name='status' type='i' declared_type='int'/>
<field name='type' type='C' declared_type='unsigned char'/>
<field name='pixelDepth' type='C' declared_type='unsigned char'/>
<field name='width' type='s' declared_type='short'/>
<field name='height' type='s' declared_type='short'/>
<field name='imageData' type='*' declared_type='unsigned char*'/>
<field name='flipped' type='i' declared_type='int'/>
</struct>
<struct name='tCCParticle' type='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;startPos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;I&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}'>
<field name='pos' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' declared_type='CGPoint'/>
<field name='startPos' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' declared_type='CGPoint'/>
<field name='color' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F'/>
<field name='deltaColor' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}' declared_type='ccColor4F'/>
<field name='size' type='f' declared_type='float'/>
<field name='deltaSize' type='f' declared_type='float'/>
<field name='rotation' type='f' declared_type='float'/>
<field name='deltaRotation' type='f' declared_type='float'/>
<field name='timeToLive' type='f' declared_type='ccTime'/>
<field name='atlasIndex' type='I' declared_type='NSUInteger'/>
<field name='mode' type='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})' declared_type='union sCCParticle::'/>
</struct>
<struct name='tHashElement' type='{_hashElement=&quot;actions&quot;^{ccArray}&quot;actionIndex&quot;I&quot;currentActionSalvaged&quot;B&quot;paused&quot;B&quot;hh&quot;{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}&quot;target&quot;@&quot;currentAction&quot;@&quot;CCAction&quot;}'>
<field name='actions' type='^{ccArray=II^@}' declared_type='struct ccArray*'/>
<field name='actionIndex' type='I' declared_type='NSUInteger'/>
<field name='currentActionSalvaged' type='B' declared_type='BOOL'/>
<field name='paused' type='B' declared_type='BOOL'/>
<field name='hh' type='{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}' declared_type='UT_hash_handle'/>
<field name='target' type='@' declared_type='id'/>
<field name='currentAction' type='@&quot;CCAction&quot;' declared_type='CCAction*'/>
</struct>
<struct name='tImageTGA' type='{sImageTGA=&quot;status&quot;i&quot;type&quot;C&quot;pixelDepth&quot;C&quot;width&quot;s&quot;height&quot;s&quot;imageData&quot;*&quot;flipped&quot;i}'>
<field name='status' type='i' declared_type='int'/>
<field name='type' type='C' declared_type='unsigned char'/>
<field name='pixelDepth' type='C' declared_type='unsigned char'/>
<field name='width' type='s' declared_type='short'/>
<field name='height' type='s' declared_type='short'/>
<field name='imageData' type='*' declared_type='unsigned char*'/>
<field name='flipped' type='i' declared_type='int'/>
</struct>
<constant name='ccBLACK' type='{_ccColor3B=CCC}' const='true' declared_type='ccColor3B'/>
<constant name='ccBLUE' type='{_ccColor3B=CCC}' const='true' declared_type='ccColor3B'/>
<constant name='ccGRAY' type='{_ccColor3B=CCC}' const='true' declared_type='ccColor3B'/>
<constant name='ccGREEN' type='{_ccColor3B=CCC}' const='true' declared_type='ccColor3B'/>
<constant name='ccMAGENTA' type='{_ccColor3B=CCC}' const='true' declared_type='ccColor3B'/>
<constant name='ccORANGE' type='{_ccColor3B=CCC}' const='true' declared_type='ccColor3B'/>
<constant name='ccPositionColor_frag' type='*' const='true' declared_type='GLchar*'/>
<constant name='ccPositionColor_vert' type='*' const='true' declared_type='GLchar*'/>
<constant name='ccPositionTextureA8Color_frag' type='*' const='true' declared_type='GLchar*'/>
<constant name='ccPositionTextureA8Color_vert' type='*' const='true' declared_type='GLchar*'/>
<constant name='ccPositionTextureColorAlphaTest_frag' type='*' const='true' declared_type='GLchar*'/>
<constant name='ccPositionTextureColor_frag' type='*' const='true' declared_type='GLchar*'/>
<constant name='ccPositionTextureColor_vert' type='*' const='true' declared_type='GLchar*'/>
<constant name='ccPositionTexture_frag' type='*' const='true' declared_type='GLchar*'/>
<constant name='ccPositionTexture_uColor_frag' type='*' const='true' declared_type='GLchar*'/>
<constant name='ccPositionTexture_uColor_vert' type='*' const='true' declared_type='GLchar*'/>
<constant name='ccPositionTexture_vert' type='*' const='true' declared_type='GLchar*'/>
<constant name='ccPosition_uColor_frag' type='*' const='true' declared_type='GLchar*'/>
<constant name='ccPosition_uColor_vert' type='*' const='true' declared_type='GLchar*'/>
<constant name='ccRED' type='{_ccColor3B=CCC}' const='true' declared_type='ccColor3B'/>
<constant name='ccWHITE' type='{_ccColor3B=CCC}' const='true' declared_type='ccColor3B'/>
<constant name='ccYELLOW' type='{_ccColor3B=CCC}' const='true' declared_type='ccColor3B'/>
<constant name='kCCProfilerCategoryBatchSprite' type='B' declared_type='BOOL'/>
<constant name='kCCProfilerCategoryParticles' type='B' declared_type='BOOL'/>
<constant name='kCCProfilerCategorySprite' type='B' declared_type='BOOL'/>
<string_constant nsstring='true' value='CCAnimationFrameDisplayedNotification' name='CCAnimationFrameDisplayedNotification'/>
<string_constant nsstring='true' value='a_color' name='kCCAttributeNameColor'/>
<string_constant nsstring='true' value='a_position' name='kCCAttributeNamePosition'/>
<string_constant nsstring='true' value='a_texCoord' name='kCCAttributeNameTexCoord'/>
<string_constant nsstring='true' value='ShaderPositionColor' name='kCCShader_PositionColor'/>
<string_constant nsstring='true' value='ShaderPositionTexture' name='kCCShader_PositionTexture'/>
<string_constant nsstring='true' value='ShaderPositionTextureA8Color' name='kCCShader_PositionTextureA8Color'/>
<string_constant nsstring='true' value='ShaderPositionTextureColor' name='kCCShader_PositionTextureColor'/>
<string_constant nsstring='true' value='ShaderPositionTextureColorAlphaTest' name='kCCShader_PositionTextureColorAlphaTest'/>
<string_constant nsstring='true' value='ShaderPositionTexture_uColor' name='kCCShader_PositionTexture_uColor'/>
<string_constant nsstring='true' value='ShaderPosition_uColor' name='kCCShader_Position_uColor'/>
<string_constant value='u_alpha_value' name='kCCUniformAlphaTestValue'/>
<string_constant value='u_MVPMatrix' name='kCCUniformMVPMatrix_s'/>
<string_constant value='u_texture' name='kCCUniformSampler_s'/>
<enum value='4294967295' name='CCSpriteIndexNotInitialized'/>
<enum value='1' name='CCTMXOrientationHex'/>
<enum value='2' name='CCTMXOrientationIso'/>
<enum value='0' name='CCTMXOrientationOrtho'/>
<enum value='0' name='CCTextAlignmentLeft'/>
<enum value='1' name='CCZ_COMPRESSION_BZIP2'/>
<enum value='2' name='CCZ_COMPRESSION_GZIP'/>
<enum value='3' name='CCZ_COMPRESSION_NONE'/>
<enum value='0' name='CCZ_COMPRESSION_ZLIB'/>
<enum value='771' name='CC_BLEND_DST'/>
<enum value='1' name='CC_BLEND_SRC'/>
<enum value='0' name='CC_DIRECTOR_IOS_USE_BACKGROUND_THREAD'/>
<enum value='0' name='CC_DIRECTOR_MAC_THREAD'/>
<enum value='0.1f' name='CC_DIRECTOR_STATS_INTERVAL'/>
<enum value='1' name='CC_ENABLE_DEPRECATED'/>
<enum value='0' name='CC_ENABLE_GL_STATE_CACHE'/>
<enum value='0' name='CC_ENABLE_PROFILERS'/>
<enum value='0' name='CC_FIX_ARTIFACTS_BY_STRECHING_TEXEL'/>
<enum value='8' name='CC_GL_ALL'/>
<enum value='8' name='CC_GL_BLEND'/>
<enum value='0' name='CC_LABELATLAS_DEBUG_DRAW'/>
<enum value='0' name='CC_LABELBMFONT_DEBUG_DRAW'/>
<enum value='0' name='CC_MAC_USE_DISPLAY_LINK_THREAD'/>
<enum value='2' name='CC_MAC_USE_MAIN_THREAD'/>
<enum value='1' name='CC_MAC_USE_OWN_THREAD'/>
<enum value='1' name='CC_NODE_RENDER_SUBPIXEL'/>
<enum value='16' name='CC_PVRMIPMAP_MAX'/>
<enum value='1' name='CC_SPRITEBATCHNODE_RENDER_SUBPIXEL'/>
<enum value='0' name='CC_SPRITE_DEBUG_DRAW'/>
<enum value='0' name='CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP'/>
<enum value='1' name='CC_TEXTURE_ATLAS_USE_VAO'/>
<enum value='1' name='CC_USE_LA88_LABELS'/>
<enum value='131072' name='COCOS2D_VERSION'/>
<enum value='10' name='HASH_BKT_CAPACITY_THRESH'/>
<enum value='2971803890' name='HASH_BLOOM_SIGNATURE'/>
<enum value='32' name='HASH_INITIAL_NUM_BUCKETS'/>
<enum value='5' name='HASH_INITIAL_NUM_BUCKETS_LOG2'/>
<enum value='2685476833' name='HASH_SIGNATURE'/>
<enum value='5' name='TGA_ERROR_COMPRESSED_FILE'/>
<enum value='1' name='TGA_ERROR_FILE_OPEN'/>
<enum value='3' name='TGA_ERROR_INDEXED_COLOR'/>
<enum value='4' name='TGA_ERROR_MEMORY'/>
<enum value='2' name='TGA_ERROR_READING_FILE'/>
<enum value='0' name='TGA_OK'/>
<enum value='2' name='TMXLayerAttribBase64'/>
<enum value='4' name='TMXLayerAttribGzip'/>
<enum value='1' name='TMXLayerAttribNone'/>
<enum value='8' name='TMXLayerAttribZlib'/>
<enum value='2' name='TMXPropertyLayer'/>
<enum value='1' name='TMXPropertyMap'/>
<enum value='0' name='TMXPropertyNone'/>
<enum value='4' name='TMXPropertyObject'/>
<enum value='3' name='TMXPropertyObjectGroup'/>
<enum value='5' name='TMXPropertyTile'/>
<enum value='-1' name='kCCActionTagInvalid'/>
<enum value='0' name='kCCDirectorProjection2D'/>
<enum value='1' name='kCCDirectorProjection3D'/>
<enum value='2' name='kCCDirectorProjectionCustom'/>
<enum value='1' name='kCCDirectorProjectionDefault'/>
<enum value='3758096384' name='kCCFlipedAll'/>
<enum value='536870911' name='kCCFlippedMask'/>
<enum value='0' name='kCCImageFormatJPEG'/>
<enum value='0' name='kCCImageFormatJPG'/>
<enum value='1' name='kCCImageFormatPNG'/>
<enum value='32' name='kCCItemSize'/>
<enum value='-1' name='kCCLabelAutomaticWidth'/>
<enum value='1' name='kCCLineBreakModeCharacterWrap'/>
<enum value='2' name='kCCLineBreakModeClip'/>
<enum value='3' name='kCCLineBreakModeHeadTruncation'/>
<enum value='5' name='kCCLineBreakModeMiddleTruncation'/>
<enum value='4' name='kCCLineBreakModeTailTruncation'/>
<enum value='0' name='kCCLineBreakModeWordWrap'/>
<enum value='168165376' name='kCCMacVersion_10_6'/>
<enum value='168230912' name='kCCMacVersion_10_7'/>
<enum value='168296448' name='kCCMacVersion_10_8'/>
<enum value='-128' name='kCCMenuHandlerPriority'/>
<enum value='1' name='kCCMenuStateTrackingTouch'/>
<enum value='0' name='kCCMenuStateWaiting'/>
<enum value='-1' name='kCCNodeTagInvalid'/>
<enum value='-1' name='kCCParticleDurationInfinity'/>
<enum value='0' name='kCCParticleModeGravity'/>
<enum value='1' name='kCCParticleModeRadius'/>
<enum value='-1' name='kCCParticleStartRadiusEqualToEndRadius'/>
<enum value='-1' name='kCCParticleStartSizeEqualToEndSize'/>
<enum value='0' name='kCCPositionTypeFree'/>
<enum value='2' name='kCCPositionTypeGrouped'/>
<enum value='1' name='kCCPositionTypeRelative'/>
<enum value='-2147483647' name='kCCPriorityNonSystemMin'/>
<enum value='-2147483648' name='kCCPrioritySystem'/>
<enum value='1' name='kCCProgressTimerTypeBar'/>
<enum value='0' name='kCCProgressTimerTypeRadial'/>
<enum value='4294967294' name='kCCRepeatForever'/>
<enum value='0' name='kCCResolutionStandard'/>
<enum value='0' name='kCCResolutionUnknown'/>
<enum value='3' name='kCCResolutioniPad'/>
<enum value='4' name='kCCResolutioniPadRetinaDisplay'/>
<enum value='1' name='kCCResolutioniPhone'/>
<enum value='2' name='kCCResolutioniPhoneRetinaDisplay'/>
<enum value='536870912' name='kCCTMXTileDiagonalFlag'/>
<enum value='2147483648' name='kCCTMXTileHorizontalFlag'/>
<enum value='1073741824' name='kCCTMXTileVerticalFlag'/>
<enum value='1' name='kCCTextAlignmentCenter'/>
<enum value='0' name='kCCTextAlignmentLeft'/>
<enum value='2' name='kCCTextAlignmentRight'/>
<enum value='3' name='kCCTexture2DPixelFormat_A8'/>
<enum value='5' name='kCCTexture2DPixelFormat_AI88'/>
<enum value='0' name='kCCTexture2DPixelFormat_Default'/>
<enum value='4' name='kCCTexture2DPixelFormat_I8'/>
<enum value='9' name='kCCTexture2DPixelFormat_PVRTC2'/>
<enum value='8' name='kCCTexture2DPixelFormat_PVRTC4'/>
<enum value='2' name='kCCTexture2DPixelFormat_RGB565'/>
<enum value='7' name='kCCTexture2DPixelFormat_RGB5A1'/>
<enum value='1' name='kCCTexture2DPixelFormat_RGB888'/>
<enum value='6' name='kCCTexture2DPixelFormat_RGBA4444'/>
<enum value='0' name='kCCTexture2DPixelFormat_RGBA8888'/>
<enum value='0' name='kCCTouchBegan'/>
<enum value='3' name='kCCTouchCancelled'/>
<enum value='2' name='kCCTouchEnded'/>
<enum value='4' name='kCCTouchMax'/>
<enum value='1' name='kCCTouchMoved'/>
<enum value='15' name='kCCTouchSelectorAllBits'/>
<enum value='1' name='kCCTouchSelectorBeganBit'/>
<enum value='8' name='kCCTouchSelectorCancelledBit'/>
<enum value='4' name='kCCTouchSelectorEndedBit'/>
<enum value='2' name='kCCTouchSelectorMovedBit'/>
<enum value='0' name='kCCUniformMVPMatrix'/>
<enum value='1' name='kCCUniformSampler'/>
<enum value='2' name='kCCUniform_MAX'/>
<enum value='2' name='kCCVertexAttribFlag_Color'/>
<enum value='0' name='kCCVertexAttribFlag_None'/>
<enum value='7' name='kCCVertexAttribFlag_PosColorTex'/>
<enum value='1' name='kCCVertexAttribFlag_Position'/>
<enum value='4' name='kCCVertexAttribFlag_TexCoords'/>
<enum value='1' name='kCCVertexAttrib_Color'/>
<enum value='3' name='kCCVertexAttrib_MAX'/>
<enum value='0' name='kCCVertexAttrib_Position'/>
<enum value='2' name='kCCVertexAttrib_TexCoords'/>
<enum value='2' name='kCCVerticalTextAlignmentBottom'/>
<enum value='1' name='kCCVerticalTextAlignmentCenter'/>
<enum value='0' name='kCCVerticalTextAlignmentTop'/>
<enum value='67108864' name='kCCiOSVersion_4_0'/>
<enum value='67109120' name='kCCiOSVersion_4_0_1'/>
<enum value='67174400' name='kCCiOSVersion_4_1'/>
<enum value='67239936' name='kCCiOSVersion_4_2'/>
<enum value='67240192' name='kCCiOSVersion_4_2_1'/>
<enum value='67305472' name='kCCiOSVersion_4_3'/>
<enum value='67305728' name='kCCiOSVersion_4_3_1'/>
<enum value='67305984' name='kCCiOSVersion_4_3_2'/>
<enum value='67306240' name='kCCiOSVersion_4_3_3'/>
<enum value='67306496' name='kCCiOSVersion_4_3_4'/>
<enum value='67306752' name='kCCiOSVersion_4_3_5'/>
<enum value='83886080' name='kCCiOSVersion_5_0'/>
<enum value='83886336' name='kCCiOSVersion_5_0_1'/>
<enum value='83951616' name='kCCiOSVersion_5_1_0'/>
<enum value='100663296' name='kCCiOSVersion_6_0_0'/>
<enum value='1' name='kOrientationDownOver'/>
<enum value='0' name='kOrientationLeftOver'/>
<enum value='1' name='kOrientationRightOver'/>
<enum value='0' name='kOrientationUpOver'/>
<enum value='-1' name='kParticleDurationInfinity'/>
<enum value='-1' name='kParticleStartSizeEqualToEndSize'/>
<enum value='0' name='kPositionTypeFree'/>
<enum value='2' name='kPositionTypeGrouped'/>
<function name='CCProfilingBeginTimingBlock'>
<arg name='timerName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CCProfilingEndTimingBlock'>
<arg name='timerName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CCProfilingResetTimingBlock'>
<arg name='timerName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CGAffineToGL'>
<arg name='t' type='^{CGAffineTransform=ffffff}' const='true' declared_type='CGAffineTransform*'/>
<arg name='m' type='^f' declared_type='GLfloat*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='FNTConfigLoadFile'>
<arg name='file' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='CCBMFontConfiguration*'/>
</function>
<function name='FNTConfigRemoveCache'>
<retval type='v' declared_type='void'/>
</function>
<function name='GLToCGAffine'>
<arg name='m' type='^f' const='true' declared_type='GLfloat*'/>
<arg name='t' type='^{CGAffineTransform=ffffff}' declared_type='CGAffineTransform*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='base64Decode'>
<arg name='in' type='*' declared_type='unsigned char*'/>
<arg name='inLength' type='I' declared_type='unsigned int'/>
<arg name='out' type='^*' declared_type='unsigned char**'/>
<retval type='i' declared_type='int'/>
</function>
<function name='ccArrayAppendArray'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='plusArr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayAppendArrayWithResize'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='plusArr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayAppendObject'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayAppendObjectWithResize'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayContainsObject'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccArrayDoubleCapacity'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayEnsureExtraCapacity'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='extra' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayFastRemoveObject'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayFastRemoveObjectAtIndex'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='index' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayFree'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayFullRemoveArray'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='minusArr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayGetIndexOfObject'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='object' type='@' declared_type='id'/>
<retval type='I' declared_type='NSUInteger'/>
</function>
<function name='ccArrayInsertObjectAtIndex'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='object' type='@' declared_type='id'/>
<arg name='index' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayMakeObjectPerformSelectorWithArrayObjects'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='sel' type=':' declared_type='SEL'/>
<arg name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayMakeObjectsPerformSelector'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='sel' type=':' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayMakeObjectsPerformSelectorWithObject'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='sel' type=':' declared_type='SEL'/>
<arg name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayNew'>
<arg name='capacity' type='I' declared_type='NSUInteger'/>
<retval type='^{ccArray=II^@}' declared_type='ccArray*'/>
</function>
<function name='ccArrayRemoveAllObjects'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayRemoveArray'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='minusArr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayRemoveObject'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayRemoveObjectAtIndex'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='index' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArrayShrink'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccArraySwapObjectsAtIndexes'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccArray*'/>
<arg name='index1' type='I' declared_type='NSUInteger'/>
<arg name='index2' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayAppendArray'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<arg name='plusArr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayAppendArrayWithResize'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<arg name='plusArr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayAppendValue'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<arg name='value' type='@' declared_type='CCARRAY_ID'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayAppendValueWithResize'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<arg name='value' type='@' declared_type='CCARRAY_ID'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayContainsValue'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<arg name='value' type='@' declared_type='CCARRAY_ID'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccCArrayDoubleCapacity'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayEnsureExtraCapacity'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<arg name='extra' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayFastRemoveValueAtIndex'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<arg name='index' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayFree'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayFullRemoveArray'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<arg name='minusArr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayGetIndexOfValue'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<arg name='value' type='@' declared_type='CCARRAY_ID'/>
<retval type='I' declared_type='NSUInteger'/>
</function>
<function name='ccCArrayInsertValueAtIndex'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<arg name='value' type='@' declared_type='CCARRAY_ID'/>
<arg name='index' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayNew'>
<arg name='capacity' type='I' declared_type='NSUInteger'/>
<retval type='^{ccArray=II^@}' declared_type='ccCArray*'/>
</function>
<function name='ccCArrayRemoveAllValues'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayRemoveArray'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<arg name='minusArr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayRemoveValue'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<arg name='value' type='@' declared_type='CCARRAY_ID'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCArrayRemoveValueAtIndex'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<arg name='index' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccCardinalSplineAt'>
<arg name='p0' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='p1' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='p2' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='p3' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='tension' type='f' declared_type='CGFloat'/>
<arg name='t' type='f' declared_type='ccTime'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccDrawCardinalSpline'>
<arg name='config' type='@' declared_type='CCPointArray*'/>
<arg name='tension' type='f' declared_type='CGFloat'/>
<arg name='segments' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawCatmullRom'>
<arg name='arrayOfControlPoints' type='@' declared_type='CCPointArray*'/>
<arg name='segments' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawCircle'>
<arg name='center' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='radius' type='f' declared_type='float'/>
<arg name='angle' type='f' declared_type='float'/>
<arg name='segments' type='I' declared_type='NSUInteger'/>
<arg name='drawLineToCenter' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawColor4B'>
<arg name='r' type='C' declared_type='GLubyte'/>
<arg name='g' type='C' declared_type='GLubyte'/>
<arg name='b' type='C' declared_type='GLubyte'/>
<arg name='a' type='C' declared_type='GLubyte'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawColor4F'>
<arg name='r' type='f' declared_type='GLfloat'/>
<arg name='g' type='f' declared_type='GLfloat'/>
<arg name='b' type='f' declared_type='GLfloat'/>
<arg name='a' type='f' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawCubicBezier'>
<arg name='origin' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='control1' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='control2' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='destination' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='segments' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawLine'>
<arg name='origin' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='destination' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawPoint'>
<arg name='point' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawPoints'>
<arg name='points' type='^{CGPoint=ff}' const='true' declared_type='CGPoint*'/>
<arg name='numberOfPoints' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawPoly'>
<arg name='vertices' type='^{CGPoint=ff}' const='true' declared_type='CGPoint*'/>
<arg name='numOfVertices' type='I' declared_type='NSUInteger'/>
<arg name='closePolygon' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawQuadBezier'>
<arg name='origin' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='control' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='destination' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='segments' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawRect'>
<arg name='origin' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='destination' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawSolidPoly'>
<arg name='poli' type='^{CGPoint=ff}' const='true' declared_type='CGPoint*'/>
<arg name='numberOfPoints' type='I' declared_type='NSUInteger'/>
<arg name='color' type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccDrawSolidRect'>
<arg name='origin' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='destination' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='color' type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLActiveTexture'>
<arg name='textureEnum' type='I' declared_type='GLenum'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLBindTexture2D'>
<arg name='textureId' type='I' declared_type='GLuint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLBlendFunc'>
<arg name='sfactor' type='I' declared_type='GLenum'/>
<arg name='dfactor' type='I' declared_type='GLenum'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLDeleteProgram'>
<arg name='program' type='I' declared_type='GLuint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLDeleteTexture'>
<arg name='textureId' type='I' declared_type='GLuint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLEnable'>
<arg name='flags' type='i' declared_type='ccGLServerState'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLEnableVertexAttribs'>
<arg name='flags' type='I' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLGetActiveTexture'>
<retval type='I' declared_type='GLenum'/>
</function>
<function name='ccGLInvalidateStateCache'>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLUniformModelViewProjectionMatrix'>
<arg name='program' type='@' declared_type='CCGLProgram*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccGLUseProgram'>
<arg name='program' type='I' declared_type='GLuint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccInflateCCZFile'>
<arg name='filename' type='*' const='true' declared_type='char*'/>
<arg name='out' type='^*' declared_type='unsigned char**'/>
<retval type='i' declared_type='int'/>
</function>
<function name='ccInflateGZipFile'>
<arg name='filename' type='*' const='true' declared_type='char*'/>
<arg name='out' type='^*' declared_type='unsigned char**'/>
<retval type='i' declared_type='int'/>
</function>
<function name='ccInflateMemory'>
<arg name='in' type='*' declared_type='unsigned char*'/>
<arg name='inLength' type='I' declared_type='unsigned int'/>
<arg name='out' type='^*' declared_type='unsigned char**'/>
<retval type='i' declared_type='int'/>
</function>
<function name='ccInflateMemoryWithHint'>
<arg name='in' type='*' declared_type='unsigned char*'/>
<arg name='inLength' type='I' declared_type='unsigned int'/>
<arg name='out' type='^*' declared_type='unsigned char**'/>
<arg name='outLenghtHint' type='I' declared_type='unsigned int'/>
<retval type='i' declared_type='int'/>
</function>
<function name='ccLoadFileIntoMemory'>
<arg name='filename' type='*' const='true' declared_type='char*'/>
<arg name='out' type='^*' declared_type='unsigned char**'/>
<retval type='i' declared_type='NSInteger'/>
</function>
<function name='ccNextPOT'>
<arg name='value' type='L' declared_type='unsigned long'/>
<retval type='L' declared_type='unsigned long'/>
</function>
<function name='ccPointSize'>
<arg name='pointSize' type='f' declared_type='GLfloat'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccSetProjectionMatrixDirty'>
<retval type='v' declared_type='void'/>
</function>
<function name='ccVertexLineIntersect'>
<arg name='Ax' type='f' declared_type='float'/>
<arg name='Ay' type='f' declared_type='float'/>
<arg name='Bx' type='f' declared_type='float'/>
<arg name='By' type='f' declared_type='float'/>
<arg name='Cx' type='f' declared_type='float'/>
<arg name='Cy' type='f' declared_type='float'/>
<arg name='Dx' type='f' declared_type='float'/>
<arg name='Dy' type='f' declared_type='float'/>
<arg name='T' type='^f' declared_type='float*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccVertexLineToPolygon'>
<arg name='points' type='^{CGPoint=ff}' declared_type='CGPoint*'/>
<arg name='stroke' type='f' declared_type='float'/>
<arg name='vertices' type='^{_ccVertex2F=ff}' declared_type='ccVertex2F*'/>
<arg name='offset' type='I' declared_type='NSUInteger'/>
<arg name='nuPoints' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='cc_insertionSort'>
<arg name='arr' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<arg function_pointer='true' name='comparator' type='^?' declared_type='cc_comparator'>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='i' declared_type='int'/>
</arg>
<retval type='v' declared_type='void'/>
</function>
<function name='cc_mergesortL'>
<arg name='array' type='^{ccArray=II^@}' declared_type='ccCArray*'/>
<arg name='width' type='L' declared_type='size_t'/>
<arg function_pointer='true' name='comparator' type='^?' declared_type='cc_comparator'>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='i' declared_type='int'/>
</arg>
<retval type='i' declared_type='int'/>
</function>
<function name='cc_pointerswap'>
<arg name='a' type='^v' declared_type='void*'/>
<arg name='b' type='^v' declared_type='void*'/>
<arg name='width' type='L' declared_type='size_t'/>
<retval type='v' declared_type='void'/>
</function>
<function name='ccc3' inline='true'>
<arg name='r' type='C' const='true' declared_type='GLubyte'/>
<arg name='g' type='C' const='true' declared_type='GLubyte'/>
<arg name='b' type='C' const='true' declared_type='GLubyte'/>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</function>
<function name='ccc4' inline='true'>
<arg name='r' type='C' const='true' declared_type='GLubyte'/>
<arg name='g' type='C' const='true' declared_type='GLubyte'/>
<arg name='b' type='C' const='true' declared_type='GLubyte'/>
<arg name='o' type='C' const='true' declared_type='GLubyte'/>
<retval type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
</function>
<function name='ccc4FEqual' inline='true'>
<arg name='a' type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
<arg name='b' type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccc4FFromccc3B' inline='true'>
<arg name='c' type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</function>
<function name='ccc4FFromccc4B' inline='true'>
<arg name='c' type='{_ccColor4B=CCCC}' declared_type='ccColor4B'/>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</function>
<function name='ccc4f' inline='true'>
<arg name='r' type='f' const='true' declared_type='GLfloat'/>
<arg name='g' type='f' const='true' declared_type='GLfloat'/>
<arg name='b' type='f' const='true' declared_type='GLfloat'/>
<arg name='a' type='f' const='true' declared_type='GLfloat'/>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</function>
<function name='ccg' inline='true'>
<arg name='x' type='i' const='true' declared_type='NSInteger'/>
<arg name='y' type='i' const='true' declared_type='NSInteger'/>
<retval type='{_ccGridSize=ii}' declared_type='ccGridSize'/>
</function>
<function name='ccp' inline='true'>
<arg name='x' type='f' declared_type='CGFloat'/>
<arg name='y' type='f' declared_type='CGFloat'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpAdd' inline='true'>
<arg name='v1' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<arg name='v2' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpAngle'>
<arg name='a' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='b' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='f' declared_type='float'/>
</function>
<function name='ccpAngleSigned'>
<arg name='a' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='b' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='f' declared_type='float'/>
</function>
<function name='ccpClamp'>
<arg name='p' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='from' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='to' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpCompMult'>
<arg name='a' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='b' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpCompOp'>
<arg name='p' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg function_pointer='true' name='opFunc' type='^?' declared_type='float (*)(float)'>
<arg type='f' declared_type='float'/>
<retval type='f' declared_type='float'/>
</arg>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpCross' inline='true'>
<arg name='v1' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<arg name='v2' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='ccpDistance'>
<arg name='v1' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<arg name='v2' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='ccpDistanceSQ' inline='true'>
<arg name='p1' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<arg name='p2' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='ccpDot' inline='true'>
<arg name='v1' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<arg name='v2' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='ccpForAngle'>
<arg name='a' type='f' const='true' declared_type='CGFloat'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpFromSize'>
<arg name='s' type='{CGSize=ff}' declared_type='CGSize'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpFuzzyEqual'>
<arg name='a' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='b' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='variance' type='f' declared_type='float'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccpIntersectPoint'>
<arg name='A' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='B' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='C' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='D' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpLength'>
<arg name='v' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='ccpLengthSQ' inline='true'>
<arg name='v' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='ccpLerp'>
<arg name='a' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='b' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='alpha' type='f' declared_type='float'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpLineIntersect'>
<arg name='p1' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='p2' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='p3' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='p4' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='s' type='^f' declared_type='float*'/>
<arg name='t' type='^f' declared_type='float*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccpMidpoint' inline='true'>
<arg name='v1' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<arg name='v2' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpMult' inline='true'>
<arg name='v' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<arg name='s' type='f' const='true' declared_type='CGFloat'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpNeg' inline='true'>
<arg name='v' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpNormalize'>
<arg name='v' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpPerp' inline='true'>
<arg name='v' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpProject' inline='true'>
<arg name='v1' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<arg name='v2' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpRPerp' inline='true'>
<arg name='v' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpRotate' inline='true'>
<arg name='v1' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<arg name='v2' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpRotateByAngle'>
<arg name='v' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='pivot' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='angle' type='f' declared_type='float'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpSegmentIntersect'>
<arg name='A' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='B' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='C' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg name='D' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='ccpSub' inline='true'>
<arg name='v1' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<arg name='v2' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='ccpToAngle'>
<arg name='v' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='ccpUnrotate' inline='true'>
<arg name='v1' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<arg name='v2' type='{CGPoint=ff}' const='true' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='clampf'>
<arg name='value' type='f' declared_type='float'/>
<arg name='min_inclusive' type='f' declared_type='float'/>
<arg name='max_inclusive' type='f' declared_type='float'/>
<retval type='f' declared_type='float'/>
</function>
<function name='cocos2dVersion'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='sortByPriority'>
<arg name='first' type='@' declared_type='id'/>
<arg name='second' type='@' declared_type='id'/>
<arg name='context' type='^v' declared_type='void*'/>
<retval type='i' declared_type='NSComparisonResult'/>
</function>
<function name='tgaDestroy'>
<arg name='info' type='^{sImageTGA=iCCss*i}' declared_type='tImageTGA*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='tgaLoad'>
<arg name='filename' type='*' const='true' declared_type='char*'/>
<retval type='^{sImageTGA=iCCss*i}' declared_type='tImageTGA*'/>
</function>
<function name='tgaLoadHeader'>
<arg name='file' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' declared_type='FILE*'/>
<arg name='info' type='^{sImageTGA=iCCss*i}' declared_type='tImageTGA*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='tgaLoadImageData'>
<arg name='file' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}' declared_type='FILE*'/>
<arg name='info' type='^{sImageTGA=iCCss*i}' declared_type='tImageTGA*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='tgaRGBtogreyscale'>
<arg name='info' type='^{sImageTGA=iCCss*i}' declared_type='tImageTGA*'/>
<retval type='v' declared_type='void'/>
</function>
<class name='CCAccelAmplitude'>
<method class_method='true' selector='actionWithAction:duration:'>
<arg name='action' type='@' declared_type='CCAction*' index='0'/>
<arg name='d' type='f' declared_type='ccTime' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:duration:'>
<arg name='action' type='@' declared_type='CCAction*' index='0'/>
<arg name='d' type='f' declared_type='ccTime' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setRate:'>
<arg name='rate' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCAccelDeccelAmplitude'>
<method class_method='true' selector='actionWithAction:duration:'>
<arg name='action' type='@' declared_type='CCAction*' index='0'/>
<arg name='d' type='f' declared_type='ccTime' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:duration:'>
<arg name='action' type='@' declared_type='CCAction*' index='0'/>
<arg name='d' type='f' declared_type='ccTime' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setRate:'>
<arg name='rate' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCAction'>
<method class_method='true' selector='action'>
<retval type='@' declared_type='id'/>
</method>
<method selector='copyWithZone:'>
<arg name='zone' type='^{_NSZone=}' declared_type='NSZone*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isDone'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='originalTarget'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setTag:'>
<arg name='tag' type='i' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startWithTarget:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='step:'>
<arg name='dt' type='f' declared_type='ccTime' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stop'>
<retval type='v' declared_type='void'/>
</method>
<method selector='tag'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='target'>
<retval type='@' declared_type='id'/>
</method>
<method selector='update:'>
<arg name='time' type='f' declared_type='ccTime' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCActionCamera'>
<method selector='startWithTarget:'>
<arg name='aTarget' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCActionEase'>
<method class_method='true' selector='actionWithAction:'>
<arg name='action' type='@' declared_type='CCActionInterval*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:'>
<arg name='action' type='@' declared_type='CCActionInterval*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCActionInstant'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCActionInterval'>
<method class_method='true' selector='actionWithDuration:'>
<arg name='d' type='f' declared_type='ccTime' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='elapsed'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='initWithDuration:'>
<arg name='d' type='f' declared_type='ccTime' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isDone'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reverse'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</class>
<class name='CCActionManager'>
<method selector='addAction:target:paused:'>
<arg name='action' type='@' declared_type='CCAction*' index='0'/>
<arg name='target' type='@' declared_type='id' index='1'/>
<arg name='paused' type='B' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getActionByTag:target:'>
<arg name='tag' type='i' declared_type='NSInteger' index='0'/>
<arg name='target' type='@' declared_type='id' index='1'/>
<retval type='@' declared_type='CCAction*'/>
</method>
<method selector='numberOfRunningActionsInTarget:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='pauseAllRunningActions'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='pauseTarget:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAction:'>
<arg name='action' type='@' declared_type='CCAction*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeActionByTag:target:'>
<arg name='tag' type='i' declared_type='NSInteger' index='0'/>
<arg name='target' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllActionsFromTarget:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeTarget:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeTargets:'>
<arg name='targetsToResume' type='@' declared_type='NSSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval type='@' declared_type='CCActionManager*'/>
</method>
</class>
<class name='CCActionTween'>
<method class_method='true' selector='actionWithDuration:key:from:to:'>
<arg name='aDuration' type='f' declared_type='ccTime' index='0'/>
<arg name='key' type='@' declared_type='NSString*' index='1'/>
<arg name='from' type='f' declared_type='float' index='2'/>
<arg name='to' type='f' declared_type='float' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:key:from:to:'>
<arg name='aDuration' type='f' declared_type='ccTime' index='0'/>
<arg name='key' type='@' declared_type='NSString*' index='1'/>
<arg name='from' type='f' declared_type='float' index='2'/>
<arg name='to' type='f' declared_type='float' index='3'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCAnimate'>
<method class_method='true' selector='actionWithAnimation:'>
<arg name='animation' type='@' declared_type='CCAnimation*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actionWithAnimation:restoreOriginalFrame:'>
<arg name='animation' type='@' declared_type='CCAnimation*' index='0'/>
<arg name='restoreOriginalFrame' type='B' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actionWithDuration:animation:restoreOriginalFrame:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='animation' type='@' declared_type='CCAnimation*' index='1'/>
<arg name='restoreOriginalFrame' type='B' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='animation'>
<retval type='@' declared_type='CCAnimation*'/>
</method>
<method selector='initWithAnimation:'>
<arg name='animation' type='@' declared_type='CCAnimation*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAnimation:restoreOriginalFrame:'>
<arg name='a' type='@' declared_type='CCAnimation*' index='0'/>
<arg name='restoreOriginalFrame' type='B' declared_type='BOOL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:animation:restoreOriginalFrame:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='animation' type='@' declared_type='CCAnimation*' index='1'/>
<arg name='restoreOriginalFrame' type='B' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAnimation:'>
<arg name='animation' type='@' declared_type='CCAnimation*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCAnimation'>
<method selector='addFrame:'>
<arg name='frame' type='@' declared_type='CCSpriteFrame*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addFrameWithFilename:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addFrameWithTexture:rect:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFrame:'>
<arg name='frame' type='@' declared_type='CCSpriteFrame*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFrameWithFilename:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFrameWithTexture:rect:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='animation'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='animationWithAnimationFrames:delayPerUnit:loops:'>
<arg name='arrayOfAnimationFrames' type='@' declared_type='NSArray*' index='0'/>
<arg name='delayPerUnit' type='f' declared_type='float' index='1'/>
<arg name='loops' type='I' declared_type='NSUInteger' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='animationWithFrames:'>
<arg name='arrayOfSpriteFrameNames' type='@' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='animationWithFrames:delay:'>
<arg name='arrayOfSpriteFrameNames' type='@' declared_type='NSArray*' index='0'/>
<arg name='delay' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='animationWithSpriteFrames:'>
<arg name='arrayOfSpriteFrameNames' type='@' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='animationWithSpriteFrames:delay:'>
<arg name='arrayOfSpriteFrameNames' type='@' declared_type='NSArray*' index='0'/>
<arg name='delay' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='delayPerUnit'>
<retval type='f' declared_type='float'/>
</method>
<method selector='duration'>
<retval type='f' declared_type='float'/>
</method>
<method selector='frames'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='initWithAnimationFrames:delayPerUnit:loops:'>
<arg name='arrayOfAnimationFrames' type='@' declared_type='NSArray*' index='0'/>
<arg name='delayPerUnit' type='f' declared_type='float' index='1'/>
<arg name='loops' type='I' declared_type='NSUInteger' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFrames:'>
<arg name='arrayOfSpriteFrameNames' type='@' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFrames:delay:'>
<arg name='arrayOfSpriteFrameNames' type='@' declared_type='NSArray*' index='0'/>
<arg name='delay' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSpriteFrames:'>
<arg name='arrayOfSpriteFrameNames' type='@' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSpriteFrames:delay:'>
<arg name='arrayOfSpriteFrameNames' type='@' declared_type='NSArray*' index='0'/>
<arg name='delay' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='loops'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='restoreOriginalFrame'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDelayPerUnit:'>
<arg name='delayPerUnit' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrames:'>
<arg name='frames' type='@' declared_type='NSMutableArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLoops:'>
<arg name='loops' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRestoreOriginalFrame:'>
<arg name='restoreOriginalFrame' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='totalDelayUnits'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='CCAnimationCache'>
<method selector='addAnimation:name:'>
<arg name='animation' type='@' declared_type='CCAnimation*' index='0'/>
<arg name='name' type='@' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAnimationsWithDictionary:'>
<arg name='dictionary' type='@' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAnimationsWithFile:'>
<arg name='plist' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='animationByName:'>
<arg name='name' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='CCAnimation*'/>
</method>
<method class_method='true' selector='purgeSharedAnimationCache'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAnimationByName:'>
<arg name='name' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedAnimationCache'>
<retval type='@' declared_type='CCAnimationCache*'/>
</method>
</class>
<class name='CCAnimationFrame'>
<method selector='delayUnits'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithSpriteFrame:delayUnits:userInfo:'>
<arg name='spriteFrame' type='@' declared_type='CCSpriteFrame*' index='0'/>
<arg name='delayUnits' type='f' declared_type='float' index='1'/>
<arg name='userInfo' type='@' declared_type='NSDictionary*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDelayUnits:'>
<arg name='delayUnits' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpriteFrame:'>
<arg name='spriteFrame' type='@' declared_type='CCSpriteFrame*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserInfo:'>
<arg name='userInfo' type='@' declared_type='NSDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='spriteFrame'>
<retval type='@' declared_type='CCSpriteFrame*'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='CCArray'>
<method selector='addObject:'>
<arg name='object' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjectsFromArray:'>
<arg name='otherArray' type='@' declared_type='CCArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjectsFromNSArray:'>
<arg name='otherArray' type='@' declared_type='NSArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='array'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='arrayWithArray:'>
<arg name='otherArray' type='@' declared_type='CCArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='arrayWithCapacity:'>
<arg name='capacity' type='I' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='arrayWithNSArray:'>
<arg name='otherArray' type='@' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='capacity'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='containsObject:'>
<arg name='object' type='@' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='exchangeObject:withObject:'>
<arg name='object1' type='@' declared_type='id' index='0'/>
<arg name='object2' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='exchangeObjectAtIndex:withObjectAtIndex:'>
<arg name='index1' type='I' declared_type='NSUInteger' index='0'/>
<arg name='index2' type='I' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fastRemoveObject:'>
<arg name='object' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fastRemoveObjectAtIndex:'>
<arg name='index' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getNSArray'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='indexOfObject:'>
<arg name='object' type='@' declared_type='id' index='0'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='initWithArray:'>
<arg name='otherArray' type='@' declared_type='CCArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCapacity:'>
<arg name='capacity' type='I' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithNSArray:'>
<arg name='otherArray' type='@' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertObject:atIndex:'>
<arg name='object' type='@' declared_type='id' index='0'/>
<arg name='index' type='I' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertionSort:'>
<arg name='selector' type=':' declared_type='SEL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertionSortUsingCFuncComparator:'>
<arg function_pointer='true' name='comparator' type='^?' declared_type='int (*)(void *, void *)' index='0'>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='i' declared_type='int'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='isEqualToArray:'>
<arg name='otherArray' type='@' declared_type='CCArray*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='makeObjectPerformSelectorWithArrayObjects:selector:'>
<arg name='object' type='@' declared_type='id' index='0'/>
<arg name='aSelector' type=':' declared_type='SEL' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeObjectsPerformSelector:'>
<arg name='aSelector' type=':' declared_type='SEL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeObjectsPerformSelector:withObject:'>
<arg name='aSelector' type=':' declared_type='SEL' index='0'/>
<arg name='object' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mergesortLUsingCFuncComparator:'>
<arg function_pointer='true' name='comparator' type='^?' declared_type='int (*)(void *, void *)' index='0'>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='i' declared_type='int'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='objectAtIndex:'>
<arg name='index' type='I' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='qsortUsingCFuncComparator:'>
<arg function_pointer='true' name='comparator' type='^?' declared_type='int (*)(void *, void *)' index='0'>
<arg type='^v' const='true' declared_type='void*'/>
<arg type='^v' const='true' declared_type='void*'/>
<retval type='i' declared_type='int'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='randomObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='reduceMemoryFootprint'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeLastObject'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg name='object' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectAtIndex:'>
<arg name='index' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsInArray:'>
<arg name='otherArray' type='@' declared_type='CCArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectAtIndex:withObject:'>
<arg name='index' type='I' declared_type='NSUInteger' index='0'/>
<arg name='anObject' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reverseObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingFunction:context:'>
<arg function_pointer='true' name='compare' type='^?' declared_type='NSInteger (*)(id, id, void *)' index='0'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type='i' declared_type='NSInteger'/>
</arg>
<arg name='context' type='^v' declared_type='void*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCAtlasNode'>
<method class_method='true' selector='atlasWithTileFile:tileWidth:tileHeight:itemsToRender:'>
<arg name='tile' type='@' declared_type='NSString*' index='0'/>
<arg name='w' type='I' declared_type='NSUInteger' index='1'/>
<arg name='h' type='I' declared_type='NSUInteger' index='2'/>
<arg name='c' type='I' declared_type='NSUInteger' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithTileFile:tileWidth:tileHeight:itemsToRender:'>
<arg name='tile' type='@' declared_type='NSString*' index='0'/>
<arg name='w' type='I' declared_type='NSUInteger' index='1'/>
<arg name='h' type='I' declared_type='NSUInteger' index='2'/>
<arg name='c' type='I' declared_type='NSUInteger' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='quadsToDraw'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='setBlendFunc:'>
<arg name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg name='opacity' type='C' declared_type='GLubyte' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setQuadsToDraw:'>
<arg name='quadsToDraw' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureAtlas:'>
<arg name='textureAtlas' type='@' declared_type='CCTextureAtlas*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textureAtlas'>
<retval type='@' declared_type='CCTextureAtlas*'/>
</method>
<method selector='updateAtlasValues'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCBMFontConfiguration'>
<method selector='atlasName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='configurationWithFNTFile:'>
<arg name='FNTfile' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFNTfile:'>
<arg name='FNTfile' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAtlasName:'>
<arg name='atlasName' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCBezierBy'>
<method class_method='true' selector='actionWithDuration:bezier:'>
<arg name='t' type='f' declared_type='ccTime' index='0'/>
<arg name='c' type='{_ccBezierConfig={CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}' declared_type='ccBezierConfig' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:bezier:'>
<arg name='t' type='f' declared_type='ccTime' index='0'/>
<arg name='c' type='{_ccBezierConfig={CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}' declared_type='ccBezierConfig' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCBezierTo'>
<method selector='startWithTarget:'>
<arg name='aTarget' type='@' declared_type='CCNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCBlink'>
<method class_method='true' selector='actionWithDuration:blinks:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='blinks' type='I' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:blinks:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='blinks' type='I' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCallBlock'>
<method class_method='true' selector='actionWithBlock:'>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)()' index='0'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBlock:'>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)()' index='0'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCallBlockN'>
<method class_method='true' selector='actionWithBlock:'>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(CCNode *)' index='0'>
<arg type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBlock:'>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(CCNode *)' index='0'>
<arg type='@' declared_type='CCNode*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCallBlockO'>
<method class_method='true' selector='actionWithBlock:object:'>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='0'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='object' type='@' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBlock:object:'>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='0'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='object' type='@' declared_type='id' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='object'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setObject:'>
<arg name='object' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCallFunc'>
<method class_method='true' selector='actionWithTarget:selector:'>
<arg name='t' type='@' declared_type='id' index='0'/>
<arg name='s' type=':' declared_type='SEL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithTarget:selector:'>
<arg name='t' type='@' declared_type='id' index='0'/>
<arg name='s' type=':' declared_type='SEL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setTargetCallback:'>
<arg name='targetCallback' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='targetCallback'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCallFuncN'>
<method selector='execute'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCallFuncND'>
<method class_method='true' selector='actionWithTarget:selector:data:'>
<arg name='t' type='@' declared_type='id' index='0'/>
<arg name='s' type=':' declared_type='SEL' index='1'/>
<arg name='d' type='^v' declared_type='void*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='callbackMethod'>
<retval function_pointer='true' type='^?' declared_type='CC_CALLBACK_ND'>
<arg type='@' declared_type='id'/>
<arg type=':' declared_type='SEL'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='initWithTarget:selector:data:'>
<arg name='t' type='@' declared_type='id' index='0'/>
<arg name='s' type=':' declared_type='SEL' index='1'/>
<arg name='d' type='^v' declared_type='void*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setCallbackMethod:'>
<arg function_pointer='true' name='callbackMethod' type='^?' declared_type='CC_CALLBACK_ND' index='0'>
<arg type='@' declared_type='id'/>
<arg type=':' declared_type='SEL'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCallFuncO'>
<method class_method='true' selector='actionWithTarget:selector:object:'>
<arg name='t' type='@' declared_type='id' index='0'/>
<arg name='s' type=':' declared_type='SEL' index='1'/>
<arg name='object' type='@' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:object:'>
<arg name='t' type='@' declared_type='id' index='0'/>
<arg name='s' type=':' declared_type='SEL' index='1'/>
<arg name='object' type='@' declared_type='id' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='object'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setObject:'>
<arg name='object' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCamera'>
<method selector='centerX:centerY:centerZ:'>
<arg name='x' type='^f' declared_type='float*' index='0'/>
<arg name='y' type='^f' declared_type='float*' index='1'/>
<arg name='z' type='^f' declared_type='float*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dirty'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='eyeX:eyeY:eyeZ:'>
<arg name='x' type='^f' declared_type='float*' index='0'/>
<arg name='y' type='^f' declared_type='float*' index='1'/>
<arg name='z' type='^f' declared_type='float*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='getZEye'>
<retval type='f' declared_type='float'/>
</method>
<method selector='locate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='restore'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCenterX:centerY:centerZ:'>
<arg name='x' type='f' declared_type='float' index='0'/>
<arg name='y' type='f' declared_type='float' index='1'/>
<arg name='z' type='f' declared_type='float' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDirty:'>
<arg name='dirty' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEyeX:eyeY:eyeZ:'>
<arg name='x' type='f' declared_type='float' index='0'/>
<arg name='y' type='f' declared_type='float' index='1'/>
<arg name='z' type='f' declared_type='float' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUpX:upY:upZ:'>
<arg name='x' type='f' declared_type='float' index='0'/>
<arg name='y' type='f' declared_type='float' index='1'/>
<arg name='z' type='f' declared_type='float' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='upX:upY:upZ:'>
<arg name='x' type='^f' declared_type='float*' index='0'/>
<arg name='y' type='^f' declared_type='float*' index='1'/>
<arg name='z' type='^f' declared_type='float*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCardinalSplineBy'>
<method selector='startWithTarget:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCardinalSplineTo'>
<method class_method='true' selector='actionWithDuration:points:tension:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='points' type='@' declared_type='CCPointArray*' index='1'/>
<arg name='tension' type='f' declared_type='CGFloat' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:points:tension:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='points' type='@' declared_type='CCPointArray*' index='1'/>
<arg name='tension' type='f' declared_type='CGFloat' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='points'>
<retval type='@' declared_type='CCPointArray*'/>
</method>
<method selector='setPoints:'>
<arg name='points' type='@' declared_type='CCPointArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCCatmullRomBy'>
<method class_method='true' selector='actionWithDuration:points:'>
<arg name='dt' type='f' declared_type='ccTime' index='0'/>
<arg name='points' type='@' declared_type='CCPointArray*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:points:'>
<arg name='dt' type='f' declared_type='ccTime' index='0'/>
<arg name='points' type='@' declared_type='CCPointArray*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCCatmullRomTo'>
<method class_method='true' selector='actionWithDuration:points:'>
<arg name='dt' type='f' declared_type='ccTime' index='0'/>
<arg name='points' type='@' declared_type='CCPointArray*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:points:'>
<arg name='dt' type='f' declared_type='ccTime' index='0'/>
<arg name='points' type='@' declared_type='CCPointArray*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCConfiguration'>
<method selector='OSVersion'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='checkForGLExtension:'>
<arg name='searchName' type='@' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='maxModelviewStackDepth'>
<retval type='i' declared_type='GLint'/>
</method>
<method selector='maxTextureSize'>
<retval type='i' declared_type='GLint'/>
</method>
<method selector='maxTextureUnits'>
<retval type='i' declared_type='GLint'/>
</method>
<method class_method='true' selector='sharedConfiguration'>
<retval type='@' declared_type='CCConfiguration*'/>
</method>
<method selector='supportsBGRA8888'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='supportsDiscardFramebuffer'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='supportsNPOT'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='supportsPVRTC'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='supportsShareableVAO'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CCDeccelAmplitude'>
<method class_method='true' selector='actionWithAction:duration:'>
<arg name='action' type='@' declared_type='CCAction*' index='0'/>
<arg name='d' type='f' declared_type='ccTime' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:duration:'>
<arg name='action' type='@' declared_type='CCAction*' index='0'/>
<arg name='d' type='f' declared_type='ccTime' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setRate:'>
<arg name='rate' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCDelayTime'>
<method selector='update:'>
<arg name='dt' type='f' declared_type='ccTime' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCDirector'>
<method selector='actionManager'>
<retval type='@' declared_type='CCActionManager*'/>
</method>
<method selector='animationInterval'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='contentScaleFactor'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='convertToGL:'>
<arg name='p' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertToUI:'>
<arg name='p' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='createStatsLabel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='displayStats'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='drawScene'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableRetinaDisplay:'>
<arg name='enableRetina' type='B' declared_type='BOOL' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='end'>
<retval type='v' declared_type='void'/>
</method>
<method selector='getZEye'>
<retval type='f' declared_type='float'/>
</method>
<method selector='isAnimating'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isPaused'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='nextDeltaTimeZero'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='notificationNode'>
<retval type='@' declared_type='id'/>
</method>
<method selector='openGLView'>
<retval type='@' declared_type='CCGLView*'/>
</method>
<method selector='pause'>
<retval type='v' declared_type='void'/>
</method>
<method selector='popScene'>
<retval type='v' declared_type='void'/>
</method>
<method selector='popToRootScene'>
<retval type='v' declared_type='void'/>
</method>
<method selector='projection'>
<retval type='i' declared_type='ccDirectorProjection'/>
</method>
<method selector='purgeCachedData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='pushScene:'>
<arg name='scene' type='@' declared_type='CCScene*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceScene:'>
<arg name='scene' type='@' declared_type='CCScene*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reshapeProjection:'>
<arg name='newWindowSize' type='{CGSize=ff}' declared_type='CGSize' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resume'>
<retval type='v' declared_type='void'/>
</method>
<method selector='runWithScene:'>
<arg name='scene' type='@' declared_type='CCScene*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='runningScene'>
<retval type='@' declared_type='CCScene*'/>
</method>
<method selector='runningThread'>
<retval type='@' declared_type='NSThread*'/>
</method>
<method selector='scheduler'>
<retval type='@' declared_type='CCScheduler*'/>
</method>
<method selector='secondsPerFrame'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='sendCleanupToScene'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setActionManager:'>
<arg name='actionManager' type='@' declared_type='CCActionManager*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlphaBlending:'>
<arg name='on' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAnimationInterval:'>
<arg name='animationInterval' type='d' declared_type='NSTimeInterval' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentScaleFactor:'>
<arg name='scaleFactor' type='f' declared_type='CGFloat' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDepthTest:'>
<arg name='on' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayFPS:'>
<arg name='display' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayStats:'>
<arg name='displayStats' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGLDefaultValues'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNextDeltaTimeZero:'>
<arg name='nextDeltaTimeZero' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNotificationNode:'>
<arg name='notificationNode' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpenGLView:'>
<arg name='view' type='@' declared_type='CCGLView*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProjection:'>
<arg name='projection' type='i' declared_type='ccDirectorProjection' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScheduler:'>
<arg name='scheduler' type='@' declared_type='CCScheduler*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTouchDispatcher:'>
<arg name='touchDispatcher' type='@' declared_type='CCTouchDispatcher*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setView:'>
<arg name='view' type='@' declared_type='CCGLView*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedDirector'>
<retval type='@' declared_type='CCDirector*'/>
</method>
<method selector='startAnimation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopAnimation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='totalFrames'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='touchDispatcher'>
<retval type='@' declared_type='CCTouchDispatcher*'/>
</method>
<method selector='view'>
<retval type='@' declared_type='CCGLView*'/>
</method>
<method selector='winSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='winSizeInPixels'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='CCES2Renderer'>
<method selector='colorRenderbuffer'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='context'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='defaultFramebuffer'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='msaaColorbuffer'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='msaaFramebuffer'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='resizeFromLayer:'>
<arg name='layer' type='@' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CCEaseElastic'>
<method class_method='true' selector='actionWithAction:period:'>
<arg name='action' type='@' declared_type='CCActionInterval*' index='0'/>
<arg name='period' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:period:'>
<arg name='action' type='@' declared_type='CCActionInterval*' index='0'/>
<arg name='period' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='period'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setPeriod:'>
<arg name='period' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCEaseRateAction'>
<method class_method='true' selector='actionWithAction:rate:'>
<arg name='action' type='@' declared_type='CCActionInterval*' index='0'/>
<arg name='rate' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:rate:'>
<arg name='action' type='@' declared_type='CCActionInterval*' index='0'/>
<arg name='rate' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setRate:'>
<arg name='rate' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCFadeIn'>
<method selector='update:'>
<arg name='dt' type='f' declared_type='ccTime' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCFadeOut'>
<method selector='update:'>
<arg name='dt' type='f' declared_type='ccTime' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCFadeTo'>
<method class_method='true' selector='actionWithDuration:opacity:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='opactiy' type='C' declared_type='GLubyte' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:opacity:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='opacity' type='C' declared_type='GLubyte' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCFileUtils'>
<method selector='bundle'>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='enableFallbackSuffixes'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager'>
<retval type='@' declared_type='NSFileManager*'/>
</method>
<method class_method='true' selector='fullPathFromRelativePath:'>
<arg name='relPath' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fullPathFromRelativePath:'>
<arg name='relPath' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='fullPathFromRelativePath:resolutionType:'>
<arg name='relPath' type='@' declared_type='NSString*' index='0'/>
<arg name='resolutionType' type='^i' declared_type='ccResolutionType*' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fullPathFromRelativePath:resolutionType:'>
<arg name='relPath' type='@' declared_type='NSString*' index='0'/>
<arg name='resolutionType' type='^i' declared_type='ccResolutionType*' index='1'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='iPadFileExistsAtPath:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='iPadFileExistsAtPath:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='iPadRetinaDisplayFileExistsAtPath:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='iPadRetinaDisplayFileExistsAtPath:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='iPadRetinaDisplaySuffix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='iPadSuffix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='iPhoneRetinaDisplayFileExistsAtPath:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='iPhoneRetinaDisplayFileExistsAtPath:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='iPhoneRetinaDisplaySuffix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='purgeCachedEntries'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='removeSuffixFromFile:'>
<arg name='path' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='removeSuffixFromFile:'>
<arg name='path' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setBundle:'>
<arg name='bundle' type='@' declared_type='NSBundle*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnableFallbackSuffixes:'>
<arg name='enableFallbackSuffixes' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFileManager:'>
<arg name='fileManager' type='@' declared_type='NSFileManager*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setRetinaDisplaySuffix:'>
<arg name='suffix' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setiPadRetinaDisplaySuffix:'>
<arg name='iPadRetinaDisplaySuffix' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setiPadSuffix:'>
<arg name='iPadSuffix' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setiPhoneRetinaDisplaySuffix:'>
<arg name='iPhoneRetinaDisplaySuffix' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedFileUtils'>
<retval type='@' declared_type='CCFileUtils*'/>
</method>
</class>
<class name='CCFiniteTimeAction'>
<method selector='duration'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='reverse'>
<retval type='@' declared_type='CCFiniteTimeAction*'/>
</method>
<method selector='setDuration:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCFlipX'>
<method class_method='true' selector='actionWithFlipX:'>
<arg name='x' type='B' declared_type='BOOL' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFlipX:'>
<arg name='x' type='B' declared_type='BOOL' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCFlipX3D'>
<method class_method='true' selector='actionWithDuration:'>
<arg name='d' type='f' declared_type='ccTime' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:'>
<arg name='d' type='f' declared_type='ccTime' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCFlipY'>
<method class_method='true' selector='actionWithFlipY:'>
<arg name='y' type='B' declared_type='BOOL' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFlipY:'>
<arg name='y' type='B' declared_type='BOOL' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCFollow'>
<method class_method='true' selector='actionWithTarget:'>
<arg name='followedNode' type='@' declared_type='CCNode*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actionWithTarget:worldBoundary:'>
<arg name='followedNode' type='@' declared_type='CCNode*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='boundarySet'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithTarget:'>
<arg name='followedNode' type='@' declared_type='CCNode*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:worldBoundary:'>
<arg name='followedNode' type='@' declared_type='CCNode*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setBoundarySet:'>
<arg name='boundarySet' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCGLProgram'>
<method selector='addAttribute:index:'>
<arg name='attributeName' type='@' declared_type='NSString*' index='0'/>
<arg name='index' type='I' declared_type='GLuint' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fragmentShaderLog'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithVertexShaderByteArray:fragmentShaderByteArray:'>
<arg name='vShaderByteArray' type='*' const='true' declared_type='GLchar*' index='0'/>
<arg name='fShaderByteArray' type='*' const='true' declared_type='GLchar*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithVertexShaderFilename:fragmentShaderFilename:'>
<arg name='vShaderFilename' type='@' declared_type='NSString*' index='0'/>
<arg name='fShaderFilename' type='@' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='link'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='programLog'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setUniformForModelViewProjectionMatrix'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:with2fv:count:'>
<arg name='location' type='I' declared_type='NSUInteger' index='0'/>
<arg name='floats' type='^f' declared_type='GLfloat*' index='1'/>
<arg name='numberOfArrays' type='I' declared_type='NSUInteger' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:with3fv:count:'>
<arg name='location' type='I' declared_type='NSUInteger' index='0'/>
<arg name='floats' type='^f' declared_type='GLfloat*' index='1'/>
<arg name='numberOfArrays' type='I' declared_type='NSUInteger' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:with4fv:count:'>
<arg name='location' type='I' declared_type='NSUInteger' index='0'/>
<arg name='floats' type='^v' declared_type='GLvoid*' index='1'/>
<arg name='numberOfArrays' type='I' declared_type='NSUInteger' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withF1:'>
<arg name='location' type='I' declared_type='NSUInteger' index='0'/>
<arg name='f1' type='f' declared_type='GLfloat' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withF1:f2:'>
<arg name='location' type='I' declared_type='NSUInteger' index='0'/>
<arg name='f1' type='f' declared_type='GLfloat' index='1'/>
<arg name='f2' type='f' declared_type='GLfloat' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withF1:f2:f3:'>
<arg name='location' type='I' declared_type='NSUInteger' index='0'/>
<arg name='f1' type='f' declared_type='GLfloat' index='1'/>
<arg name='f2' type='f' declared_type='GLfloat' index='2'/>
<arg name='f3' type='f' declared_type='GLfloat' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withF1:f2:f3:f4:'>
<arg name='location' type='I' declared_type='NSUInteger' index='0'/>
<arg name='f1' type='f' declared_type='GLfloat' index='1'/>
<arg name='f2' type='f' declared_type='GLfloat' index='2'/>
<arg name='f3' type='f' declared_type='GLfloat' index='3'/>
<arg name='f4' type='f' declared_type='GLfloat' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withI1:'>
<arg name='location' type='I' declared_type='NSUInteger' index='0'/>
<arg name='i1' type='i' declared_type='GLint' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUniformLocation:withMatrix4fv:count:'>
<arg name='location' type='I' declared_type='NSUInteger' index='0'/>
<arg name='matrix_array' type='^v' declared_type='GLvoid*' index='1'/>
<arg name='numberOfMatrix' type='I' declared_type='NSUInteger' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateUniforms'>
<retval type='v' declared_type='void'/>
</method>
<method selector='use'>
<retval type='v' declared_type='void'/>
</method>
<method selector='vertexShaderLog'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='CCGLView'>
<method selector='context'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='convertPointFromViewToSurface:'>
<arg name='point' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertRectFromViewToSurface:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='depthFormat'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='initWithFrame:'>
<arg name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFrame:pixelFormat:'>
<arg name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0'/>
<arg name='format' type='@' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFrame:pixelFormat:depthFormat:preserveBackbuffer:sharegroup:multiSampling:numberOfSamples:'>
<arg name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0'/>
<arg name='format' type='@' declared_type='NSString*' index='1'/>
<arg name='depth' type='I' declared_type='GLuint' index='2'/>
<arg name='retained' type='B' declared_type='BOOL' index='3'/>
<arg name='sharegroup' type='@' declared_type='id' index='4'/>
<arg name='sampling' type='B' declared_type='BOOL' index='5'/>
<arg name='nSamples' type='I' declared_type='unsigned int' index='6'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lockOpenGLContext'>
<retval type='v' declared_type='void'/>
</method>
<method selector='multiSampling'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pixelFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setMultiSampling:'>
<arg name='multiSampling' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTouchDelegate:'>
<arg name='touchDelegate' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='surfaceSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='swapBuffers'>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchDelegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='unlockOpenGLContext'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='viewWithFrame:'>
<arg name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='viewWithFrame:pixelFormat:'>
<arg name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0'/>
<arg name='format' type='@' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='viewWithFrame:pixelFormat:depthFormat:'>
<arg name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0'/>
<arg name='format' type='@' declared_type='NSString*' index='1'/>
<arg name='depth' type='I' declared_type='GLuint' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='viewWithFrame:pixelFormat:depthFormat:preserveBackbuffer:sharegroup:multiSampling:numberOfSamples:'>
<arg name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0'/>
<arg name='format' type='@' declared_type='NSString*' index='1'/>
<arg name='depth' type='I' declared_type='GLuint' index='2'/>
<arg name='retained' type='B' declared_type='BOOL' index='3'/>
<arg name='sharegroup' type='@' declared_type='id' index='4'/>
<arg name='multisampling' type='B' declared_type='BOOL' index='5'/>
<arg name='samples' type='I' declared_type='unsigned int' index='6'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCGrabber'>
<method selector='afterRender:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beforeRender:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='grab:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCGrid3D'>
<method selector='originalVertex:'>
<arg name='pos' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<retval type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
</method>
<method selector='setVertex:vertex:'>
<arg name='pos' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<arg name='vertex' type='{_ccVertex3F=fff}' declared_type='ccVertex3F' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='vertex:'>
<arg name='pos' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<retval type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
</method>
</class>
<class name='CCGrid3DAction'>
<method selector='originalVertex:'>
<arg name='pos' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<retval type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
</method>
<method selector='setVertex:vertex:'>
<arg name='pos' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<arg name='vertex' type='{_ccVertex3F=fff}' declared_type='ccVertex3F' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='vertex:'>
<arg name='pos' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<retval type='{_ccVertex3F=fff}' declared_type='ccVertex3F'/>
</method>
</class>
<class name='CCGridAction'>
<method class_method='true' selector='actionWithSize:duration:'>
<arg name='size' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<arg name='d' type='f' declared_type='ccTime' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='grid'>
<retval type='@' declared_type='CCGridBase*'/>
</method>
<method selector='gridSize'>
<retval type='{_ccGridSize=ii}' declared_type='ccGridSize'/>
</method>
<method selector='initWithSize:duration:'>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<arg name='d' type='f' declared_type='ccTime' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setGridSize:'>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCGridBase'>
<method selector='active'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='afterDraw:'>
<arg name='target' type='@' declared_type='CCNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beforeDraw'>
<retval type='v' declared_type='void'/>
</method>
<method selector='blit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='calculateVertexPoints'>
<retval type='v' declared_type='void'/>
</method>
<method selector='grabber'>
<retval type='@' declared_type='CCGrabber*'/>
</method>
<method selector='gridSize'>
<retval type='{_ccGridSize=ii}' declared_type='ccGridSize'/>
</method>
<method class_method='true' selector='gridWithSize:'>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='gridWithSize:texture:flippedTexture:'>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='1'/>
<arg name='flipped' type='B' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSize:'>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSize:texture:flippedTexture:'>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='1'/>
<arg name='flipped' type='B' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isTextureFlipped'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reuse'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reuseGrid'>
<retval type='i' declared_type='int'/>
</method>
<method selector='setActive:'>
<arg name='active' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGrabber:'>
<arg name='grabber' type='@' declared_type='CCGrabber*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsTextureFlipped:'>
<arg name='isTextureFlipped' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReuseGrid:'>
<arg name='reuseGrid' type='i' declared_type='int' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShaderProgram:'>
<arg name='shaderProgram' type='@' declared_type='CCGLProgram*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStep:'>
<arg name='step' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shaderProgram'>
<retval type='@' declared_type='CCGLProgram*'/>
</method>
<method selector='step'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
</class>
<class name='CCHide'>
<method selector='update:'>
<arg name='time' type='f' declared_type='ccTime' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCJumpBy'>
<method class_method='true' selector='actionWithDuration:position:height:jumps:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='position' type='{CGPoint=ff}' declared_type='CGPoint' index='1'/>
<arg name='height' type='f' declared_type='ccTime' index='2'/>
<arg name='jumps' type='I' declared_type='NSUInteger' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:position:height:jumps:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='position' type='{CGPoint=ff}' declared_type='CGPoint' index='1'/>
<arg name='height' type='f' declared_type='ccTime' index='2'/>
<arg name='jumps' type='I' declared_type='NSUInteger' index='3'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCJumpTiles3D'>
<method class_method='true' selector='actionWithJumps:amplitude:grid:duration:'>
<arg name='j' type='i' declared_type='int' index='0'/>
<arg name='amp' type='f' declared_type='float' index='1'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='2'/>
<arg name='d' type='f' declared_type='ccTime' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithJumps:amplitude:grid:duration:'>
<arg name='j' type='i' declared_type='int' index='0'/>
<arg name='amp' type='f' declared_type='float' index='1'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='2'/>
<arg name='d' type='f' declared_type='ccTime' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg name='amplitude' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg name='amplitudeRate' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCJumpTo'>
<method selector='startWithTarget:'>
<arg name='aTarget' type='@' declared_type='CCNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLabelAtlas'>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='charmapfile' type='@' declared_type='NSString*' index='1'/>
<arg name='w' type='I' declared_type='NSUInteger' index='2'/>
<arg name='h' type='I' declared_type='NSUInteger' index='3'/>
<arg name='firstElement' type='I' declared_type='NSUInteger' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fntFile:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='fontFile' type='@' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:charMapFile:itemWidth:itemHeight:startCharMap:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='charmapfile' type='@' declared_type='NSString*' index='1'/>
<arg name='w' type='I' declared_type='NSUInteger' index='2'/>
<arg name='h' type='I' declared_type='NSUInteger' index='3'/>
<arg name='firstElement' type='I' declared_type='NSUInteger' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:fntFile:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='fontFile' type='@' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCLabelBMFont'>
<method selector='alignment'>
<retval type='i' declared_type='CCTextAlignment'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='createFontChars'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fntFile'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithString:fntFile:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='fntFile' type='@' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fntFile:width:alignment:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='fntFile' type='@' declared_type='NSString*' index='1'/>
<arg name='width' type='f' declared_type='float' index='2'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fntFile:width:alignment:imageOffset:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='fntFile' type='@' declared_type='NSString*' index='1'/>
<arg name='width' type='f' declared_type='float' index='2'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='3'/>
<arg name='offset' type='{CGPoint=ff}' declared_type='CGPoint' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:fntFile:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='fntFile' type='@' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:fntFile:width:alignment:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='fntFile' type='@' declared_type='NSString*' index='1'/>
<arg name='width' type='f' declared_type='float' index='2'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:fntFile:width:alignment:imageOffset:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='fntFile' type='@' declared_type='NSString*' index='1'/>
<arg name='width' type='f' declared_type='float' index='2'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='3'/>
<arg name='offset' type='{CGPoint=ff}' declared_type='CGPoint' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method class_method='true' selector='purgeCachedData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlignment:'>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFntFile:'>
<arg name='fntFile' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg name='opacity' type='C' declared_type='GLubyte' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWidth:'>
<arg name='width' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLabelTTF'>
<method selector='dimensions'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='fontName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fontSize'>
<retval type='f' declared_type='float'/>
</method>
<method selector='horizontalAlignment'>
<retval type='i' declared_type='CCTextAlignment'/>
</method>
<method selector='initWithString:dimensions:alignment:fontName:fontSize:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='dimensions' type='{CGSize=ff}' declared_type='CGSize' index='1'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='2'/>
<arg name='name' type='@' declared_type='NSString*' index='3'/>
<arg name='size' type='f' declared_type='CGFloat' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:alignment:lineBreakMode:fontName:fontSize:'>
<arg name='str' type='@' declared_type='NSString*' index='0'/>
<arg name='dimensions' type='{CGSize=ff}' declared_type='CGSize' index='1'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='2'/>
<arg name='lineBreakMode' type='i' declared_type='CCLineBreakMode' index='3'/>
<arg name='name' type='@' declared_type='NSString*' index='4'/>
<arg name='size' type='f' declared_type='CGFloat' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:hAlignment:fontName:fontSize:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='dimensions' type='{CGSize=ff}' declared_type='CGSize' index='1'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='2'/>
<arg name='name' type='@' declared_type='NSString*' index='3'/>
<arg name='size' type='f' declared_type='CGFloat' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:hAlignment:lineBreakMode:fontName:fontSize:'>
<arg name='str' type='@' declared_type='NSString*' index='0'/>
<arg name='dimensions' type='{CGSize=ff}' declared_type='CGSize' index='1'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='2'/>
<arg name='lineBreakMode' type='i' declared_type='CCLineBreakMode' index='3'/>
<arg name='name' type='@' declared_type='NSString*' index='4'/>
<arg name='size' type='f' declared_type='CGFloat' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:fontName:fontSize:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='dimensions' type='{CGSize=ff}' declared_type='CGSize' index='1'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='2'/>
<arg name='vertAlignment' type='i' declared_type='CCVerticalTextAlignment' index='3'/>
<arg name='name' type='@' declared_type='NSString*' index='4'/>
<arg name='size' type='f' declared_type='CGFloat' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:lineBreakMode:fontName:fontSize:'>
<arg name='str' type='@' declared_type='NSString*' index='0'/>
<arg name='dimensions' type='{CGSize=ff}' declared_type='CGSize' index='1'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='2'/>
<arg name='vAlignment' type='i' declared_type='CCVerticalTextAlignment' index='3'/>
<arg name='lineBreakMode' type='i' declared_type='CCLineBreakMode' index='4'/>
<arg name='name' type='@' declared_type='NSString*' index='5'/>
<arg name='size' type='f' declared_type='CGFloat' index='6'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fontName:fontSize:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='name' type='@' declared_type='NSString*' index='1'/>
<arg name='size' type='f' declared_type='CGFloat' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:dimensions:alignment:fontName:fontSize:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='dimensions' type='{CGSize=ff}' declared_type='CGSize' index='1'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='2'/>
<arg name='name' type='@' declared_type='NSString*' index='3'/>
<arg name='size' type='f' declared_type='CGFloat' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:dimensions:alignment:lineBreakMode:fontName:fontSize:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='dimensions' type='{CGSize=ff}' declared_type='CGSize' index='1'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='2'/>
<arg name='lineBreakMode' type='i' declared_type='CCLineBreakMode' index='3'/>
<arg name='name' type='@' declared_type='NSString*' index='4'/>
<arg name='size' type='f' declared_type='CGFloat' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:dimensions:hAlignment:fontName:fontSize:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='dimensions' type='{CGSize=ff}' declared_type='CGSize' index='1'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='2'/>
<arg name='name' type='@' declared_type='NSString*' index='3'/>
<arg name='size' type='f' declared_type='CGFloat' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:dimensions:hAlignment:lineBreakMode:fontName:fontSize:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='dimensions' type='{CGSize=ff}' declared_type='CGSize' index='1'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='2'/>
<arg name='lineBreakMode' type='i' declared_type='CCLineBreakMode' index='3'/>
<arg name='name' type='@' declared_type='NSString*' index='4'/>
<arg name='size' type='f' declared_type='CGFloat' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:dimensions:hAlignment:vAlignment:fontName:fontSize:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='dimensions' type='{CGSize=ff}' declared_type='CGSize' index='1'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='2'/>
<arg name='vertAlignment' type='i' declared_type='CCVerticalTextAlignment' index='3'/>
<arg name='name' type='@' declared_type='NSString*' index='4'/>
<arg name='size' type='f' declared_type='CGFloat' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:dimensions:hAlignment:vAlignment:lineBreakMode:fontName:fontSize:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='dimensions' type='{CGSize=ff}' declared_type='CGSize' index='1'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='2'/>
<arg name='vertAlignment' type='i' declared_type='CCVerticalTextAlignment' index='3'/>
<arg name='lineBreakMode' type='i' declared_type='CCLineBreakMode' index='4'/>
<arg name='name' type='@' declared_type='NSString*' index='5'/>
<arg name='size' type='f' declared_type='CGFloat' index='6'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='labelWithString:fontName:fontSize:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='name' type='@' declared_type='NSString*' index='1'/>
<arg name='size' type='f' declared_type='CGFloat' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDimensions:'>
<arg name='dimensions' type='{CGSize=ff}' declared_type='CGSize' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontName:'>
<arg name='fontName' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontSize:'>
<arg name='fontSize' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHorizontalAlignment:'>
<arg name='horizontalAlignment' type='i' declared_type='CCTextAlignment' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:'>
<arg name='str' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVerticalAlignment:'>
<arg name='verticalAlignment' type='i' declared_type='CCVerticalTextAlignment' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='verticalAlignment'>
<retval type='i' declared_type='CCVerticalTextAlignment'/>
</method>
</class>
<class name='CCLayer'>
<method selector='isAccelerometerEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isTouchEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='registerWithTouchDispatcher'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsAccelerometerEnabled:'>
<arg name='isAccelerometerEnabled' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsTouchEnabled:'>
<arg name='isTouchEnabled' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLayerColor'>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='changeHeight:'>
<arg name='h' type='f' declared_type='GLfloat' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeWidth:'>
<arg name='w' type='f' declared_type='GLfloat' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeWidth:height:'>
<arg name='w' type='f' declared_type='GLfloat' index='0'/>
<arg name='h' type='f' declared_type='GLfloat' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithColor:'>
<arg name='color' type='{_ccColor4B=CCCC}' declared_type='ccColor4B' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithColor:width:height:'>
<arg name='color' type='{_ccColor4B=CCCC}' declared_type='ccColor4B' index='0'/>
<arg name='w' type='f' declared_type='GLfloat' index='1'/>
<arg name='h' type='f' declared_type='GLfloat' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='layerWithColor:'>
<arg name='color' type='{_ccColor4B=CCCC}' declared_type='ccColor4B' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='layerWithColor:width:height:'>
<arg name='color' type='{_ccColor4B=CCCC}' declared_type='ccColor4B' index='0'/>
<arg name='w' type='f' declared_type='GLfloat' index='1'/>
<arg name='h' type='f' declared_type='GLfloat' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='setBlendFunc:'>
<arg name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLayerGradient'>
<method selector='compressedInterpolation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='endColor'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='endOpacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='initWithColor:fadingTo:'>
<arg name='start' type='{_ccColor4B=CCCC}' declared_type='ccColor4B' index='0'/>
<arg name='end' type='{_ccColor4B=CCCC}' declared_type='ccColor4B' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithColor:fadingTo:alongVector:'>
<arg name='start' type='{_ccColor4B=CCCC}' declared_type='ccColor4B' index='0'/>
<arg name='end' type='{_ccColor4B=CCCC}' declared_type='ccColor4B' index='1'/>
<arg name='v' type='{CGPoint=ff}' declared_type='CGPoint' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='layerWithColor:fadingTo:'>
<arg name='start' type='{_ccColor4B=CCCC}' declared_type='ccColor4B' index='0'/>
<arg name='end' type='{_ccColor4B=CCCC}' declared_type='ccColor4B' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='layerWithColor:fadingTo:alongVector:'>
<arg name='start' type='{_ccColor4B=CCCC}' declared_type='ccColor4B' index='0'/>
<arg name='end' type='{_ccColor4B=CCCC}' declared_type='ccColor4B' index='1'/>
<arg name='v' type='{CGPoint=ff}' declared_type='CGPoint' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setCompressedInterpolation:'>
<arg name='compressedInterpolation' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndColor:'>
<arg name='endColor' type='{_ccColor3B=CCC}' declared_type='ccColor3B' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndOpacity:'>
<arg name='endOpacity' type='C' declared_type='GLubyte' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartColor:'>
<arg name='startColor' type='{_ccColor3B=CCC}' declared_type='ccColor3B' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartOpacity:'>
<arg name='startOpacity' type='C' declared_type='GLubyte' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVector:'>
<arg name='vector' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startColor'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='startOpacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='vector'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
</class>
<class name='CCLayerMultiplex'>
<method selector='initWithLayers:vaList:'>
<arg name='layer' type='@' declared_type='CCLayer*' index='0'/>
<arg name='params' type='*' declared_type='va_list' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' class_method='true' variadic='true' selector='layerWithLayers:'>
<arg name='layer' type='@' declared_type='CCLayer*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='switchTo:'>
<arg name='n' type='I' declared_type='unsigned int' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='switchToAndReleaseMe:'>
<arg name='n' type='I' declared_type='unsigned int' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLens3D'>
<method class_method='true' selector='actionWithPosition:radius:grid:duration:'>
<arg name='pos' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<arg name='r' type='f' declared_type='float' index='1'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='2'/>
<arg name='d' type='f' declared_type='ccTime' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPosition:radius:grid:duration:'>
<arg name='pos' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<arg name='r' type='f' declared_type='float' index='1'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='2'/>
<arg name='d' type='f' declared_type='ccTime' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lensEffect'>
<retval type='f' declared_type='float'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setLensEffect:'>
<arg name='lensEffect' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg name='position' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCLiquid'>
<method class_method='true' selector='actionWithWaves:amplitude:grid:duration:'>
<arg name='wav' type='i' declared_type='int' index='0'/>
<arg name='amp' type='f' declared_type='float' index='1'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='2'/>
<arg name='d' type='f' declared_type='ccTime' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg name='wav' type='i' declared_type='int' index='0'/>
<arg name='amp' type='f' declared_type='float' index='1'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='2'/>
<arg name='d' type='f' declared_type='ccTime' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg name='amplitude' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg name='amplitudeRate' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenu'>
<method selector='alignItemsHorizontally'>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsHorizontallyWithPadding:'>
<arg name='padding' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method sentinel='0' variadic='true' selector='alignItemsInColumns:'>
<arg name='columns' type='@' declared_type='NSNumber*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsInColumns:vaList:'>
<arg name='columns' type='@' declared_type='NSNumber*' index='0'/>
<arg name='args' type='*' declared_type='va_list' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method sentinel='0' variadic='true' selector='alignItemsInRows:'>
<arg name='rows' type='@' declared_type='NSNumber*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsInRows:vaList:'>
<arg name='rows' type='@' declared_type='NSNumber*' index='0'/>
<arg name='args' type='*' declared_type='va_list' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsVertically'>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignItemsVerticallyWithPadding:'>
<arg name='padding' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='enabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithArray:'>
<arg name='arrayOfItems' type='@' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='menuWithArray:'>
<arg name='arrayOfItems' type='@' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' class_method='true' variadic='true' selector='menuWithItems:'>
<arg name='item' type='@' declared_type='CCMenuItem*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='menuWithItems:vaList:'>
<arg name='firstItem' type='@' declared_type='CCMenuItem*' index='0'/>
<arg name='args' type='*' declared_type='va_list' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='setEnabled:'>
<arg name='enabled' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHandlerPriority:'>
<arg name='newPriority' type='i' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItem'>
<method selector='activate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='cleanup'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBlock:'>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='0'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<arg name='selector' type=':' declared_type='SEL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSelected'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='itemWithBlock:'>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='0'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithTarget:selector:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<arg name='selector' type=':' declared_type='SEL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rect'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='selected'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlock:'>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='0'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsEnabled:'>
<arg name='enabled' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTarget:selector:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<arg name='selector' type=':' declared_type='SEL' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unselected'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemAtlasFont'>
<method selector='initFromString:charMapFile:itemWidth:itemHeight:startCharMap:block:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='charMapFile' type='@' declared_type='NSString*' index='1'/>
<arg name='itemWidth' type='i' declared_type='int' index='2'/>
<arg name='itemHeight' type='i' declared_type='int' index='3'/>
<arg name='startCharMap' type='c' declared_type='char' index='4'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='5'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initFromString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='charMapFile' type='@' declared_type='NSString*' index='1'/>
<arg name='itemWidth' type='i' declared_type='int' index='2'/>
<arg name='itemHeight' type='i' declared_type='int' index='3'/>
<arg name='startCharMap' type='c' declared_type='char' index='4'/>
<arg name='rec' type='@' declared_type='id' index='5'/>
<arg name='cb' type=':' declared_type='SEL' index='6'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:block:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='charMapFile' type='@' declared_type='NSString*' index='1'/>
<arg name='itemWidth' type='i' declared_type='int' index='2'/>
<arg name='itemHeight' type='i' declared_type='int' index='3'/>
<arg name='startCharMap' type='c' declared_type='char' index='4'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='5'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='charMapFile' type='@' declared_type='NSString*' index='1'/>
<arg name='itemWidth' type='i' declared_type='int' index='2'/>
<arg name='itemHeight' type='i' declared_type='int' index='3'/>
<arg name='startCharMap' type='c' declared_type='char' index='4'/>
<arg name='target' type='@' declared_type='id' index='5'/>
<arg name='selector' type=':' declared_type='SEL' index='6'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemFromString:charMapFile:itemWidth:itemHeight:startCharMap:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='charMapFile' type='@' declared_type='NSString*' index='1'/>
<arg name='itemWidth' type='i' declared_type='int' index='2'/>
<arg name='itemHeight' type='i' declared_type='int' index='3'/>
<arg name='startCharMap' type='c' declared_type='char' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemFromString:charMapFile:itemWidth:itemHeight:startCharMap:block:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='charMapFile' type='@' declared_type='NSString*' index='1'/>
<arg name='itemWidth' type='i' declared_type='int' index='2'/>
<arg name='itemHeight' type='i' declared_type='int' index='3'/>
<arg name='startCharMap' type='c' declared_type='char' index='4'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='5'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemFromString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='charMapFile' type='@' declared_type='NSString*' index='1'/>
<arg name='itemWidth' type='i' declared_type='int' index='2'/>
<arg name='itemHeight' type='i' declared_type='int' index='3'/>
<arg name='startCharMap' type='c' declared_type='char' index='4'/>
<arg name='rec' type='@' declared_type='id' index='5'/>
<arg name='cb' type=':' declared_type='SEL' index='6'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='charMapFile' type='@' declared_type='NSString*' index='1'/>
<arg name='itemWidth' type='i' declared_type='int' index='2'/>
<arg name='itemHeight' type='i' declared_type='int' index='3'/>
<arg name='startCharMap' type='c' declared_type='char' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:block:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='charMapFile' type='@' declared_type='NSString*' index='1'/>
<arg name='itemWidth' type='i' declared_type='int' index='2'/>
<arg name='itemHeight' type='i' declared_type='int' index='3'/>
<arg name='startCharMap' type='c' declared_type='char' index='4'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='5'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='charMapFile' type='@' declared_type='NSString*' index='1'/>
<arg name='itemWidth' type='i' declared_type='int' index='2'/>
<arg name='itemHeight' type='i' declared_type='int' index='3'/>
<arg name='startCharMap' type='c' declared_type='char' index='4'/>
<arg name='target' type='@' declared_type='id' index='5'/>
<arg name='selector' type=':' declared_type='SEL' index='6'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCMenuItemFont'>
<method class_method='true' selector='fontName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fontName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='fontSize'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='fontSize'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='initFromString:block:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='1'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initFromString:target:selector:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='r' type='@' declared_type='id' index='1'/>
<arg name='s' type=':' declared_type='SEL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:block:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='1'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:target:selector:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='r' type='@' declared_type='id' index='1'/>
<arg name='s' type=':' declared_type='SEL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemFromString:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemFromString:block:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='1'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemFromString:target:selector:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='r' type='@' declared_type='id' index='1'/>
<arg name='s' type=':' declared_type='SEL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithString:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithString:block:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='1'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithString:target:selector:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='r' type='@' declared_type='id' index='1'/>
<arg name='s' type=':' declared_type='SEL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='setFontName:'>
<arg name='n' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontName:'>
<arg name='n' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setFontSize:'>
<arg name='s' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontSize:'>
<arg name='s' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemImage'>
<method selector='initFromNormalImage:selectedImage:disabledImage:block:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='value2' type='@' declared_type='NSString*' index='1'/>
<arg name='value3' type='@' declared_type='NSString*' index='2'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='3'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initFromNormalImage:selectedImage:disabledImage:target:selector:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='value2' type='@' declared_type='NSString*' index='1'/>
<arg name='value3' type='@' declared_type='NSString*' index='2'/>
<arg name='r' type='@' declared_type='id' index='3'/>
<arg name='s' type=':' declared_type='SEL' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithNormalImage:selectedImage:disabledImage:block:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='value2' type='@' declared_type='NSString*' index='1'/>
<arg name='value3' type='@' declared_type='NSString*' index='2'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='3'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithNormalImage:selectedImage:disabledImage:target:selector:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='value2' type='@' declared_type='NSString*' index='1'/>
<arg name='value3' type='@' declared_type='NSString*' index='2'/>
<arg name='r' type='@' declared_type='id' index='3'/>
<arg name='s' type=':' declared_type='SEL' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemFromNormalImage:selectedImage:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='value2' type='@' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemFromNormalImage:selectedImage:block:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='value2' type='@' declared_type='NSString*' index='1'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='2'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemFromNormalImage:selectedImage:disabledImage:block:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='value2' type='@' declared_type='NSString*' index='1'/>
<arg name='value3' type='@' declared_type='NSString*' index='2'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='3'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemFromNormalImage:selectedImage:disabledImage:target:selector:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='value2' type='@' declared_type='NSString*' index='1'/>
<arg name='value3' type='@' declared_type='NSString*' index='2'/>
<arg name='r' type='@' declared_type='id' index='3'/>
<arg name='s' type=':' declared_type='SEL' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemFromNormalImage:selectedImage:target:selector:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='value2' type='@' declared_type='NSString*' index='1'/>
<arg name='r' type='@' declared_type='id' index='2'/>
<arg name='s' type=':' declared_type='SEL' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalImage:selectedImage:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='value2' type='@' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalImage:selectedImage:block:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='value2' type='@' declared_type='NSString*' index='1'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='2'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalImage:selectedImage:disabledImage:block:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='value2' type='@' declared_type='NSString*' index='1'/>
<arg name='value3' type='@' declared_type='NSString*' index='2'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='3'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalImage:selectedImage:disabledImage:target:selector:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='value2' type='@' declared_type='NSString*' index='1'/>
<arg name='value3' type='@' declared_type='NSString*' index='2'/>
<arg name='r' type='@' declared_type='id' index='3'/>
<arg name='s' type=':' declared_type='SEL' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalImage:selectedImage:target:selector:'>
<arg name='value' type='@' declared_type='NSString*' index='0'/>
<arg name='value2' type='@' declared_type='NSString*' index='1'/>
<arg name='r' type='@' declared_type='id' index='2'/>
<arg name='s' type=':' declared_type='SEL' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDisabledSpriteFrame:'>
<arg name='frame' type='@' declared_type='CCSpriteFrame*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNormalSpriteFrame:'>
<arg name='frame' type='@' declared_type='CCSpriteFrame*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedSpriteFrame:'>
<arg name='frame' type='@' declared_type='CCSpriteFrame*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemLabel'>
<method selector='disabledColor'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithLabel:block:'>
<arg name='label' type='@' declared_type='CCNode*' index='0'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='1'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLabel:target:selector:'>
<arg name='label' type='@' declared_type='CCNode*' index='0'/>
<arg name='target' type='@' declared_type='id' index='1'/>
<arg name='selector' type=':' declared_type='SEL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithLabel:'>
<arg name='label' type='@' declared_type='CCNode*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithLabel:block:'>
<arg name='label' type='@' declared_type='CCNode*' index='0'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='1'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithLabel:target:selector:'>
<arg name='label' type='@' declared_type='CCNode*' index='0'/>
<arg name='target' type='@' declared_type='id' index='1'/>
<arg name='selector' type=':' declared_type='SEL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='label'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='setDisabledColor:'>
<arg name='disabledColor' type='{_ccColor3B=CCC}' declared_type='ccColor3B' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsEnabled:'>
<arg name='enabled' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabel:'>
<arg name='label' type='@' declared_type='CCNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:'>
<arg name='label' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemSprite'>
<method selector='disabledImage'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='initFromNormalSprite:selectedSprite:disabledSprite:block:'>
<arg name='normalSprite' type='@' declared_type='CCNode*' index='0'/>
<arg name='selectedSprite' type='@' declared_type='CCNode*' index='1'/>
<arg name='disabledSprite' type='@' declared_type='CCNode*' index='2'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='3'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initFromNormalSprite:selectedSprite:disabledSprite:target:selector:'>
<arg name='normalSprite' type='@' declared_type='CCNode*' index='0'/>
<arg name='selectedSprite' type='@' declared_type='CCNode*' index='1'/>
<arg name='disabledSprite' type='@' declared_type='CCNode*' index='2'/>
<arg name='target' type='@' declared_type='id' index='3'/>
<arg name='selector' type=':' declared_type='SEL' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithNormalSprite:selectedSprite:disabledSprite:block:'>
<arg name='normalSprite' type='@' declared_type='CCNode*' index='0'/>
<arg name='selectedSprite' type='@' declared_type='CCNode*' index='1'/>
<arg name='disabledSprite' type='@' declared_type='CCNode*' index='2'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='3'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithNormalSprite:selectedSprite:disabledSprite:target:selector:'>
<arg name='normalSprite' type='@' declared_type='CCNode*' index='0'/>
<arg name='selectedSprite' type='@' declared_type='CCNode*' index='1'/>
<arg name='disabledSprite' type='@' declared_type='CCNode*' index='2'/>
<arg name='target' type='@' declared_type='id' index='3'/>
<arg name='selector' type=':' declared_type='SEL' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemFromNormalSprite:selectedSprite:'>
<arg name='normalSprite' type='@' declared_type='CCNode*' index='0'/>
<arg name='selectedSprite' type='@' declared_type='CCNode*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemFromNormalSprite:selectedSprite:block:'>
<arg name='normalSprite' type='@' declared_type='CCNode*' index='0'/>
<arg name='selectedSprite' type='@' declared_type='CCNode*' index='1'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='2'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemFromNormalSprite:selectedSprite:disabledSprite:block:'>
<arg name='normalSprite' type='@' declared_type='CCNode*' index='0'/>
<arg name='selectedSprite' type='@' declared_type='CCNode*' index='1'/>
<arg name='disabledSprite' type='@' declared_type='CCNode*' index='2'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='3'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemFromNormalSprite:selectedSprite:disabledSprite:target:selector:'>
<arg name='normalSprite' type='@' declared_type='CCNode*' index='0'/>
<arg name='selectedSprite' type='@' declared_type='CCNode*' index='1'/>
<arg name='disabledSprite' type='@' declared_type='CCNode*' index='2'/>
<arg name='target' type='@' declared_type='id' index='3'/>
<arg name='selector' type=':' declared_type='SEL' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemFromNormalSprite:selectedSprite:target:selector:'>
<arg name='normalSprite' type='@' declared_type='CCNode*' index='0'/>
<arg name='selectedSprite' type='@' declared_type='CCNode*' index='1'/>
<arg name='target' type='@' declared_type='id' index='2'/>
<arg name='selector' type=':' declared_type='SEL' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalSprite:selectedSprite:'>
<arg name='normalSprite' type='@' declared_type='CCNode*' index='0'/>
<arg name='selectedSprite' type='@' declared_type='CCNode*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalSprite:selectedSprite:block:'>
<arg name='normalSprite' type='@' declared_type='CCNode*' index='0'/>
<arg name='selectedSprite' type='@' declared_type='CCNode*' index='1'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='2'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalSprite:selectedSprite:disabledSprite:block:'>
<arg name='normalSprite' type='@' declared_type='CCNode*' index='0'/>
<arg name='selectedSprite' type='@' declared_type='CCNode*' index='1'/>
<arg name='disabledSprite' type='@' declared_type='CCNode*' index='2'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='3'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalSprite:selectedSprite:disabledSprite:target:selector:'>
<arg name='normalSprite' type='@' declared_type='CCNode*' index='0'/>
<arg name='selectedSprite' type='@' declared_type='CCNode*' index='1'/>
<arg name='disabledSprite' type='@' declared_type='CCNode*' index='2'/>
<arg name='target' type='@' declared_type='id' index='3'/>
<arg name='selector' type=':' declared_type='SEL' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithNormalSprite:selectedSprite:target:selector:'>
<arg name='normalSprite' type='@' declared_type='CCNode*' index='0'/>
<arg name='selectedSprite' type='@' declared_type='CCNode*' index='1'/>
<arg name='target' type='@' declared_type='id' index='2'/>
<arg name='selector' type=':' declared_type='SEL' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='normalImage'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='selectedImage'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='setDisabledImage:'>
<arg name='disabledImage' type='@' declared_type='CCNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNormalImage:'>
<arg name='normalImage' type='@' declared_type='CCNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedImage:'>
<arg name='selectedImage' type='@' declared_type='CCNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMenuItemToggle'>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithItems:block:'>
<arg name='arrayOfItems' type='@' declared_type='NSArray*' index='0'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='1'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithItems:block:'>
<arg name='arrayOfItems' type='@' declared_type='NSArray*' index='0'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='1'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' class_method='true' variadic='true' selector='itemWithTarget:selector:items:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<arg name='selector' type=':' declared_type='SEL' index='1'/>
<arg name='item' type='@' declared_type='CCMenuItem*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='itemWithTarget:selector:items:vaList:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<arg name='selector' type=':' declared_type='SEL' index='1'/>
<arg name='item' type='@' declared_type='CCMenuItem*' index='2'/>
<arg name='args' type='*' declared_type='va_list' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='selectedIndex'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='selectedItem'>
<retval type='@' declared_type='CCMenuItem*'/>
</method>
<method selector='setSelectedIndex:'>
<arg name='selectedIndex' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubItems:'>
<arg name='subItems' type='@' declared_type='NSMutableArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='subItems'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
</class>
<class name='CCMotionStreak'>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='initWithFade:minSeg:width:color:texture:'>
<arg name='fade' type='f' declared_type='float' index='0'/>
<arg name='minSeg' type='f' declared_type='float' index='1'/>
<arg name='stroke' type='f' declared_type='float' index='2'/>
<arg name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B' index='3'/>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFade:minSeg:width:color:textureFilename:'>
<arg name='fade' type='f' declared_type='float' index='0'/>
<arg name='minSeg' type='f' declared_type='float' index='1'/>
<arg name='stroke' type='f' declared_type='float' index='2'/>
<arg name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B' index='3'/>
<arg name='path' type='@' declared_type='NSString*' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isFastMode'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reset'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFastMode:'>
<arg name='fastMode' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='streakWithFade:minSeg:width:color:texture:'>
<arg name='fade' type='f' declared_type='float' index='0'/>
<arg name='minSeg' type='f' declared_type='float' index='1'/>
<arg name='stroke' type='f' declared_type='float' index='2'/>
<arg name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B' index='3'/>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='streakWithFade:minSeg:width:color:textureFilename:'>
<arg name='fade' type='f' declared_type='float' index='0'/>
<arg name='minSeg' type='f' declared_type='float' index='1'/>
<arg name='stroke' type='f' declared_type='float' index='2'/>
<arg name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B' index='3'/>
<arg name='path' type='@' declared_type='NSString*' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='tintWithColor:'>
<arg name='colors' type='{_ccColor3B=CCC}' declared_type='ccColor3B' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCMoveBy'>
<method class_method='true' selector='actionWithDuration:position:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='deltaPosition' type='{CGPoint=ff}' declared_type='CGPoint' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:position:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='deltaPosition' type='{CGPoint=ff}' declared_type='CGPoint' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCMoveTo'>
<method class_method='true' selector='actionWithDuration:position:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='position' type='{CGPoint=ff}' declared_type='CGPoint' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:position:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='position' type='{CGPoint=ff}' declared_type='CGPoint' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCNode'>
<method selector='actionManager'>
<retval type='@' declared_type='CCActionManager*'/>
</method>
<method selector='addChild:'>
<arg name='node' type='@' declared_type='CCNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addChild:z:'>
<arg name='node' type='@' declared_type='CCNode*' index='0'/>
<arg name='z' type='i' declared_type='NSInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addChild:z:tag:'>
<arg name='node' type='@' declared_type='CCNode*' index='0'/>
<arg name='z' type='i' declared_type='NSInteger' index='1'/>
<arg name='tag' type='i' declared_type='NSInteger' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='anchorPoint'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='anchorPointInPoints'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='boundingBox'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='camera'>
<retval type='@' declared_type='CCCamera*'/>
</method>
<method selector='children'>
<retval type='@' declared_type='CCArray*'/>
</method>
<method selector='cleanup'>
<retval type='v' declared_type='void'/>
</method>
<method selector='contentSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='convertToNodeSpace:'>
<arg name='worldPoint' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertToNodeSpaceAR:'>
<arg name='worldPoint' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertToWorldSpace:'>
<arg name='nodePoint' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertToWorldSpaceAR:'>
<arg name='nodePoint' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertTouchToNodeSpace:'>
<arg name='touch' type='@' declared_type='id' index='0'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='convertTouchToNodeSpaceAR:'>
<arg name='touch' type='@' declared_type='id' index='0'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='draw'>
<retval type='v' declared_type='void'/>
</method>
<method selector='getActionByTag:'>
<arg name='tag' type='i' declared_type='NSInteger' index='0'/>
<retval type='@' declared_type='CCAction*'/>
</method>
<method selector='getChildByTag:'>
<arg name='tag' type='i' declared_type='NSInteger' index='0'/>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='glServerState'>
<retval type='i' declared_type='ccGLServerState'/>
</method>
<method selector='grid'>
<retval type='@' declared_type='CCGridBase*'/>
</method>
<method selector='ignoreAnchorPointForPosition'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isRelativeAnchorPoint'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRunning'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='node'>
<retval type='@' declared_type='id'/>
</method>
<method selector='nodeToParentTransform'>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</method>
<method selector='nodeToWorldTransform'>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</method>
<method selector='numberOfRunningActions'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='onEnter'>
<retval type='v' declared_type='void'/>
</method>
<method selector='onEnterTransitionDidFinish'>
<retval type='v' declared_type='void'/>
</method>
<method selector='onExit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='onExitTransitionDidStart'>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderOfArrival'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='parent'>
<retval type='@' declared_type='CCNode*'/>
</method>
<method selector='parentToNodeTransform'>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</method>
<method selector='pauseSchedulerAndActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='removeAllChildrenWithCleanup:'>
<arg name='cleanup' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChild:cleanup:'>
<arg name='node' type='@' declared_type='CCNode*' index='0'/>
<arg name='cleanup' type='B' declared_type='BOOL' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChildByTag:cleanup:'>
<arg name='tag' type='i' declared_type='NSInteger' index='0'/>
<arg name='cleanup' type='B' declared_type='BOOL' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeFromParentAndCleanup:'>
<arg name='cleanup' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reorderChild:z:'>
<arg name='child' type='@' declared_type='CCNode*' index='0'/>
<arg name='zOrder' type='i' declared_type='NSInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeSchedulerAndActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotation'>
<retval type='f' declared_type='float'/>
</method>
<method selector='runAction:'>
<arg name='action' type='@' declared_type='CCAction*' index='0'/>
<retval type='@' declared_type='CCAction*'/>
</method>
<method selector='scale'>
<retval type='f' declared_type='float'/>
</method>
<method selector='scaleX'>
<retval type='f' declared_type='float'/>
</method>
<method selector='scaleY'>
<retval type='f' declared_type='float'/>
</method>
<method selector='schedule:'>
<arg name='s' type=':' declared_type='SEL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='schedule:interval:'>
<arg name='s' type=':' declared_type='SEL' index='0'/>
<arg name='seconds' type='f' declared_type='ccTime' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='schedule:interval:repeat:delay:'>
<arg name='selector' type=':' declared_type='SEL' index='0'/>
<arg name='interval' type='f' declared_type='ccTime' index='1'/>
<arg name='repeat' type='I' declared_type='uint' index='2'/>
<arg name='delay' type='f' declared_type='ccTime' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleOnce:delay:'>
<arg name='selector' type=':' declared_type='SEL' index='0'/>
<arg name='delay' type='f' declared_type='ccTime' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleUpdate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleUpdateWithPriority:'>
<arg name='priority' type='i' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduler'>
<retval type='@' declared_type='CCScheduler*'/>
</method>
<method selector='setActionManager:'>
<arg name='actionManager' type='@' declared_type='CCActionManager*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAnchorPoint:'>
<arg name='anchorPoint' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentSize:'>
<arg name='contentSize' type='{CGSize=ff}' declared_type='CGSize' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGlServerState:'>
<arg name='glServerState' type='i' declared_type='ccGLServerState' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGrid:'>
<arg name='grid' type='@' declared_type='CCGridBase*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIgnoreAnchorPointForPosition:'>
<arg name='ignoreAnchorPointForPosition' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsRelativeAnchorPoint:'>
<arg name='value' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOrderOfArrival:'>
<arg name='orderOfArrival' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParent:'>
<arg name='parent' type='@' declared_type='CCNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg name='position' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotation:'>
<arg name='rotation' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScale:'>
<arg name='scale' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScaleX:'>
<arg name='scaleX' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScaleY:'>
<arg name='scaleY' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScheduler:'>
<arg name='scheduler' type='@' declared_type='CCScheduler*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShaderProgram:'>
<arg name='shaderProgram' type='@' declared_type='CCGLProgram*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSkewX:'>
<arg name='skewX' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSkewY:'>
<arg name='skewY' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTag:'>
<arg name='tag' type='i' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserData:'>
<arg name='userData' type='^v' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserObject:'>
<arg name='userObject' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVertexZ:'>
<arg name='vertexZ' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVisible:'>
<arg name='visible' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setZOrder:'>
<arg name='z' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shaderProgram'>
<retval type='@' declared_type='CCGLProgram*'/>
</method>
<method selector='skewX'>
<retval type='f' declared_type='float'/>
</method>
<method selector='skewY'>
<retval type='f' declared_type='float'/>
</method>
<method selector='sortAllChildren'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopAction:'>
<arg name='action' type='@' declared_type='CCAction*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopActionByTag:'>
<arg name='tag' type='i' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopAllActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='tag'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='transform'>
<retval type='v' declared_type='void'/>
</method>
<method selector='transformAncestors'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unschedule:'>
<arg name='s' type=':' declared_type='SEL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleAllSelectors'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleUpdate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='update:'>
<arg name='delta' type='f' declared_type='ccTime' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='userData'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='userObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='vertexZ'>
<retval type='f' declared_type='float'/>
</method>
<method selector='visible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='visit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='worldToNodeTransform'>
<retval type='{CGAffineTransform=ffffff}' declared_type='CGAffineTransform'/>
</method>
<method selector='zOrder'>
<retval type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='CCOrbitCamera'>
<method class_method='true' selector='actionWithDuration:radius:deltaRadius:angleZ:deltaAngleZ:angleX:deltaAngleX:'>
<arg name='t' type='f' declared_type='float' index='0'/>
<arg name='r' type='f' declared_type='float' index='1'/>
<arg name='dr' type='f' declared_type='float' index='2'/>
<arg name='z' type='f' declared_type='float' index='3'/>
<arg name='dz' type='f' declared_type='float' index='4'/>
<arg name='x' type='f' declared_type='float' index='5'/>
<arg name='dx' type='f' declared_type='float' index='6'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:radius:deltaRadius:angleZ:deltaAngleZ:angleX:deltaAngleX:'>
<arg name='t' type='f' declared_type='float' index='0'/>
<arg name='r' type='f' declared_type='float' index='1'/>
<arg name='dr' type='f' declared_type='float' index='2'/>
<arg name='z' type='f' declared_type='float' index='3'/>
<arg name='dz' type='f' declared_type='float' index='4'/>
<arg name='x' type='f' declared_type='float' index='5'/>
<arg name='dx' type='f' declared_type='float' index='6'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='sphericalRadius:zenith:azimuth:'>
<arg name='r' type='^f' declared_type='float*' index='0'/>
<arg name='zenith' type='^f' declared_type='float*' index='1'/>
<arg name='azimuth' type='^f' declared_type='float*' index='2'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCParallaxNode'>
<method selector='addChild:z:parallaxRatio:positionOffset:'>
<arg name='node' type='@' declared_type='CCNode*' index='0'/>
<arg name='z' type='i' declared_type='NSInteger' index='1'/>
<arg name='c' type='{CGPoint=ff}' declared_type='CGPoint' index='2'/>
<arg name='positionOffset' type='{CGPoint=ff}' declared_type='CGPoint' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parallaxArray'>
<retval type='^{ccArray=II^@}' declared_type='ccArray*'/>
</method>
<method selector='setParallaxArray:'>
<arg name='parallaxArray' type='^{ccArray=II^@}' declared_type='ccArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCParticleBatchNode'>
<method selector='addChild:z:tag:'>
<arg name='child' type='@' declared_type='CCParticleSystem*' index='0'/>
<arg name='z' type='i' declared_type='NSInteger' index='1'/>
<arg name='aTag' type='i' declared_type='NSInteger' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='batchNodeWithFile:'>
<arg name='imageFile' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='batchNodeWithFile:capacity:'>
<arg name='fileImage' type='@' declared_type='NSString*' index='0'/>
<arg name='capacity' type='I' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='batchNodeWithTexture:'>
<arg name='tex' type='@' declared_type='CCTexture2D*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='batchNodeWithTexture:capacity:'>
<arg name='tex' type='@' declared_type='CCTexture2D*' index='0'/>
<arg name='capacity' type='I' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='disableParticle:'>
<arg name='particleIndex' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithFile:capacity:'>
<arg name='fileImage' type='@' declared_type='NSString*' index='0'/>
<arg name='capacity' type='I' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg name='tex' type='@' declared_type='CCTexture2D*' index='0'/>
<arg name='capacity' type='I' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertChild:inAtlasAtIndex:'>
<arg name='pSystem' type='@' declared_type='CCParticleSystem*' index='0'/>
<arg name='index' type='I' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChild:cleanup:'>
<arg name='pSystem' type='@' declared_type='CCParticleSystem*' index='0'/>
<arg name='doCleanUp' type='B' declared_type='BOOL' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureAtlas:'>
<arg name='textureAtlas' type='@' declared_type='CCTextureAtlas*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textureAtlas'>
<retval type='@' declared_type='CCTextureAtlas*'/>
</method>
</class>
<class name='CCParticleSystem'>
<method selector='active'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='angle'>
<retval type='f' declared_type='float'/>
</method>
<method selector='angleVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='atlasIndex'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='autoRemoveOnFinish'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='batchNode'>
<retval type='@' declared_type='CCParticleBatchNode*'/>
</method>
<method selector='blendAdditive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='doesOpacityModifyRGB'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='duration'>
<retval type='f' declared_type='float'/>
</method>
<method selector='emissionRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='emitterMode'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='endColor'>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</method>
<method selector='endColorVar'>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</method>
<method selector='endRadius'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endRadiusVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endSize'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endSizeVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endSpin'>
<retval type='f' declared_type='float'/>
</method>
<method selector='endSpinVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='gravity'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='initWithDictionary:'>
<arg name='dictionary' type='@' declared_type='NSDictionary*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFile:'>
<arg name='plistFile' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTotalParticles:'>
<arg name='numberOfParticles' type='I' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isFull'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='life'>
<retval type='f' declared_type='float'/>
</method>
<method selector='lifeVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='particleCount'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method class_method='true' selector='particleWithFile:'>
<arg name='plistFile' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='posVar'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='positionType'>
<retval type='i' declared_type='tCCPositionType'/>
</method>
<method selector='postStep'>
<retval type='v' declared_type='void'/>
</method>
<method selector='radialAccel'>
<retval type='f' declared_type='float'/>
</method>
<method selector='radialAccelVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='resetSystem'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotatePerSecond'>
<retval type='f' declared_type='float'/>
</method>
<method selector='rotatePerSecondVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setAngle:'>
<arg name='angle' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAngleVar:'>
<arg name='angleVar' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAtlasIndex:'>
<arg name='atlasIndex' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoRemoveOnFinish:'>
<arg name='autoRemoveOnFinish' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBatchNode:'>
<arg name='batchNode' type='@' declared_type='CCParticleBatchNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendAdditive:'>
<arg name='blendAdditive' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDuration:'>
<arg name='duration' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEmissionRate:'>
<arg name='emissionRate' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEmitterMode:'>
<arg name='emitterMode' type='i' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndColor:'>
<arg name='endColor' type='{ccColor4F=ffff}' declared_type='ccColor4F' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndColorVar:'>
<arg name='endColorVar' type='{ccColor4F=ffff}' declared_type='ccColor4F' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndRadius:'>
<arg name='endRadius' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndRadiusVar:'>
<arg name='endRadiusVar' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSize:'>
<arg name='endSize' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSizeVar:'>
<arg name='endSizeVar' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSpin:'>
<arg name='endSpin' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSpinVar:'>
<arg name='endSpinVar' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGravity:'>
<arg name='gravity' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLife:'>
<arg name='life' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLifeVar:'>
<arg name='lifeVar' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacityModifyRGB:'>
<arg name='opacityModifyRGB' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosVar:'>
<arg name='posVar' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositionType:'>
<arg name='positionType' type='i' declared_type='tCCPositionType' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRadialAccel:'>
<arg name='radialAccel' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRadialAccelVar:'>
<arg name='radialAccelVar' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotatePerSecond:'>
<arg name='rotatePerSecond' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotatePerSecondVar:'>
<arg name='rotatePerSecondVar' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourcePosition:'>
<arg name='sourcePosition' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpeed:'>
<arg name='speed' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpeedVar:'>
<arg name='speedVar' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartColor:'>
<arg name='startColor' type='{ccColor4F=ffff}' declared_type='ccColor4F' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartColorVar:'>
<arg name='startColorVar' type='{ccColor4F=ffff}' declared_type='ccColor4F' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartRadius:'>
<arg name='startRadius' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartRadiusVar:'>
<arg name='startRadiusVar' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSize:'>
<arg name='startSize' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSizeVar:'>
<arg name='startSizeVar' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSpin:'>
<arg name='startSpin' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSpinVar:'>
<arg name='startSpinVar' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTangentialAccel:'>
<arg name='tangentialAccel' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTangentialAccelVar:'>
<arg name='tangentialAccelVar' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTotalParticles:'>
<arg name='totalParticles' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourcePosition'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='speed'>
<retval type='f' declared_type='float'/>
</method>
<method selector='speedVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startColor'>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</method>
<method selector='startColorVar'>
<retval type='{ccColor4F=ffff}' declared_type='ccColor4F'/>
</method>
<method selector='startRadius'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startRadiusVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startSize'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startSizeVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startSpin'>
<retval type='f' declared_type='float'/>
</method>
<method selector='startSpinVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='stopSystem'>
<retval type='v' declared_type='void'/>
</method>
<method selector='tangentialAccel'>
<retval type='f' declared_type='float'/>
</method>
<method selector='tangentialAccelVar'>
<retval type='f' declared_type='float'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='totalParticles'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='update:'>
<arg name='dt' type='f' declared_type='ccTime' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateQuadWithParticle:newPosition:'>
<arg name='particle' type='^{sCCParticle={CGPoint=ff}{CGPoint=ff}{ccColor4F=ffff}{ccColor4F=ffff}fffffI(?={?={CGPoint=ff}ff}{?=ffff})}' declared_type='tCCParticle*' index='0'/>
<arg name='pos' type='{CGPoint=ff}' declared_type='CGPoint' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateWithNoTime'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCParticleSystemQuad'>
<method selector='initIndices'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initTexCoordsWithRect:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayFrame:'>
<arg name='spriteFrame' type='@' declared_type='CCSpriteFrame*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:withRect:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCPlace'>
<method class_method='true' selector='actionWithPosition:'>
<arg name='pos' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPosition:'>
<arg name='pos' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCPointArray'>
<method selector='addControlPoint:'>
<arg name='controlPoint' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='arrayWithCapacity:'>
<arg name='capacity' type='I' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='controlPoints'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='getControlPointAtIndex:'>
<arg name='index' type='i' declared_type='NSInteger' index='0'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='initWithCapacity:'>
<arg name='capacity' type='I' declared_type='NSUInteger' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertControlPoint:atIndex:'>
<arg name='controlPoint' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<arg name='index' type='I' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeControlPointAtIndex:'>
<arg name='index' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceControlPoint:atIndex:'>
<arg name='controlPoint' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<arg name='index' type='I' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reverse'>
<retval type='@' declared_type='CCPointArray*'/>
</method>
<method selector='reverseInline'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setControlPoints:'>
<arg name='controlPoints' type='@' declared_type='NSMutableArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCProfiler'>
<method selector='createAndAddTimerWithName:'>
<arg name='timerName' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='CCProfilingTimer*'/>
</method>
<method selector='displayTimers'>
<retval type='v' declared_type='void'/>
</method>
<method selector='releaseAllTimers'>
<retval type='v' declared_type='void'/>
</method>
<method selector='releaseTimer:'>
<arg name='timerName' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedProfiler'>
<retval type='@' declared_type='CCProfiler*'/>
</method>
</class>
<class name='CCProfilingTimer'>
<method selector='reset'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCProgressFromTo'>
<method class_method='true' selector='actionWithDuration:from:to:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='fromPercentage' type='f' declared_type='float' index='1'/>
<arg name='toPercentage' type='f' declared_type='float' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:from:to:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='fromPercentage' type='f' declared_type='float' index='1'/>
<arg name='toPercentage' type='f' declared_type='float' index='2'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCProgressTimer'>
<method selector='barChangeRate'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='initWithSprite:'>
<arg name='sprite' type='@' declared_type='CCSprite*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='midpoint'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='percentage'>
<retval type='f' declared_type='float'/>
</method>
<method class_method='true' selector='progressWithSprite:'>
<arg name='sprite' type='@' declared_type='CCSprite*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='reverseDirection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setBarChangeRate:'>
<arg name='barChangeRate' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMidpoint:'>
<arg name='midpoint' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg name='opacity' type='C' declared_type='GLubyte' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPercentage:'>
<arg name='percentage' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReverseDirection:'>
<arg name='reverseDirection' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSprite:'>
<arg name='sprite' type='@' declared_type='CCSprite*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setType:'>
<arg name='type' type='i' declared_type='CCProgressTimerType' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sprite'>
<retval type='@' declared_type='CCSprite*'/>
</method>
<method selector='type'>
<retval type='i' declared_type='CCProgressTimerType'/>
</method>
<method selector='vertexData'>
<retval type='^{_ccV2F_C4B_T2F={_ccVertex2F=ff}{_ccColor4B=CCCC}{_ccTex2F=ff}}' declared_type='ccV2F_C4B_T2F*'/>
</method>
<method selector='vertexDataCount'>
<retval type='i' declared_type='int'/>
</method>
</class>
<class name='CCProgressTo'>
<method class_method='true' selector='actionWithDuration:percent:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='percent' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:percent:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='percent' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCRenderTexture'>
<method selector='begin'>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginWithClear:g:b:a:'>
<arg name='r' type='f' declared_type='float' index='0'/>
<arg name='g' type='f' declared_type='float' index='1'/>
<arg name='b' type='f' declared_type='float' index='2'/>
<arg name='a' type='f' declared_type='float' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginWithClear:g:b:a:depth:'>
<arg name='r' type='f' declared_type='float' index='0'/>
<arg name='g' type='f' declared_type='float' index='1'/>
<arg name='b' type='f' declared_type='float' index='2'/>
<arg name='a' type='f' declared_type='float' index='3'/>
<arg name='depthValue' type='f' declared_type='float' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginWithClear:g:b:a:depth:stencil:'>
<arg name='r' type='f' declared_type='float' index='0'/>
<arg name='g' type='f' declared_type='float' index='1'/>
<arg name='b' type='f' declared_type='float' index='2'/>
<arg name='a' type='f' declared_type='float' index='3'/>
<arg name='depthValue' type='f' declared_type='float' index='4'/>
<arg name='stencilValue' type='i' declared_type='int' index='5'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clear:g:b:a:'>
<arg name='r' type='f' declared_type='float' index='0'/>
<arg name='g' type='f' declared_type='float' index='1'/>
<arg name='b' type='f' declared_type='float' index='2'/>
<arg name='a' type='f' declared_type='float' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearDepth:'>
<arg name='depthValue' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearStencil:'>
<arg name='stencilValue' type='i' declared_type='int' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='end'>
<retval type='v' declared_type='void'/>
</method>
<method selector='getUIImage'>
<retval type='@' declared_type='id'/>
</method>
<method selector='getUIImageFromBuffer'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithWidth:height:pixelFormat:'>
<arg name='w' type='i' declared_type='int' index='0'/>
<arg name='h' type='i' declared_type='int' index='1'/>
<arg name='format' type='i' declared_type='CCTexture2DPixelFormat' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithWidth:height:pixelFormat:depthStencilFormat:'>
<arg name='w' type='i' declared_type='int' index='0'/>
<arg name='h' type='i' declared_type='int' index='1'/>
<arg name='format' type='i' declared_type='CCTexture2DPixelFormat' index='2'/>
<arg name='depthStencilFormat' type='I' declared_type='GLuint' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='newCGImage'>
<retval type='^{CGImage=}' declared_type='CGImageRef'/>
</method>
<method class_method='true' selector='renderTextureWithWidth:height:'>
<arg name='w' type='i' declared_type='int' index='0'/>
<arg name='h' type='i' declared_type='int' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='renderTextureWithWidth:height:pixelFormat:'>
<arg name='w' type='i' declared_type='int' index='0'/>
<arg name='h' type='i' declared_type='int' index='1'/>
<arg name='format' type='i' declared_type='CCTexture2DPixelFormat' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='renderTextureWithWidth:height:pixelFormat:depthStencilFormat:'>
<arg name='w' type='i' declared_type='int' index='0'/>
<arg name='h' type='i' declared_type='int' index='1'/>
<arg name='format' type='i' declared_type='CCTexture2DPixelFormat' index='2'/>
<arg name='depthStencilFormat' type='I' declared_type='GLuint' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='saveBuffer:'>
<arg name='name' type='@' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='saveBuffer:format:'>
<arg name='name' type='@' declared_type='NSString*' index='0'/>
<arg name='format' type='i' declared_type='int' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='saveToFile:'>
<arg name='name' type='@' declared_type='NSString*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='saveToFile:format:'>
<arg name='name' type='@' declared_type='NSString*' index='0'/>
<arg name='format' type='i' declared_type='tCCImageFormat' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setSprite:'>
<arg name='sprite' type='@' declared_type='CCSprite*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sprite'>
<retval type='@' declared_type='CCSprite*'/>
</method>
</class>
<class name='CCRepeat'>
<method class_method='true' selector='actionWithAction:times:'>
<arg name='action' type='@' declared_type='CCFiniteTimeAction*' index='0'/>
<arg name='times' type='I' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:times:'>
<arg name='action' type='@' declared_type='CCFiniteTimeAction*' index='0'/>
<arg name='times' type='I' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='innerAction'>
<retval type='@' declared_type='CCFiniteTimeAction*'/>
</method>
<method selector='setInnerAction:'>
<arg name='innerAction' type='@' declared_type='CCFiniteTimeAction*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCRepeatForever'>
<method class_method='true' selector='actionWithAction:'>
<arg name='action' type='@' declared_type='CCActionInterval*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:'>
<arg name='action' type='@' declared_type='CCActionInterval*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='innerAction'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='setInnerAction:'>
<arg name='innerAction' type='@' declared_type='CCActionInterval*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCReuseGrid'>
<method class_method='true' selector='actionWithTimes:'>
<arg name='times' type='i' declared_type='int' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTimes:'>
<arg name='times' type='i' declared_type='int' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCReverseTime'>
<method class_method='true' selector='actionWithAction:'>
<arg name='action' type='@' declared_type='CCFiniteTimeAction*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:'>
<arg name='action' type='@' declared_type='CCFiniteTimeAction*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCRipple3D'>
<method class_method='true' selector='actionWithPosition:radius:waves:amplitude:grid:duration:'>
<arg name='pos' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<arg name='r' type='f' declared_type='float' index='1'/>
<arg name='wav' type='i' declared_type='int' index='2'/>
<arg name='amp' type='f' declared_type='float' index='3'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='4'/>
<arg name='d' type='f' declared_type='ccTime' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithPosition:radius:waves:amplitude:grid:duration:'>
<arg name='pos' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<arg name='r' type='f' declared_type='float' index='1'/>
<arg name='wav' type='i' declared_type='int' index='2'/>
<arg name='amp' type='f' declared_type='float' index='3'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='4'/>
<arg name='d' type='f' declared_type='ccTime' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setAmplitude:'>
<arg name='amplitude' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg name='amplitudeRate' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg name='position' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCRotateBy'>
<method class_method='true' selector='actionWithDuration:angle:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='deltaAngle' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:angle:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='deltaAngle' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCRotateTo'>
<method class_method='true' selector='actionWithDuration:angle:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='angle' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:angle:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='angle' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCScaleBy'>
<method selector='startWithTarget:'>
<arg name='aTarget' type='@' declared_type='CCNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCScaleTo'>
<method class_method='true' selector='actionWithDuration:scale:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='s' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actionWithDuration:scaleX:scaleY:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='sx' type='f' declared_type='float' index='1'/>
<arg name='sy' type='f' declared_type='float' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:scale:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='s' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:scaleX:scaleY:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='sx' type='f' declared_type='float' index='1'/>
<arg name='sy' type='f' declared_type='float' index='2'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCScene'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCScheduler'>
<method selector='isTargetPaused:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pauseAllTargets'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='pauseAllTargetsWithMinPriority:'>
<arg name='minPriority' type='i' declared_type='NSInteger' index='0'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='pauseTarget:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeTarget:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeTargets:'>
<arg name='targetsToResume' type='@' declared_type='NSSet*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleSelector:forTarget:interval:paused:'>
<arg name='selector' type=':' declared_type='SEL' index='0'/>
<arg name='target' type='@' declared_type='id' index='1'/>
<arg name='interval' type='f' declared_type='ccTime' index='2'/>
<arg name='paused' type='B' declared_type='BOOL' index='3'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleSelector:forTarget:interval:paused:repeat:delay:'>
<arg name='selector' type=':' declared_type='SEL' index='0'/>
<arg name='target' type='@' declared_type='id' index='1'/>
<arg name='interval' type='f' declared_type='ccTime' index='2'/>
<arg name='paused' type='B' declared_type='BOOL' index='3'/>
<arg name='repeat' type='I' declared_type='uint' index='4'/>
<arg name='delay' type='f' declared_type='ccTime' index='5'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleUpdateForTarget:priority:paused:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<arg name='priority' type='i' declared_type='NSInteger' index='1'/>
<arg name='paused' type='B' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeScale:'>
<arg name='timeScale' type='f' declared_type='ccTime' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedScheduler'>
<retval type='@' declared_type='CCScheduler*'/>
</method>
<method selector='timeScale'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='unscheduleAllSelectors'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleAllSelectorsForTarget:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleAllSelectorsWithMinPriority:'>
<arg name='minPriority' type='i' declared_type='NSInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleSelector:forTarget:'>
<arg name='selector' type=':' declared_type='SEL' index='0'/>
<arg name='target' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleUpdateForTarget:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='update:'>
<arg name='dt' type='f' declared_type='ccTime' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCSequence'>
<method class_method='true' selector='actionOne:two:'>
<arg name='actionOne' type='@' declared_type='CCFiniteTimeAction*' index='0'/>
<arg name='actionTwo' type='@' declared_type='CCFiniteTimeAction*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actionWithArray:'>
<arg name='arrayOfActions' type='@' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' class_method='true' variadic='true' selector='actions:'>
<arg name='action1' type='@' declared_type='CCFiniteTimeAction*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actions:vaList:'>
<arg name='action1' type='@' declared_type='CCFiniteTimeAction*' index='0'/>
<arg name='args' type='*' declared_type='va_list' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actionsWithArray:'>
<arg name='actions' type='@' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initOne:two:'>
<arg name='actionOne' type='@' declared_type='CCFiniteTimeAction*' index='0'/>
<arg name='actionTwo' type='@' declared_type='CCFiniteTimeAction*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCShaderCache'>
<method selector='addProgram:forKey:'>
<arg name='program' type='@' declared_type='CCGLProgram*' index='0'/>
<arg name='key' type='@' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='loadDefaultShaders'>
<retval type='v' declared_type='void'/>
</method>
<method selector='programForKey:'>
<arg name='key' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='CCGLProgram*'/>
</method>
<method class_method='true' selector='purgeSharedShaderCache'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedShaderCache'>
<retval type='@' declared_type='CCShaderCache*'/>
</method>
</class>
<class name='CCShaky3D'>
<method class_method='true' selector='actionWithRange:shakeZ:grid:duration:'>
<arg name='range' type='i' declared_type='int' index='0'/>
<arg name='shakeZ' type='B' declared_type='BOOL' index='1'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='2'/>
<arg name='d' type='f' declared_type='ccTime' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRange:shakeZ:grid:duration:'>
<arg name='range' type='i' declared_type='int' index='0'/>
<arg name='shakeZ' type='B' declared_type='BOOL' index='1'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='2'/>
<arg name='d' type='f' declared_type='ccTime' index='3'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCShakyTiles3D'>
<method class_method='true' selector='actionWithRange:shakeZ:grid:duration:'>
<arg name='range' type='i' declared_type='int' index='0'/>
<arg name='shakeZ' type='B' declared_type='BOOL' index='1'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='2'/>
<arg name='d' type='f' declared_type='ccTime' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRange:shakeZ:grid:duration:'>
<arg name='range' type='i' declared_type='int' index='0'/>
<arg name='shakeZ' type='B' declared_type='BOOL' index='1'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='2'/>
<arg name='d' type='f' declared_type='ccTime' index='3'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCShatteredTiles3D'>
<method class_method='true' selector='actionWithRange:shatterZ:grid:duration:'>
<arg name='range' type='i' declared_type='int' index='0'/>
<arg name='shatterZ' type='B' declared_type='BOOL' index='1'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='2'/>
<arg name='d' type='f' declared_type='ccTime' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRange:shatterZ:grid:duration:'>
<arg name='range' type='i' declared_type='int' index='0'/>
<arg name='shatterZ' type='B' declared_type='BOOL' index='1'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='2'/>
<arg name='d' type='f' declared_type='ccTime' index='3'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCShow'>
<method selector='update:'>
<arg name='time' type='f' declared_type='ccTime' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCShuffleTiles'>
<method class_method='true' selector='actionWithSeed:grid:duration:'>
<arg name='s' type='i' declared_type='int' index='0'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='1'/>
<arg name='d' type='f' declared_type='ccTime' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSeed:grid:duration:'>
<arg name='s' type='i' declared_type='int' index='0'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='1'/>
<arg name='d' type='f' declared_type='ccTime' index='2'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSkewBy'>
<method selector='initWithDuration:skewX:skewY:'>
<arg name='t' type='f' declared_type='ccTime' index='0'/>
<arg name='sx' type='f' declared_type='float' index='1'/>
<arg name='sy' type='f' declared_type='float' index='2'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSkewTo'>
<method class_method='true' selector='actionWithDuration:skewX:skewY:'>
<arg name='t' type='f' declared_type='ccTime' index='0'/>
<arg name='sx' type='f' declared_type='float' index='1'/>
<arg name='sy' type='f' declared_type='float' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:skewX:skewY:'>
<arg name='t' type='f' declared_type='ccTime' index='0'/>
<arg name='sx' type='f' declared_type='float' index='1'/>
<arg name='sy' type='f' declared_type='float' index='2'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSpawn'>
<method class_method='true' selector='actionOne:two:'>
<arg name='one' type='@' declared_type='CCFiniteTimeAction*' index='0'/>
<arg name='two' type='@' declared_type='CCFiniteTimeAction*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actionWithArray:'>
<arg name='arrayOfActions' type='@' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method sentinel='0' class_method='true' variadic='true' selector='actions:'>
<arg name='action1' type='@' declared_type='CCFiniteTimeAction*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actions:vaList:'>
<arg name='action1' type='@' declared_type='CCFiniteTimeAction*' index='0'/>
<arg name='args' type='*' declared_type='va_list' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='actionsWithArray:'>
<arg name='actions' type='@' declared_type='NSArray*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initOne:two:'>
<arg name='one' type='@' declared_type='CCFiniteTimeAction*' index='0'/>
<arg name='two' type='@' declared_type='CCFiniteTimeAction*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSpeed'>
<method class_method='true' selector='actionWithAction:speed:'>
<arg name='action' type='@' declared_type='CCActionInterval*' index='0'/>
<arg name='value' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAction:speed:'>
<arg name='action' type='@' declared_type='CCActionInterval*' index='0'/>
<arg name='value' type='f' declared_type='float' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='innerAction'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='setInnerAction:'>
<arg name='innerAction' type='@' declared_type='CCActionInterval*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpeed:'>
<arg name='speed' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='speed'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='CCSplitCols'>
<method class_method='true' selector='actionWithCols:duration:'>
<arg name='cols' type='i' declared_type='int' index='0'/>
<arg name='duration' type='f' declared_type='ccTime' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCols:duration:'>
<arg name='cols' type='i' declared_type='int' index='0'/>
<arg name='duration' type='f' declared_type='ccTime' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSplitRows'>
<method class_method='true' selector='actionWithRows:duration:'>
<arg name='rows' type='i' declared_type='int' index='0'/>
<arg name='duration' type='f' declared_type='ccTime' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRows:duration:'>
<arg name='rows' type='i' declared_type='int' index='0'/>
<arg name='duration' type='f' declared_type='ccTime' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCSprite'>
<method selector='atlasIndex'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='batchNode'>
<retval type='@' declared_type='CCSpriteBatchNode*'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='dirty'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='displayFrame'>
<retval type='@' declared_type='CCSpriteFrame*'/>
</method>
<method selector='displayedFrame'>
<retval type='@' declared_type='CCSpriteFrame*'/>
</method>
<method selector='flipX'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='flipY'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithBatchNode:rect:'>
<arg name='node' type='@' declared_type='CCSpriteBatchNode*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCGImage:key:'>
<arg name='image' type='^{CGImage=}' declared_type='CGImageRef' index='0'/>
<arg name='key' type='@' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFile:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFile:rect:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSpriteFrame:'>
<arg name='spriteFrame' type='@' declared_type='CCSpriteFrame*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSpriteFrameName:'>
<arg name='spriteFrameName' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:rect:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:rect:rotated:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<arg name='rotated' type='B' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isFrameDisplayed:'>
<arg name='frame' type='@' declared_type='CCSpriteFrame*' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='offsetPosition'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='quad'>
<retval type='{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' declared_type='ccV3F_C4B_T2F_Quad'/>
</method>
<method selector='setAtlasIndex:'>
<arg name='atlasIndex' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBatchNode:'>
<arg name='batchNode' type='@' declared_type='CCSpriteBatchNode*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDirty:'>
<arg name='dirty' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayFrame:'>
<arg name='newFrame' type='@' declared_type='CCSpriteFrame*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayFrameWithAnimationName:index:'>
<arg name='animationName' type='@' declared_type='NSString*' index='0'/>
<arg name='frameIndex' type='i' declared_type='int' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFlipX:'>
<arg name='flipX' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFlipY:'>
<arg name='flipY' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg name='opacity' type='C' declared_type='GLubyte' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureAtlas:'>
<arg name='textureAtlas' type='@' declared_type='CCTextureAtlas*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureRect:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureRect:rotated:untrimmedSize:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0'/>
<arg name='rotated' type='B' declared_type='BOOL' index='1'/>
<arg name='size' type='{CGSize=ff}' declared_type='CGSize' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVertexRect:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='spriteWithBatchNode:rect:'>
<arg name='node' type='@' declared_type='CCSpriteBatchNode*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='spriteWithCGImage:key:'>
<arg name='image' type='^{CGImage=}' declared_type='CGImageRef' index='0'/>
<arg name='key' type='@' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='spriteWithFile:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='spriteWithFile:rect:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='spriteWithSpriteFrame:'>
<arg name='spriteFrame' type='@' declared_type='CCSpriteFrame*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='spriteWithSpriteFrameName:'>
<arg name='spriteFrameName' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='spriteWithTexture:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='spriteWithTexture:rect:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='textureAtlas'>
<retval type='@' declared_type='CCTextureAtlas*'/>
</method>
<method selector='textureRect'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='textureRectRotated'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='updateTransform'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCSpriteBatchNode'>
<method selector='addQuadFromSprite:quadIndex:'>
<arg name='sprite' type='@' declared_type='CCSprite*' index='0'/>
<arg name='index' type='I' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteWithoutQuad:z:tag:'>
<arg name='child' type='@' declared_type='CCSprite*' index='0'/>
<arg name='z' type='I' declared_type='NSUInteger' index='1'/>
<arg name='aTag' type='i' declared_type='NSInteger' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='appendChild:'>
<arg name='sprite' type='@' declared_type='CCSprite*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='atlasIndexForChild:atZ:'>
<arg name='sprite' type='@' declared_type='CCSprite*' index='0'/>
<arg name='z' type='i' declared_type='NSInteger' index='1'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method class_method='true' selector='batchNodeWithFile:'>
<arg name='fileImage' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='batchNodeWithFile:capacity:'>
<arg name='fileImage' type='@' declared_type='NSString*' index='0'/>
<arg name='capacity' type='I' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='batchNodeWithTexture:'>
<arg name='tex' type='@' declared_type='CCTexture2D*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='batchNodeWithTexture:capacity:'>
<arg name='tex' type='@' declared_type='CCTexture2D*' index='0'/>
<arg name='capacity' type='I' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='descendants'>
<retval type='@' declared_type='CCArray*'/>
</method>
<method selector='increaseAtlasCapacity'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithFile:capacity:'>
<arg name='fileImage' type='@' declared_type='NSString*' index='0'/>
<arg name='capacity' type='I' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg name='tex' type='@' declared_type='CCTexture2D*' index='0'/>
<arg name='capacity' type='I' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertChild:inAtlasAtIndex:'>
<arg name='child' type='@' declared_type='CCSprite*' index='0'/>
<arg name='index' type='I' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rebuildIndexInOrder:atlasIndex:'>
<arg name='parent' type='@' declared_type='CCSprite*' index='0'/>
<arg name='index' type='I' declared_type='NSUInteger' index='1'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='removeChild:cleanup:'>
<arg name='sprite' type='@' declared_type='CCSprite*' index='0'/>
<arg name='doCleanup' type='B' declared_type='BOOL' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChildAtIndex:cleanup:'>
<arg name='index' type='I' declared_type='NSUInteger' index='0'/>
<arg name='doCleanup' type='B' declared_type='BOOL' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFromAtlas:'>
<arg name='sprite' type='@' declared_type='CCSprite*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reorderBatch:'>
<arg name='reorder' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBlendFunc:'>
<arg name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureAtlas:'>
<arg name='textureAtlas' type='@' declared_type='CCTextureAtlas*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textureAtlas'>
<retval type='@' declared_type='CCTextureAtlas*'/>
</method>
</class>
<class name='CCSpriteFrame'>
<method class_method='true' selector='frameWithTexture:rect:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='frameWithTexture:rectInPixels:rotated:offset:originalSize:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<arg name='rotated' type='B' declared_type='BOOL' index='2'/>
<arg name='offset' type='{CGPoint=ff}' declared_type='CGPoint' index='3'/>
<arg name='originalSize' type='{CGSize=ff}' declared_type='CGSize' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='frameWithTextureFilename:rect:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='frameWithTextureFilename:rectInPixels:rotated:offset:originalSize:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<arg name='rotated' type='B' declared_type='BOOL' index='2'/>
<arg name='offset' type='{CGPoint=ff}' declared_type='CGPoint' index='3'/>
<arg name='originalSize' type='{CGSize=ff}' declared_type='CGSize' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:rect:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:rectInPixels:rotated:offset:originalSize:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<arg name='rotated' type='B' declared_type='BOOL' index='2'/>
<arg name='offset' type='{CGPoint=ff}' declared_type='CGPoint' index='3'/>
<arg name='originalSize' type='{CGSize=ff}' declared_type='CGSize' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTextureFilename:rect:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTextureFilename:rectInPixels:rotated:offset:originalSize:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='1'/>
<arg name='rotated' type='B' declared_type='BOOL' index='2'/>
<arg name='offset' type='{CGPoint=ff}' declared_type='CGPoint' index='3'/>
<arg name='originalSize' type='{CGSize=ff}' declared_type='CGSize' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='offset'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='offsetInPixels'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='originalSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='originalSizeInPixels'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='rect'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='rectInPixels'>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='rotated'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setOffset:'>
<arg name='offset' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOffsetInPixels:'>
<arg name='offsetInPixels' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOriginalSize:'>
<arg name='originalSize' type='{CGSize=ff}' declared_type='CGSize' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOriginalSizeInPixels:'>
<arg name='originalSizeInPixels' type='{CGSize=ff}' declared_type='CGSize' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRect:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRectInPixels:'>
<arg name='rectInPixels' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotated:'>
<arg name='rotated' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='textureFilename'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='CCSpriteFrameCache'>
<method selector='addSpriteFrame:name:'>
<arg name='frame' type='@' declared_type='CCSpriteFrame*' index='0'/>
<arg name='frameName' type='@' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFramesWithDictionary:textureFile:'>
<arg name='dictionary' type='@' declared_type='NSDictionary*' index='0'/>
<arg name='filename' type='@' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFramesWithFile:'>
<arg name='plist' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFramesWithFile:texture:'>
<arg name='plist' type='@' declared_type='NSString*' index='0'/>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFramesWithFile:textureFile:'>
<arg name='plist' type='@' declared_type='NSString*' index='0'/>
<arg name='filename' type='@' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSpriteFramesWithFile:textureFilename:'>
<arg name='plist' type='@' declared_type='NSString*' index='0'/>
<arg name='filename' type='@' declared_type='NSString*' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='purgeSharedSpriteFrameCache'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFrameByName:'>
<arg name='name' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFrames'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFramesFromFile:'>
<arg name='plist' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSpriteFramesFromTexture:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeUnusedSpriteFrames'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedSpriteFrameCache'>
<retval type='@' declared_type='CCSpriteFrameCache*'/>
</method>
<method selector='spriteFrameByName:'>
<arg name='name' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='CCSpriteFrame*'/>
</method>
</class>
<class name='CCTMXLayer'>
<method selector='addChild:z:tag:'>
<arg name='node' type='@' declared_type='CCNode*' index='0'/>
<arg name='z' type='i' declared_type='NSInteger' index='1'/>
<arg name='tag' type='i' declared_type='NSInteger' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithTilesetInfo:layerInfo:mapInfo:'>
<arg name='tilesetInfo' type='@' declared_type='CCTMXTilesetInfo*' index='0'/>
<arg name='layerInfo' type='@' declared_type='CCTMXLayerInfo*' index='1'/>
<arg name='mapInfo' type='@' declared_type='CCTMXMapInfo*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='layerOrientation'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='layerSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method class_method='true' selector='layerWithTilesetInfo:layerInfo:mapInfo:'>
<arg name='tilesetInfo' type='@' declared_type='CCTMXTilesetInfo*' index='0'/>
<arg name='layerInfo' type='@' declared_type='CCTMXLayerInfo*' index='1'/>
<arg name='mapInfo' type='@' declared_type='CCTMXMapInfo*' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mapTileSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='positionAt:'>
<arg name='tileCoordinate' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='propertyNamed:'>
<arg name='propertyName' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='releaseMap'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTileAt:'>
<arg name='tileCoordinate' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayerName:'>
<arg name='layerName' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayerOrientation:'>
<arg name='layerOrientation' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayerSize:'>
<arg name='layerSize' type='{CGSize=ff}' declared_type='CGSize' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapTileSize:'>
<arg name='mapTileSize' type='{CGSize=ff}' declared_type='CGSize' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg name='properties' type='@' declared_type='NSMutableArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileGID:at:'>
<arg name='gid' type='I' declared_type='uint32_t' index='0'/>
<arg name='tileCoordinate' type='{CGPoint=ff}' declared_type='CGPoint' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileGID:at:withFlags:'>
<arg name='gid' type='I' declared_type='uint32_t' index='0'/>
<arg name='pos' type='{CGPoint=ff}' declared_type='CGPoint' index='1'/>
<arg name='flags' type='i' declared_type='ccTMXTileFlags' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTiles:'>
<arg name='tiles' type='^I' declared_type='uint32_t*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileset:'>
<arg name='tileset' type='@' declared_type='CCTMXTilesetInfo*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setupTiles'>
<retval type='v' declared_type='void'/>
</method>
<method selector='tileAt:'>
<arg name='tileCoordinate' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='@' declared_type='CCSprite*'/>
</method>
<method selector='tileGIDAt:'>
<arg name='tileCoordinate' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='I' declared_type='uint32_t'/>
</method>
<method selector='tileGIDAt:withFlags:'>
<arg name='pos' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<arg name='flags' type='^i' declared_type='ccTMXTileFlags*' index='1'/>
<retval type='I' declared_type='uint32_t'/>
</method>
<method selector='tiles'>
<retval type='^I' declared_type='uint32_t*'/>
</method>
<method selector='tileset'>
<retval type='@' declared_type='CCTMXTilesetInfo*'/>
</method>
</class>
<class name='CCTMXLayerInfo'>
<method selector='layerSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='maxGID'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='minGID'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='offset'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='unsigned char'/>
</method>
<method selector='ownTiles'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='setLayerSize:'>
<arg name='layerSize' type='{CGSize=ff}' declared_type='CGSize' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxGID:'>
<arg name='maxGID' type='I' declared_type='unsigned int' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinGID:'>
<arg name='minGID' type='I' declared_type='unsigned int' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setName:'>
<arg name='name' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOffset:'>
<arg name='offset' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg name='opacity' type='C' declared_type='unsigned char' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOwnTiles:'>
<arg name='ownTiles' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg name='properties' type='@' declared_type='NSMutableDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTiles:'>
<arg name='tiles' type='^I' declared_type='unsigned int*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVisible:'>
<arg name='visible' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tiles'>
<retval type='^I' declared_type='unsigned int*'/>
</method>
<method selector='visible'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CCTMXMapInfo'>
<method selector='filename'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='formatWithTMXFile:'>
<arg name='tmxFile' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='formatWithXML:resourcePath:'>
<arg name='tmxString' type='@' declared_type='NSString*' index='0'/>
<arg name='resourcePath' type='@' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTMXFile:'>
<arg name='tmxFile' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithXML:resourcePath:'>
<arg name='tmxString' type='@' declared_type='NSString*' index='0'/>
<arg name='resourcePath' type='@' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layers'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='mapSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='objectGroups'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='orientation'>
<retval type='i' declared_type='int'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='resources'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setFilename:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayers:'>
<arg name='layers' type='@' declared_type='NSMutableArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapSize:'>
<arg name='mapSize' type='{CGSize=ff}' declared_type='CGSize' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectGroups:'>
<arg name='objectGroups' type='@' declared_type='NSMutableArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOrientation:'>
<arg name='orientation' type='i' declared_type='int' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg name='properties' type='@' declared_type='NSMutableDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResources:'>
<arg name='resources' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileProperties:'>
<arg name='tileProperties' type='@' declared_type='NSMutableDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileSize:'>
<arg name='tileSize' type='{CGSize=ff}' declared_type='CGSize' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTilesets:'>
<arg name='tilesets' type='@' declared_type='NSMutableArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tileProperties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='tileSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='tilesets'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
</class>
<class name='CCTMXObjectGroup'>
<method selector='groupName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='objectNamed:'>
<arg name='objectName' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='objects'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='positionOffset'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='propertyNamed:'>
<arg name='propertyName' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setGroupName:'>
<arg name='groupName' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjects:'>
<arg name='objects' type='@' declared_type='NSMutableArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositionOffset:'>
<arg name='positionOffset' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg name='properties' type='@' declared_type='NSMutableDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTMXTiledMap'>
<method selector='initWithTMXFile:'>
<arg name='tmxFile' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithXML:resourcePath:'>
<arg name='tmxString' type='@' declared_type='NSString*' index='0'/>
<arg name='resourcePath' type='@' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='layerNamed:'>
<arg name='layerName' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='CCTMXLayer*'/>
</method>
<method selector='mapOrientation'>
<retval type='i' declared_type='int'/>
</method>
<method selector='mapSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='objectGroupNamed:'>
<arg name='groupName' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='CCTMXObjectGroup*'/>
</method>
<method selector='objectGroups'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='propertiesForGID:'>
<arg name='GID' type='I' declared_type='unsigned int' index='0'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='propertyNamed:'>
<arg name='propertyName' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setObjectGroups:'>
<arg name='objectGroups' type='@' declared_type='NSMutableArray*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperties:'>
<arg name='properties' type='@' declared_type='NSMutableDictionary*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tileSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method class_method='true' selector='tiledMapWithTMXFile:'>
<arg name='tmxFile' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='tiledMapWithXML:resourcePath:'>
<arg name='tmxString' type='@' declared_type='NSString*' index='0'/>
<arg name='resourcePath' type='@' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTMXTilesetInfo'>
<method selector='firstGid'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='imageSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='margin'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='rectForGID:'>
<arg name='gid' type='I' declared_type='unsigned int' index='0'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='setFirstGid:'>
<arg name='firstGid' type='I' declared_type='unsigned int' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageSize:'>
<arg name='imageSize' type='{CGSize=ff}' declared_type='CGSize' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMargin:'>
<arg name='margin' type='I' declared_type='unsigned int' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setName:'>
<arg name='name' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourceImage:'>
<arg name='sourceImage' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpacing:'>
<arg name='spacing' type='I' declared_type='unsigned int' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileSize:'>
<arg name='tileSize' type='{CGSize=ff}' declared_type='CGSize' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourceImage'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='spacing'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='tileSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='CCTargetedAction'>
<method class_method='true' selector='actionWithTarget:action:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<arg name='action' type='@' declared_type='CCFiniteTimeAction*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='forcedTarget'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:action:'>
<arg name='target' type='@' declared_type='id' index='0'/>
<arg name='action' type='@' declared_type='CCFiniteTimeAction*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setForcedTarget:'>
<arg name='forcedTarget' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTargetedTouchHandler'>
<method selector='claimedTouches'>
<retval type='@' declared_type='NSMutableSet*'/>
</method>
<method class_method='true' selector='handlerWithDelegate:priority:swallowsTouches:'>
<arg name='aDelegate' type='@' declared_type='id' index='0'/>
<arg name='priority' type='i' declared_type='int' index='1'/>
<arg name='swallowsTouches' type='B' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDelegate:priority:swallowsTouches:'>
<arg name='aDelegate' type='@' declared_type='id' index='0'/>
<arg name='priority' type='i' declared_type='int' index='1'/>
<arg name='swallowsTouches' type='B' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setSwallowsTouches:'>
<arg name='swallowsTouches' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='swallowsTouches'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CCTexture2D'>
<method class_method='true' selector='PVRImagesHavePremultipliedAlpha:'>
<arg name='haveAlphaPremultiplied' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='bitsPerPixelForFormat'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method class_method='true' selector='bitsPerPixelForFormat:'>
<arg name='format' type='i' declared_type='CCTexture2DPixelFormat' index='0'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='contentSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='contentSizeInPixels'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method class_method='true' selector='defaultAlphaPixelFormat'>
<retval type='i' declared_type='CCTexture2DPixelFormat'/>
</method>
<method selector='drawAtPoint:'>
<arg name='point' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawInRect:'>
<arg name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='generateMipmap'>
<retval type='v' declared_type='void'/>
</method>
<method selector='hasPremultipliedAlpha'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithCGImage:resolutionType:'>
<arg name='cgImage' type='^{CGImage=}' declared_type='CGImageRef' index='0'/>
<arg name='resolution' type='i' declared_type='ccResolutionType' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:pixelFormat:pixelsWide:pixelsHigh:contentSize:'>
<arg name='data' type='^v' const='true' declared_type='void*' index='0'/>
<arg name='pixelFormat' type='i' declared_type='CCTexture2DPixelFormat' index='1'/>
<arg name='width' type='I' declared_type='NSUInteger' index='2'/>
<arg name='height' type='I' declared_type='NSUInteger' index='3'/>
<arg name='size' type='{CGSize=ff}' declared_type='CGSize' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPVRFile:'>
<arg name='file' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:alignment:fontName:fontSize:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='dimensions' type='{CGSize=ff}' declared_type='CGSize' index='1'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='2'/>
<arg name='name' type='@' declared_type='NSString*' index='3'/>
<arg name='size' type='f' declared_type='CGFloat' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:alignment:lineBreakMode:fontName:fontSize:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='dimensions' type='{CGSize=ff}' declared_type='CGSize' index='1'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='2'/>
<arg name='lineBreakMode' type='i' declared_type='CCLineBreakMode' index='3'/>
<arg name='name' type='@' declared_type='NSString*' index='4'/>
<arg name='size' type='f' declared_type='CGFloat' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:fontName:fontSize:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='dimensions' type='{CGSize=ff}' declared_type='CGSize' index='1'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='2'/>
<arg name='vertAlignment' type='i' declared_type='CCVerticalTextAlignment' index='3'/>
<arg name='name' type='@' declared_type='NSString*' index='4'/>
<arg name='size' type='f' declared_type='CGFloat' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:lineBreakMode:fontName:fontSize:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='dimensions' type='{CGSize=ff}' declared_type='CGSize' index='1'/>
<arg name='alignment' type='i' declared_type='CCTextAlignment' index='2'/>
<arg name='vertAlignment' type='i' declared_type='CCVerticalTextAlignment' index='3'/>
<arg name='lineBreakMode' type='i' declared_type='CCLineBreakMode' index='4'/>
<arg name='name' type='@' declared_type='NSString*' index='5'/>
<arg name='size' type='f' declared_type='CGFloat' index='6'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:fontName:fontSize:'>
<arg name='string' type='@' declared_type='NSString*' index='0'/>
<arg name='name' type='@' declared_type='NSString*' index='1'/>
<arg name='size' type='f' declared_type='CGFloat' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='keepData:length:'>
<arg name='data' type='^v' declared_type='void*' index='0'/>
<arg name='length' type='I' declared_type='NSUInteger' index='1'/>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='maxS'>
<retval type='f' declared_type='GLfloat'/>
</method>
<method selector='maxT'>
<retval type='f' declared_type='GLfloat'/>
</method>
<method selector='name'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='pixelFormat'>
<retval type='i' declared_type='CCTexture2DPixelFormat'/>
</method>
<method selector='pixelsHigh'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='pixelsWide'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='releaseData:'>
<arg name='data' type='^v' declared_type='void*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resolutionType'>
<retval type='i' declared_type='ccResolutionType'/>
</method>
<method selector='setAliasTexParameters'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAntiAliasTexParameters'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setDefaultAlphaPixelFormat:'>
<arg name='format' type='i' declared_type='CCTexture2DPixelFormat' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxS:'>
<arg name='maxS' type='f' declared_type='GLfloat' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxT:'>
<arg name='maxT' type='f' declared_type='GLfloat' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResolutionType:'>
<arg name='resolutionType' type='i' declared_type='ccResolutionType' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShaderProgram:'>
<arg name='shaderProgram' type='@' declared_type='CCGLProgram*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexParameters:'>
<arg name='texParams' type='^{_ccTexParams=IIII}' declared_type='ccTexParams*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shaderProgram'>
<retval type='@' declared_type='CCGLProgram*'/>
</method>
<method selector='stringForFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='CCTextureAtlas'>
<method selector='capacity'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='drawNumberOfQuads:'>
<arg name='n' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawNumberOfQuads:fromIndex:'>
<arg name='n' type='I' declared_type='NSUInteger' index='0'/>
<arg name='start' type='I' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawQuads'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillWithEmptyQuadsFromIndex:amount:'>
<arg name='index' type='I' declared_type='NSUInteger' index='0'/>
<arg name='amount' type='I' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='increaseTotalQuadsWith:'>
<arg name='amount' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithFile:capacity:'>
<arg name='file' type='@' declared_type='NSString*' index='0'/>
<arg name='capacity' type='I' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg name='tex' type='@' declared_type='CCTexture2D*' index='0'/>
<arg name='capacity' type='I' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertQuad:atIndex:'>
<arg name='quad' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' declared_type='ccV3F_C4B_T2F_Quad*' index='0'/>
<arg name='index' type='I' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertQuadFromIndex:atIndex:'>
<arg name='fromIndex' type='I' declared_type='NSUInteger' index='0'/>
<arg name='newIndex' type='I' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertQuads:atIndex:amount:'>
<arg name='quads' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' declared_type='ccV3F_C4B_T2F_Quad*' index='0'/>
<arg name='index' type='I' declared_type='NSUInteger' index='1'/>
<arg name='amount' type='I' declared_type='NSUInteger' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveQuadsFromIndex:amount:atIndex:'>
<arg name='oldIndex' type='I' declared_type='NSUInteger' index='0'/>
<arg name='amount' type='I' declared_type='NSUInteger' index='1'/>
<arg name='newIndex' type='I' declared_type='NSUInteger' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveQuadsFromIndex:to:'>
<arg name='index' type='I' declared_type='NSUInteger' index='0'/>
<arg name='newIndex' type='I' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='quads'>
<retval type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' declared_type='ccV3F_C4B_T2F_Quad*'/>
</method>
<method selector='removeAllQuads'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeQuadAtIndex:'>
<arg name='index' type='I' declared_type='NSUInteger' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeQuadsAtIndex:amount:'>
<arg name='index' type='I' declared_type='NSUInteger' index='0'/>
<arg name='amount' type='I' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resizeCapacity:'>
<arg name='n' type='I' declared_type='NSUInteger' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setQuads:'>
<arg name='quads' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' declared_type='ccV3F_C4B_T2F_Quad*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method class_method='true' selector='textureAtlasWithFile:capacity:'>
<arg name='file' type='@' declared_type='NSString*' index='0'/>
<arg name='capacity' type='I' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='textureAtlasWithTexture:capacity:'>
<arg name='tex' type='@' declared_type='CCTexture2D*' index='0'/>
<arg name='capacity' type='I' declared_type='NSUInteger' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='totalQuads'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='updateQuad:atIndex:'>
<arg name='quad' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' declared_type='ccV3F_C4B_T2F_Quad*' index='0'/>
<arg name='index' type='I' declared_type='NSUInteger' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTextureCache'>
<method selector='addCGImage:forKey:'>
<arg name='image' type='^{CGImage=}' declared_type='CGImageRef' index='0'/>
<arg name='key' type='@' declared_type='NSString*' index='1'/>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='addImage:'>
<arg name='fileimage' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='addImageAsync:target:selector:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<arg name='target' type='@' declared_type='id' index='1'/>
<arg name='selector' type=':' declared_type='SEL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addImageAsync:withBlock:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(CCTexture2D *)' index='1'>
<arg type='@' declared_type='CCTexture2D*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPVRImage:'>
<arg name='filename' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='dumpCachedTextureInfo'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='purgeSharedTextureCache'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllTextures'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTexture:'>
<arg name='tex' type='@' declared_type='CCTexture2D*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTextureForKey:'>
<arg name='textureKeyName' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeUnusedTextures'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedTextureCache'>
<retval type='@' declared_type='CCTextureCache*'/>
</method>
<method selector='textureForKey:'>
<arg name='key' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
</class>
<class name='CCTexturePVR'>
<method selector='format'>
<retval type='i' declared_type='CCTexture2DPixelFormat'/>
</method>
<method selector='hasAlpha'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='height'>
<retval type='I' declared_type='uint32_t'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg name='path' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg name='url' type='@' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='name'>
<retval type='I' declared_type='GLuint'/>
</method>
<method selector='numberOfMipmaps'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method class_method='true' selector='pvrTextureWithContentsOfFile:'>
<arg name='path' type='@' declared_type='NSString*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='pvrTextureWithContentsOfURL:'>
<arg name='url' type='@' declared_type='NSURL*' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='retainName'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setRetainName:'>
<arg name='retainName' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='width'>
<retval type='I' declared_type='uint32_t'/>
</method>
</class>
<class name='CCTileMapAtlas'>
<method selector='initWithTileFile:mapFile:tileWidth:tileHeight:'>
<arg name='tile' type='@' declared_type='NSString*' index='0'/>
<arg name='map' type='@' declared_type='NSString*' index='1'/>
<arg name='w' type='i' declared_type='int' index='2'/>
<arg name='h' type='i' declared_type='int' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='releaseMap'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTile:at:'>
<arg name='tile' type='{_ccColor3B=CCC}' declared_type='ccColor3B' index='0'/>
<arg name='position' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tgaInfo'>
<retval type='^{sImageTGA=iCCss*i}' declared_type='tImageTGA*'/>
</method>
<method selector='tileAt:'>
<arg name='position' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method class_method='true' selector='tileMapAtlasWithTileFile:mapFile:tileWidth:tileHeight:'>
<arg name='tile' type='@' declared_type='NSString*' index='0'/>
<arg name='map' type='@' declared_type='NSString*' index='1'/>
<arg name='w' type='i' declared_type='int' index='2'/>
<arg name='h' type='i' declared_type='int' index='3'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTiledGrid3D'>
<method selector='originalTile:'>
<arg name='pos' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<retval type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
</method>
<method selector='setTile:coords:'>
<arg name='pos' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<arg name='coords' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tile:'>
<arg name='pos' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<retval type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
</method>
</class>
<class name='CCTiledGrid3DAction'>
<method selector='originalTile:'>
<arg name='pos' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<retval type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
</method>
<method selector='setTile:coords:'>
<arg name='pos' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<arg name='coords' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tile:'>
<arg name='pos' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<retval type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' declared_type='ccQuad3'/>
</method>
</class>
<class name='CCTimer'>
<method selector='initWithTarget:selector:'>
<arg name='t' type='@' declared_type='id' index='0'/>
<arg name='s' type=':' declared_type='SEL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:interval:repeat:delay:'>
<arg name='t' type='@' declared_type='id' index='0'/>
<arg name='s' type=':' declared_type='SEL' index='1'/>
<arg name='seconds' type='f' declared_type='ccTime' index='2'/>
<arg name='r' type='I' declared_type='uint' index='3'/>
<arg name='d' type='f' declared_type='ccTime' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='interval'>
<retval type='f' declared_type='ccTime'/>
</method>
<method selector='setInterval:'>
<arg name='interval' type='f' declared_type='ccTime' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='timerWithTarget:selector:'>
<arg name='t' type='@' declared_type='id' index='0'/>
<arg name='s' type=':' declared_type='SEL' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='timerWithTarget:selector:interval:'>
<arg name='t' type='@' declared_type='id' index='0'/>
<arg name='s' type=':' declared_type='SEL' index='1'/>
<arg name='seconds' type='f' declared_type='ccTime' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='update:'>
<arg name='dt' type='f' declared_type='ccTime' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTintBy'>
<method class_method='true' selector='actionWithDuration:red:green:blue:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='deltaRed' type='s' declared_type='GLshort' index='1'/>
<arg name='deltaGreen' type='s' declared_type='GLshort' index='2'/>
<arg name='deltaBlue' type='s' declared_type='GLshort' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:red:green:blue:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='deltaRed' type='s' declared_type='GLshort' index='1'/>
<arg name='deltaGreen' type='s' declared_type='GLshort' index='2'/>
<arg name='deltaBlue' type='s' declared_type='GLshort' index='3'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTintTo'>
<method class_method='true' selector='actionWithDuration:red:green:blue:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='red' type='C' declared_type='GLubyte' index='1'/>
<arg name='green' type='C' declared_type='GLubyte' index='2'/>
<arg name='blue' type='C' declared_type='GLubyte' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDuration:red:green:blue:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='red' type='C' declared_type='GLubyte' index='1'/>
<arg name='green' type='C' declared_type='GLubyte' index='2'/>
<arg name='blue' type='C' declared_type='GLubyte' index='3'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCToggleVisibility'>
<method selector='update:'>
<arg name='time' type='f' declared_type='ccTime' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTouchDispatcher'>
<method selector='addStandardDelegate:priority:'>
<arg name='delegate' type='@' declared_type='id' index='0'/>
<arg name='priority' type='i' declared_type='int' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addTargetedDelegate:priority:swallowsTouches:'>
<arg name='delegate' type='@' declared_type='id' index='0'/>
<arg name='priority' type='i' declared_type='int' index='1'/>
<arg name='swallowsTouches' type='B' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dispatchEvents'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeAllDelegates'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeDelegate:'>
<arg name='delegate' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDispatchEvents:'>
<arg name='dispatchEvents' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPriority:forDelegate:'>
<arg name='priority' type='i' declared_type='int' index='0'/>
<arg name='delegate' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedDispatcher'>
<retval type='@' declared_type='CCTouchDispatcher*'/>
</method>
</class>
<class name='CCTouchHandler'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='enabledSelectors'>
<retval type='i' declared_type='ccTouchSelectorFlag'/>
</method>
<method class_method='true' selector='handlerWithDelegate:priority:'>
<arg name='aDelegate' type='@' declared_type='id' index='0'/>
<arg name='priority' type='i' declared_type='int' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDelegate:priority:'>
<arg name='aDelegate' type='@' declared_type='id' index='0'/>
<arg name='priority' type='i' declared_type='int' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='priority'>
<retval type='i' declared_type='int'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' declared_type='id' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnabledSelectors:'>
<arg name='enabledSelectors' type='i' declared_type='ccTouchSelectorFlag' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPriority:'>
<arg name='priority' type='i' declared_type='int' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionFade'>
<method selector='initWithDuration:scene:withColor:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='scene' type='@' declared_type='CCScene*' index='1'/>
<arg name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='transitionWithDuration:scene:withColor:'>
<arg name='duration' type='f' declared_type='ccTime' index='0'/>
<arg name='scene' type='@' declared_type='CCScene*' index='1'/>
<arg name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B' index='2'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionFadeTR'>
<method selector='actionWithSize:'>
<arg name='vector' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</class>
<class name='CCTransitionMoveInL'>
<method selector='action'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='initScenes'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionPageTurn'>
<method selector='actionWithSize:'>
<arg name='vector' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='0'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='initWithDuration:scene:backwards:'>
<arg name='t' type='f' declared_type='ccTime' index='0'/>
<arg name='s' type='@' declared_type='CCScene*' index='1'/>
<arg name='back' type='B' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='transitionWithDuration:scene:backwards:'>
<arg name='t' type='f' declared_type='ccTime' index='0'/>
<arg name='s' type='@' declared_type='CCScene*' index='1'/>
<arg name='back' type='B' declared_type='BOOL' index='2'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionScene'>
<method selector='finish'>
<retval type='v' declared_type='void'/>
</method>
<method selector='hideOutShowIn'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithDuration:scene:'>
<arg name='t' type='f' declared_type='ccTime' index='0'/>
<arg name='s' type='@' declared_type='CCScene*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='transitionWithDuration:scene:'>
<arg name='t' type='f' declared_type='ccTime' index='0'/>
<arg name='s' type='@' declared_type='CCScene*' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionSceneOriented'>
<method selector='initWithDuration:scene:orientation:'>
<arg name='t' type='f' declared_type='ccTime' index='0'/>
<arg name='s' type='@' declared_type='CCScene*' index='1'/>
<arg name='o' type='i' declared_type='tOrientation' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='transitionWithDuration:scene:orientation:'>
<arg name='t' type='f' declared_type='ccTime' index='0'/>
<arg name='s' type='@' declared_type='CCScene*' index='1'/>
<arg name='o' type='i' declared_type='tOrientation' index='2'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTransitionSlideInL'>
<method selector='action'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='initScenes'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCTransitionSplitCols'>
<method selector='action'>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</class>
<class name='CCTurnOffTiles'>
<method class_method='true' selector='actionWithSeed:grid:duration:'>
<arg name='s' type='i' declared_type='int' index='0'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='1'/>
<arg name='d' type='f' declared_type='ccTime' index='2'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSeed:grid:duration:'>
<arg name='s' type='i' declared_type='int' index='0'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='1'/>
<arg name='d' type='f' declared_type='ccTime' index='2'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CCTwirl'>
<method class_method='true' selector='actionWithPosition:twirls:amplitude:grid:duration:'>
<arg name='pos' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<arg name='t' type='i' declared_type='int' index='1'/>
<arg name='amp' type='f' declared_type='float' index='2'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='3'/>
<arg name='d' type='f' declared_type='ccTime' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithPosition:twirls:amplitude:grid:duration:'>
<arg name='pos' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<arg name='t' type='i' declared_type='int' index='1'/>
<arg name='amp' type='f' declared_type='float' index='2'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='3'/>
<arg name='d' type='f' declared_type='ccTime' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setAmplitude:'>
<arg name='amplitude' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg name='amplitudeRate' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg name='position' type='{CGPoint=ff}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCWaves'>
<method class_method='true' selector='actionWithWaves:amplitude:horizontal:vertical:grid:duration:'>
<arg name='wav' type='i' declared_type='int' index='0'/>
<arg name='amp' type='f' declared_type='float' index='1'/>
<arg name='h' type='B' declared_type='BOOL' index='2'/>
<arg name='v' type='B' declared_type='BOOL' index='3'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='4'/>
<arg name='d' type='f' declared_type='ccTime' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithWaves:amplitude:horizontal:vertical:grid:duration:'>
<arg name='wav' type='i' declared_type='int' index='0'/>
<arg name='amp' type='f' declared_type='float' index='1'/>
<arg name='h' type='B' declared_type='BOOL' index='2'/>
<arg name='v' type='B' declared_type='BOOL' index='3'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='4'/>
<arg name='d' type='f' declared_type='ccTime' index='5'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg name='amplitude' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg name='amplitudeRate' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCWaves3D'>
<method class_method='true' selector='actionWithWaves:amplitude:grid:duration:'>
<arg name='wav' type='i' declared_type='int' index='0'/>
<arg name='amp' type='f' declared_type='float' index='1'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='2'/>
<arg name='d' type='f' declared_type='ccTime' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg name='wav' type='i' declared_type='int' index='0'/>
<arg name='amp' type='f' declared_type='float' index='1'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='2'/>
<arg name='d' type='f' declared_type='ccTime' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg name='amplitude' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg name='amplitudeRate' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CCWavesTiles3D'>
<method class_method='true' selector='actionWithWaves:amplitude:grid:duration:'>
<arg name='wav' type='i' declared_type='int' index='0'/>
<arg name='amp' type='f' declared_type='float' index='1'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='2'/>
<arg name='d' type='f' declared_type='ccTime' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='amplitude'>
<retval type='f' declared_type='float'/>
</method>
<method selector='amplitudeRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg name='wav' type='i' declared_type='int' index='0'/>
<arg name='amp' type='f' declared_type='float' index='1'/>
<arg name='gridSize' type='{_ccGridSize=ii}' declared_type='ccGridSize' index='2'/>
<arg name='d' type='f' declared_type='ccTime' index='3'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAmplitude:'>
<arg name='amplitude' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAmplitudeRate:'>
<arg name='amplitudeRate' type='f' declared_type='float' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSObject'>
<method selector='backingSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method selector='ccTouchBegan:withEvent:'>
<arg name='touch' type='@' declared_type='id' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ccTouchCancelled:withEvent:'>
<arg name='touch' type='@' declared_type='id' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchEnded:withEvent:'>
<arg name='touch' type='@' declared_type='id' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchMoved:withEvent:'>
<arg name='touch' type='@' declared_type='id' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesBegan:withEvent:'>
<arg name='touches' type='@' declared_type='NSSet*' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesCancelled:withEvent:'>
<arg name='touches' type='@' declared_type='NSSet*' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesEnded:withEvent:'>
<arg name='touches' type='@' declared_type='NSSet*' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ccTouchesMoved:withEvent:'>
<arg name='touches' type='@' declared_type='NSSet*' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method selector='colorRenderBuffer'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='context'>
<retval type='@' declared_type='id'/>
</method>
<method selector='defaultFrameBuffer'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='doesOpacityModifyRGB'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='easeActionWithAction:'>
<arg name='action' type='@' declared_type='CCActionInterval*' index='0'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
<method selector='initWithDepthFormat:withPixelFormat:withSharegroup:withMultiSampling:withNumberOfSamples:'>
<arg name='depthFormat' type='I' declared_type='unsigned int' index='0'/>
<arg name='pixelFormat' type='I' declared_type='unsigned int' index='1'/>
<arg name='sharegroup' type='@' declared_type='id' index='2'/>
<arg name='multiSampling' type='B' declared_type='BOOL' index='3'/>
<arg name='requestedSamples' type='I' declared_type='unsigned int' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='msaaColorBuffer'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='msaaFrameBuffer'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method selector='resizeFromLayer:'>
<arg name='layer' type='@' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setBlendFunc:'>
<arg name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCString:'>
<arg name='label' type='*' declared_type='char*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacity:'>
<arg name='opacity' type='C' declared_type='GLubyte' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpacityModifyRGB:'>
<arg name='boolean' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:'>
<arg name='label' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTexture:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldAutorotateToInterfaceOrientation:'>
<arg name='interfaceOrientation' type='@' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='string'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
<method selector='touchesBegan:withEvent:'>
<arg name='touches' type='@' declared_type='NSSet*' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesCancelled:withEvent:'>
<arg name='touches' type='@' declared_type='NSSet*' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesEnded:withEvent:'>
<arg name='touches' type='@' declared_type='NSSet*' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesMoved:withEvent:'>
<arg name='touches' type='@' declared_type='NSSet*' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateProjection'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSThread'>
<method selector='performBlock:'>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(void)' index='0'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='performBlock:waitUntilDone:'>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(void)' index='0'>
<retval type='v' declared_type='void'/>
</arg>
<arg name='wait' type='B' declared_type='BOOL' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performBlock:withObject:waitUntilDone:'>
<arg function_pointer='true' name='block' type='@?' declared_type='void (^)(id)' index='0'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='object' type='@' declared_type='id' index='1'/>
<arg name='wait' type='B' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<informal_protocol name='CCBlendProtocol'>
<method type='{_ccBlendFunc=II}8@0:4' selector='blendFunc'>
<retval type='{_ccBlendFunc=II}' declared_type='ccBlendFunc'/>
</method>
<method type='v16@0:4{_ccBlendFunc=II}8' selector='setBlendFunc:'>
<arg name='blendFunc' type='{_ccBlendFunc=II}' declared_type='ccBlendFunc' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCDirectorDelegate'>
<method type='B12@0:4@8' selector='shouldAutorotateToInterfaceOrientation:'>
<arg name='interfaceOrientation' type='@' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v8@0:4' selector='updateProjection'>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCESRenderer'>
<method type='{CGSize=ff}8@0:4' selector='backingSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method type='I8@0:4' selector='colorRenderBuffer'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method type='@8@0:4' selector='context'>
<retval type='@' declared_type='id'/>
</method>
<method type='I8@0:4' selector='defaultFrameBuffer'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method type='@28@0:4I8I12@16B20I24' selector='initWithDepthFormat:withPixelFormat:withSharegroup:withMultiSampling:withNumberOfSamples:'>
<arg name='depthFormat' type='I' declared_type='unsigned int' index='0'/>
<arg name='pixelFormat' type='I' declared_type='unsigned int' index='1'/>
<arg name='sharegroup' type='@' declared_type='id' index='2'/>
<arg name='multiSampling' type='B' declared_type='BOOL' index='3'/>
<arg name='requestedSamples' type='I' declared_type='unsigned int' index='4'/>
<retval type='@' declared_type='id'/>
</method>
<method type='I8@0:4' selector='msaaColorBuffer'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method type='I8@0:4' selector='msaaFrameBuffer'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method type='B12@0:4@8' selector='resizeFromLayer:'>
<arg name='layer' type='@' declared_type='id' index='0'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='CCLabelProtocol'>
<method type='v12@0:4*8' selector='setCString:'>
<arg name='label' type='*' declared_type='char*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='setString:'>
<arg name='label' type='@' declared_type='NSString*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@8@0:4' selector='string'>
<retval type='@' declared_type='NSString*'/>
</method>
</informal_protocol>
<informal_protocol name='CCRGBAProtocol'>
<method type='{_ccColor3B=CCC}8@0:4' selector='color'>
<retval type='{_ccColor3B=CCC}' declared_type='ccColor3B'/>
</method>
<method type='B8@0:4' selector='doesOpacityModifyRGB'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='C8@0:4' selector='opacity'>
<retval type='C' declared_type='GLubyte'/>
</method>
<method type='v11@0:4{_ccColor3B=CCC}8' selector='setColor:'>
<arg name='color' type='{_ccColor3B=CCC}' declared_type='ccColor3B' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4C8' selector='setOpacity:'>
<arg name='opacity' type='C' declared_type='GLubyte' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4B8' selector='setOpacityModifyRGB:'>
<arg name='boolean' type='B' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCStandardTouchDelegate'>
<method type='v16@0:4@8@12' selector='ccTouchesBegan:withEvent:'>
<arg name='touches' type='@' declared_type='NSSet*' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='ccTouchesCancelled:withEvent:'>
<arg name='touches' type='@' declared_type='NSSet*' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='ccTouchesEnded:withEvent:'>
<arg name='touches' type='@' declared_type='NSSet*' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='ccTouchesMoved:withEvent:'>
<arg name='touches' type='@' declared_type='NSSet*' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCTargetedTouchDelegate'>
<method type='B16@0:4@8@12' selector='ccTouchBegan:withEvent:'>
<arg name='touch' type='@' declared_type='id' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v16@0:4@8@12' selector='ccTouchCancelled:withEvent:'>
<arg name='touch' type='@' declared_type='id' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='ccTouchEnded:withEvent:'>
<arg name='touch' type='@' declared_type='id' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='ccTouchMoved:withEvent:'>
<arg name='touch' type='@' declared_type='id' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCTextureProtocol'>
<method type='v12@0:4@8' selector='setTexture:'>
<arg name='texture' type='@' declared_type='CCTexture2D*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@8@0:4' selector='texture'>
<retval type='@' declared_type='CCTexture2D*'/>
</method>
</informal_protocol>
<informal_protocol name='CCTouchDelegate'>
<method type='v16@0:4@8@12' selector='touchesBegan:withEvent:'>
<arg name='touches' type='@' declared_type='NSSet*' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='touchesCancelled:withEvent:'>
<arg name='touches' type='@' declared_type='NSSet*' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='touchesEnded:withEvent:'>
<arg name='touches' type='@' declared_type='NSSet*' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='touchesMoved:withEvent:'>
<arg name='touches' type='@' declared_type='NSSet*' index='0'/>
<arg name='event' type='@' declared_type='id' index='1'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CCTransitionEaseScene'>
<method type='@12@0:4@8' selector='easeActionWithAction:'>
<arg name='action' type='@' declared_type='CCActionInterval*' index='0'/>
<retval type='@' declared_type='CCActionInterval*'/>
</method>
</informal_protocol>
</signatures>
