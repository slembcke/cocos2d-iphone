<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='CCPVRMipmap' type='{CCPVRMipmap=&quot;address&quot;*&quot;len&quot;I}'>
<field declared_type='unsigned char*' name='address' type='*'/>
<field declared_type='unsigned int' name='len' type='I'/>
</struct>
<struct name='CCZHeader' type='{CCZHeader=&quot;sig&quot;[4C]&quot;compression_type&quot;S&quot;version&quot;S&quot;reserved&quot;I&quot;len&quot;I}'>
<field declared_type='uint8_t*' name='sig' type='[4C]'/>
<field declared_type='uint16_t' name='compression_type' type='S'/>
<field declared_type='uint16_t' name='version' type='S'/>
<field declared_type='uint32_t' name='reserved' type='I'/>
<field declared_type='uint32_t' name='len' type='I'/>
</struct>
<struct name='UT_hash_bucket' type='{UT_hash_bucket=&quot;hh_head&quot;^{UT_hash_handle}&quot;count&quot;I&quot;expand_mult&quot;I}'>
<field declared_type='struct UT_hash_handle*' name='hh_head' type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}'/>
<field declared_type='unsigned int' name='count' type='I'/>
<field declared_type='unsigned int' name='expand_mult' type='I'/>
</struct>
<struct name='UT_hash_handle' type='{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}'>
<field type64='^{UT_hash_table=^{UT_hash_bucket}III^{UT_hash_handle}qIIIII}' declared_type='struct UT_hash_table*' name='tbl' type='^{UT_hash_table=^{UT_hash_bucket}III^{UT_hash_handle}iIIIII}'/>
<field declared_type='void*' name='prev' type='^v'/>
<field declared_type='void*' name='next' type='^v'/>
<field declared_type='struct UT_hash_handle*' name='hh_prev' type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}'/>
<field declared_type='struct UT_hash_handle*' name='hh_next' type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}'/>
<field declared_type='void*' name='key' type='^v'/>
<field declared_type='unsigned int' name='keylen' type='I'/>
<field declared_type='unsigned int' name='hashv' type='I'/>
</struct>
<struct type64='{UT_hash_table=&quot;buckets&quot;^{UT_hash_bucket}&quot;num_buckets&quot;I&quot;log2_num_buckets&quot;I&quot;num_items&quot;I&quot;tail&quot;^{UT_hash_handle}&quot;hho&quot;q&quot;ideal_chain_maxlen&quot;I&quot;nonideal_items&quot;I&quot;ineff_expands&quot;I&quot;noexpand&quot;I&quot;signature&quot;I}' name='UT_hash_table' type='{UT_hash_table=&quot;buckets&quot;^{UT_hash_bucket}&quot;num_buckets&quot;I&quot;log2_num_buckets&quot;I&quot;num_items&quot;I&quot;tail&quot;^{UT_hash_handle}&quot;hho&quot;i&quot;ideal_chain_maxlen&quot;I&quot;nonideal_items&quot;I&quot;ineff_expands&quot;I&quot;noexpand&quot;I&quot;signature&quot;I}'>
<field declared_type='UT_hash_bucket*' name='buckets' type='^{UT_hash_bucket=^{UT_hash_handle}II}'/>
<field declared_type='unsigned int' name='num_buckets' type='I'/>
<field declared_type='unsigned int' name='log2_num_buckets' type='I'/>
<field declared_type='unsigned int' name='num_items' type='I'/>
<field declared_type='struct UT_hash_handle*' name='tail' type='^{UT_hash_handle=^{UT_hash_table}^v^v^{UT_hash_handle}^{UT_hash_handle}^vII}'/>
<field type64='q' declared_type='ptrdiff_t' name='hho' type='i'/>
<field declared_type='unsigned int' name='ideal_chain_maxlen' type='I'/>
<field declared_type='unsigned int' name='nonideal_items' type='I'/>
<field declared_type='unsigned int' name='ineff_expands' type='I'/>
<field declared_type='unsigned int' name='noexpand' type='I'/>
<field declared_type='uint32_t' name='signature' type='I'/>
</struct>
<struct type64='{ccArray=&quot;num&quot;Q&quot;max&quot;Q&quot;arr&quot;^@}' name='ccArray' type='{ccArray=&quot;num&quot;I&quot;max&quot;I&quot;arr&quot;^@}'>
<field type64='Q' declared_type='NSUInteger' name='num' type='I'/>
<field type64='Q' declared_type='NSUInteger' name='max' type='I'/>
<field declared_type='CCARRAY_ID*' name='arr' type='^@'/>
</struct>
<struct type64='{_BMFontDef=&quot;charID&quot;S&quot;rect&quot;{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;size&quot;{CGSize=&quot;width&quot;d&quot;height&quot;d}}&quot;xOffset&quot;s&quot;yOffset&quot;s&quot;xAdvance&quot;s}' name='ccBMFontDef' type='{_BMFontDef=&quot;charID&quot;S&quot;rect&quot;{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}&quot;xOffset&quot;s&quot;yOffset&quot;s&quot;xAdvance&quot;s}'>
<field declared_type='unichar' name='charID' type='S'/>
<field type64='{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;size&quot;{CGSize=&quot;width&quot;d&quot;height&quot;d}}' declared_type='CGRect' name='rect' type='{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}'/>
<field declared_type='short' name='xOffset' type='s'/>
<field declared_type='short' name='yOffset' type='s'/>
<field declared_type='short' name='xAdvance' type='s'/>
</struct>
<struct name='ccBMFontPadding' type='{_BMFontPadding=&quot;left&quot;i&quot;top&quot;i&quot;right&quot;i&quot;bottom&quot;i}'>
<field declared_type='int' name='left' type='i'/>
<field declared_type='int' name='top' type='i'/>
<field declared_type='int' name='right' type='i'/>
<field declared_type='int' name='bottom' type='i'/>
</struct>
<struct type64='{_ccBezierConfig=&quot;endPosition&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;controlPoint_1&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;controlPoint_2&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}}' name='ccBezierConfig' type='{_ccBezierConfig=&quot;endPosition&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;controlPoint_1&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;controlPoint_2&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}}'>
<field type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint' name='endPosition' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}'/>
<field type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint' name='controlPoint_1' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}'/>
<field type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint' name='controlPoint_2' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}'/>
</struct>
<struct name='ccBlendFunc' type='{_ccBlendFunc=&quot;src&quot;I&quot;dst&quot;I}'>
<field declared_type='GLenum' name='src' type='I'/>
<field declared_type='GLenum' name='dst' type='I'/>
</struct>
<struct type64='{ccArray=&quot;num&quot;Q&quot;max&quot;Q&quot;arr&quot;^@}' name='ccCArray' type='{ccArray=&quot;num&quot;I&quot;max&quot;I&quot;arr&quot;^@}'>
<field type64='Q' declared_type='NSUInteger' name='num' type='I'/>
<field type64='Q' declared_type='NSUInteger' name='max' type='I'/>
<field declared_type='CCARRAY_ID*' name='arr' type='^@'/>
</struct>
<struct name='ccColor3B' type='{_ccColor3B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C}'>
<field declared_type='GLubyte' name='r' type='C'/>
<field declared_type='GLubyte' name='g' type='C'/>
<field declared_type='GLubyte' name='b' type='C'/>
</struct>
<struct name='ccColor4B' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}'>
<field declared_type='GLubyte' name='r' type='C'/>
<field declared_type='GLubyte' name='g' type='C'/>
<field declared_type='GLubyte' name='b' type='C'/>
<field declared_type='GLubyte' name='a' type='C'/>
</struct>
<struct name='ccColor4F' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}'>
<field declared_type='GLfloat' name='r' type='f'/>
<field declared_type='GLfloat' name='g' type='f'/>
<field declared_type='GLfloat' name='b' type='f'/>
<field declared_type='GLfloat' name='a' type='f'/>
</struct>
<struct type64='{_ccGridSize=&quot;x&quot;q&quot;y&quot;q}' name='ccGridSize' type='{_ccGridSize=&quot;x&quot;i&quot;y&quot;i}'>
<field type64='q' declared_type='NSInteger' name='x' type='i'/>
<field type64='q' declared_type='NSInteger' name='y' type='i'/>
</struct>
<struct name='ccPointSprite' type='{_ccPointSprite=&quot;pos&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;size&quot;f}'>
<field declared_type='ccVertex2F' name='pos' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'/>
<field declared_type='ccColor4B' name='color' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}'/>
<field declared_type='GLfloat' name='size' type='f'/>
</struct>
<struct name='ccQuad2' type='{_ccQuad2=&quot;tl&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;tr&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;bl&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;br&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}}'>
<field declared_type='ccVertex2F' name='tl' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'/>
<field declared_type='ccVertex2F' name='tr' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'/>
<field declared_type='ccVertex2F' name='bl' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'/>
<field declared_type='ccVertex2F' name='br' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'/>
</struct>
<struct name='ccQuad3' type='{_ccQuad3=&quot;bl&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;br&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;tl&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;tr&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}}'>
<field declared_type='ccVertex3F' name='bl' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
<field declared_type='ccVertex3F' name='br' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
<field declared_type='ccVertex3F' name='tl' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
<field declared_type='ccVertex3F' name='tr' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
</struct>
<struct name='ccTex2F' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}'>
<field declared_type='GLfloat' name='u' type='f'/>
<field declared_type='GLfloat' name='v' type='f'/>
</struct>
<struct name='ccTexParams' type='{_ccTexParams=&quot;minFilter&quot;I&quot;magFilter&quot;I&quot;wrapS&quot;I&quot;wrapT&quot;I}'>
<field declared_type='GLuint' name='minFilter' type='I'/>
<field declared_type='GLuint' name='magFilter' type='I'/>
<field declared_type='GLuint' name='wrapS' type='I'/>
<field declared_type='GLuint' name='wrapT' type='I'/>
</struct>
<struct name='ccV2F_C4B_T2F' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'>
<field declared_type='ccVertex2F' name='vertices' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'/>
<field declared_type='ccColor4B' name='colors' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}'/>
<field declared_type='ccTex2F' name='texCoords' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}'/>
</struct>
<struct name='ccV2F_C4B_T2F_Quad' type='{_ccV2F_C4B_T2F_Quad=&quot;bl&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tl&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}'>
<field declared_type='ccV2F_C4B_T2F' name='bl' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field declared_type='ccV2F_C4B_T2F' name='br' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field declared_type='ccV2F_C4B_T2F' name='tl' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field declared_type='ccV2F_C4B_T2F' name='tr' type='{_ccV2F_C4B_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
</struct>
<struct name='ccV2F_C4F_T2F' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'>
<field declared_type='ccVertex2F' name='vertices' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'/>
<field declared_type='ccColor4F' name='colors' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}'/>
<field declared_type='ccTex2F' name='texCoords' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}'/>
</struct>
<struct name='ccV2F_C4F_T2F_Quad' type='{_ccV2F_C4F_T2F_Quad=&quot;bl&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tl&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}'>
<field declared_type='ccV2F_C4F_T2F' name='bl' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field declared_type='ccV2F_C4F_T2F' name='br' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field declared_type='ccV2F_C4F_T2F' name='tl' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field declared_type='ccV2F_C4F_T2F' name='tr' type='{_ccV2F_C4F_T2F=&quot;vertices&quot;{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
</struct>
<struct name='ccV3F_C4B_T2F' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'>
<field declared_type='ccVertex3F' name='vertices' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
<field declared_type='ccColor4B' name='colors' type='{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}'/>
<field declared_type='ccTex2F' name='texCoords' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}'/>
</struct>
<struct name='ccV3F_C4B_T2F_Quad' type='{_ccV3F_C4B_T2F_Quad=&quot;tl&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;bl&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}'>
<field declared_type='ccV3F_C4B_T2F' name='tl' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field declared_type='ccV3F_C4B_T2F' name='bl' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field declared_type='ccV3F_C4B_T2F' name='tr' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field declared_type='ccV3F_C4B_T2F' name='br' type='{_ccV3F_C4B_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{_ccColor4B=&quot;r&quot;C&quot;g&quot;C&quot;b&quot;C&quot;a&quot;C}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
</struct>
<struct name='ccV3F_C4F_T2F' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'>
<field declared_type='ccVertex3F' name='vertices' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
<field declared_type='ccColor4F' name='colors' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}'/>
<field declared_type='ccTex2F' name='texCoords' type='{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}'/>
</struct>
<struct name='ccV3F_C4F_T2F_Quad' type='{_ccV3F_C4F_T2F_Quad=&quot;tl&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;bl&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;tr&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}&quot;br&quot;{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}}'>
<field declared_type='ccV3F_C4F_T2F' name='tl' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field declared_type='ccV3F_C4F_T2F' name='bl' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field declared_type='ccV3F_C4F_T2F' name='tr' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
<field declared_type='ccV3F_C4F_T2F' name='br' type='{_ccV3F_C4F_T2F=&quot;vertices&quot;{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;colors&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;texCoords&quot;{_ccTex2F=&quot;u&quot;f&quot;v&quot;f}}'/>
</struct>
<struct name='ccVertex2F' type='{_ccVertex2F=&quot;x&quot;f&quot;y&quot;f}'>
<field declared_type='GLfloat' name='x' type='f'/>
<field declared_type='GLfloat' name='y' type='f'/>
</struct>
<struct name='ccVertex3F' type='{_ccVertex3F=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field declared_type='GLfloat' name='x' type='f'/>
<field declared_type='GLfloat' name='y' type='f'/>
<field declared_type='GLfloat' name='z' type='f'/>
</struct>
<struct type64='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;startPos&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;color&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;Q&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}' name='sCCParticle' type='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;startPos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;I&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}'>
<field type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint' name='pos' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}'/>
<field type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint' name='startPos' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}'/>
<field declared_type='ccColor4F' name='color' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}'/>
<field declared_type='ccColor4F' name='deltaColor' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}'/>
<field declared_type='float' name='size' type='f'/>
<field declared_type='float' name='deltaSize' type='f'/>
<field declared_type='float' name='rotation' type='f'/>
<field declared_type='float' name='deltaRotation' type='f'/>
<field declared_type='ccTime' name='timeToLive' type='f'/>
<field type64='Q' declared_type='NSUInteger' name='atlasIndex' type='I'/>
<field type64='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})' declared_type='union sCCParticle::' name='mode' type='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})'/>
</struct>
<struct name='sImageTGA' type='{sImageTGA=&quot;status&quot;i&quot;type&quot;C&quot;pixelDepth&quot;C&quot;width&quot;s&quot;height&quot;s&quot;imageData&quot;*&quot;flipped&quot;i}'>
<field declared_type='int' name='status' type='i'/>
<field declared_type='unsigned char' name='type' type='C'/>
<field declared_type='unsigned char' name='pixelDepth' type='C'/>
<field declared_type='short' name='width' type='s'/>
<field declared_type='short' name='height' type='s'/>
<field declared_type='unsigned char*' name='imageData' type='*'/>
<field declared_type='int' name='flipped' type='i'/>
</struct>
<struct type64='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;startPos&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;color&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;Q&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}' name='tCCParticle' type='{sCCParticle=&quot;pos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;startPos&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;color&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;deltaColor&quot;{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}&quot;size&quot;f&quot;deltaSize&quot;f&quot;rotation&quot;f&quot;deltaRotation&quot;f&quot;timeToLive&quot;f&quot;atlasIndex&quot;I&quot;mode&quot;(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})}'>
<field type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint' name='pos' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}'/>
<field type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint' name='startPos' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}'/>
<field declared_type='ccColor4F' name='color' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}'/>
<field declared_type='ccColor4F' name='deltaColor' type='{ccColor4F=&quot;r&quot;f&quot;g&quot;f&quot;b&quot;f&quot;a&quot;f}'/>
<field declared_type='float' name='size' type='f'/>
<field declared_type='float' name='deltaSize' type='f'/>
<field declared_type='float' name='rotation' type='f'/>
<field declared_type='float' name='deltaRotation' type='f'/>
<field declared_type='ccTime' name='timeToLive' type='f'/>
<field type64='Q' declared_type='NSUInteger' name='atlasIndex' type='I'/>
<field type64='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})' declared_type='union sCCParticle::' name='mode' type='(?=&quot;A&quot;{?=&quot;dir&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;radialAccel&quot;f&quot;tangentialAccel&quot;f}&quot;B&quot;{?=&quot;angle&quot;f&quot;degreesPerSecond&quot;f&quot;radius&quot;f&quot;deltaRadius&quot;f})'/>
</struct>
<struct type64='{_hashElement=&quot;actions&quot;^{ccArray}&quot;actionIndex&quot;Q&quot;currentActionSalvaged&quot;B&quot;paused&quot;B&quot;hh&quot;{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}&quot;target&quot;@&quot;currentAction&quot;@&quot;CCAction&quot;}' name='tHashElement' type='{_hashElement=&quot;actions&quot;^{ccArray}&quot;actionIndex&quot;I&quot;currentActionSalvaged&quot;B&quot;paused&quot;B&quot;hh&quot;{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}&quot;target&quot;@&quot;currentAction&quot;@&quot;CCAction&quot;}'>
<field type64='^{ccArray=QQ^@}' declared_type='struct ccArray*' name='actions' type='^{ccArray=II^@}'/>
<field type64='Q' declared_type='NSUInteger' name='actionIndex' type='I'/>
<field declared_type='BOOL' name='currentActionSalvaged' type='B'/>
<field declared_type='BOOL' name='paused' type='B'/>
<field declared_type='UT_hash_handle' name='hh' type='{UT_hash_handle=&quot;tbl&quot;^{UT_hash_table}&quot;prev&quot;^v&quot;next&quot;^v&quot;hh_prev&quot;^{UT_hash_handle}&quot;hh_next&quot;^{UT_hash_handle}&quot;key&quot;^v&quot;keylen&quot;I&quot;hashv&quot;I}'/>
<field declared_type='id' name='target' type='@'/>
<field declared_type='CCAction*' name='currentAction' type='@&quot;CCAction&quot;'/>
</struct>
<struct name='tImageTGA' type='{sImageTGA=&quot;status&quot;i&quot;type&quot;C&quot;pixelDepth&quot;C&quot;width&quot;s&quot;height&quot;s&quot;imageData&quot;*&quot;flipped&quot;i}'>
<field declared_type='int' name='status' type='i'/>
<field declared_type='unsigned char' name='type' type='C'/>
<field declared_type='unsigned char' name='pixelDepth' type='C'/>
<field declared_type='short' name='width' type='s'/>
<field declared_type='short' name='height' type='s'/>
<field declared_type='unsigned char*' name='imageData' type='*'/>
<field declared_type='int' name='flipped' type='i'/>
</struct>
<constant declared_type='ccColor3B' name='ccBLACK' type='{_ccColor3B=CCC}' const='true'/>
<constant declared_type='ccColor3B' name='ccBLUE' type='{_ccColor3B=CCC}' const='true'/>
<constant declared_type='ccColor3B' name='ccGRAY' type='{_ccColor3B=CCC}' const='true'/>
<constant declared_type='ccColor3B' name='ccGREEN' type='{_ccColor3B=CCC}' const='true'/>
<constant declared_type='ccColor3B' name='ccMAGENTA' type='{_ccColor3B=CCC}' const='true'/>
<constant declared_type='ccColor3B' name='ccORANGE' type='{_ccColor3B=CCC}' const='true'/>
<constant declared_type='GLchar*' name='ccPositionColor_frag' type='*' const='true'/>
<constant declared_type='GLchar*' name='ccPositionColor_vert' type='*' const='true'/>
<constant declared_type='GLchar*' name='ccPositionTextureA8Color_frag' type='*' const='true'/>
<constant declared_type='GLchar*' name='ccPositionTextureA8Color_vert' type='*' const='true'/>
<constant declared_type='GLchar*' name='ccPositionTextureColorAlphaTest_frag' type='*' const='true'/>
<constant declared_type='GLchar*' name='ccPositionTextureColor_frag' type='*' const='true'/>
<constant declared_type='GLchar*' name='ccPositionTextureColor_vert' type='*' const='true'/>
<constant declared_type='GLchar*' name='ccPositionTexture_frag' type='*' const='true'/>
<constant declared_type='GLchar*' name='ccPositionTexture_uColor_frag' type='*' const='true'/>
<constant declared_type='GLchar*' name='ccPositionTexture_uColor_vert' type='*' const='true'/>
<constant declared_type='GLchar*' name='ccPositionTexture_vert' type='*' const='true'/>
<constant declared_type='GLchar*' name='ccPosition_uColor_frag' type='*' const='true'/>
<constant declared_type='GLchar*' name='ccPosition_uColor_vert' type='*' const='true'/>
<constant declared_type='ccColor3B' name='ccRED' type='{_ccColor3B=CCC}' const='true'/>
<constant declared_type='ccColor3B' name='ccWHITE' type='{_ccColor3B=CCC}' const='true'/>
<constant declared_type='ccColor3B' name='ccYELLOW' type='{_ccColor3B=CCC}' const='true'/>
<constant declared_type='BOOL' name='kCCProfilerCategoryBatchSprite' type='B'/>
<constant declared_type='BOOL' name='kCCProfilerCategoryParticles' type='B'/>
<constant declared_type='BOOL' name='kCCProfilerCategorySprite' type='B'/>
<string_constant value='CCAnimationFrameDisplayedNotification' name='CCAnimationFrameDisplayedNotification' nsstring='true'/>
<string_constant value='a_color' name='kCCAttributeNameColor' nsstring='true'/>
<string_constant value='a_position' name='kCCAttributeNamePosition' nsstring='true'/>
<string_constant value='a_texCoord' name='kCCAttributeNameTexCoord' nsstring='true'/>
<string_constant value='ShaderPositionColor' name='kCCShader_PositionColor' nsstring='true'/>
<string_constant value='ShaderPositionTexture' name='kCCShader_PositionTexture' nsstring='true'/>
<string_constant value='ShaderPositionTextureA8Color' name='kCCShader_PositionTextureA8Color' nsstring='true'/>
<string_constant value='ShaderPositionTextureColor' name='kCCShader_PositionTextureColor' nsstring='true'/>
<string_constant value='ShaderPositionTextureColorAlphaTest' name='kCCShader_PositionTextureColorAlphaTest' nsstring='true'/>
<string_constant value='ShaderPositionTexture_uColor' name='kCCShader_PositionTexture_uColor' nsstring='true'/>
<string_constant value='ShaderPosition_uColor' name='kCCShader_Position_uColor' nsstring='true'/>
<string_constant value='u_alpha_value' name='kCCUniformAlphaTestValue'/>
<string_constant value='u_MVPMatrix' name='kCCUniformMVPMatrix_s'/>
<string_constant value='u_texture' name='kCCUniformSampler_s'/>
<enum value='4294967295' name='CCSpriteIndexNotInitialized'/>
<enum value='1' name='CCTMXOrientationHex'/>
<enum value='2' name='CCTMXOrientationIso'/>
<enum value='0' name='CCTMXOrientationOrtho'/>
<enum value='1' name='CCZ_COMPRESSION_BZIP2'/>
<enum value='2' name='CCZ_COMPRESSION_GZIP'/>
<enum value='3' name='CCZ_COMPRESSION_NONE'/>
<enum value='0' name='CCZ_COMPRESSION_ZLIB'/>
<enum value='771' name='CC_BLEND_DST'/>
<enum value='1' name='CC_BLEND_SRC'/>
<enum value='0' name='CC_DIRECTOR_IOS_USE_BACKGROUND_THREAD'/>
<enum value='0' name='CC_DIRECTOR_MAC_THREAD'/>
<enum value='0.1f' name='CC_DIRECTOR_STATS_INTERVAL'/>
<enum value='1' name='CC_ENABLE_DEPRECATED'/>
<enum value='0' name='CC_ENABLE_GL_STATE_CACHE'/>
<enum value='0' name='CC_ENABLE_PROFILERS'/>
<enum value='0' name='CC_FIX_ARTIFACTS_BY_STRECHING_TEXEL'/>
<enum value='8' name='CC_GL_ALL'/>
<enum value='8' name='CC_GL_BLEND'/>
<enum value='35056' name='CC_GL_DEPTH24_STENCIL8'/>
<enum value='0' name='CC_LABELATLAS_DEBUG_DRAW'/>
<enum value='0' name='CC_LABELBMFONT_DEBUG_DRAW'/>
<enum value='0' name='CC_MAC_USE_DISPLAY_LINK_THREAD'/>
<enum value='2' name='CC_MAC_USE_MAIN_THREAD'/>
<enum value='1' name='CC_MAC_USE_OWN_THREAD'/>
<enum value='1' name='CC_NODE_RENDER_SUBPIXEL'/>
<enum value='16' name='CC_PVRMIPMAP_MAX'/>
<enum value='1' name='CC_SPRITEBATCHNODE_RENDER_SUBPIXEL'/>
<enum value='0' name='CC_SPRITE_DEBUG_DRAW'/>
<enum value='0' name='CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP'/>
<enum value='1' name='CC_TEXTURE_ATLAS_USE_VAO'/>
<enum value='1' name='CC_USE_LA88_LABELS'/>
<enum value='131072' name='COCOS2D_VERSION'/>
<enum value='10' name='HASH_BKT_CAPACITY_THRESH'/>
<enum value='2971803890' name='HASH_BLOOM_SIGNATURE'/>
<enum value='32' name='HASH_INITIAL_NUM_BUCKETS'/>
<enum value='5' name='HASH_INITIAL_NUM_BUCKETS_LOG2'/>
<enum value='2685476833' name='HASH_SIGNATURE'/>
<enum value='5' name='TGA_ERROR_COMPRESSED_FILE'/>
<enum value='1' name='TGA_ERROR_FILE_OPEN'/>
<enum value='3' name='TGA_ERROR_INDEXED_COLOR'/>
<enum value='4' name='TGA_ERROR_MEMORY'/>
<enum value='2' name='TGA_ERROR_READING_FILE'/>
<enum value='0' name='TGA_OK'/>
<enum value='2' name='TMXLayerAttribBase64'/>
<enum value='4' name='TMXLayerAttribGzip'/>
<enum value='1' name='TMXLayerAttribNone'/>
<enum value='8' name='TMXLayerAttribZlib'/>
<enum value='2' name='TMXPropertyLayer'/>
<enum value='1' name='TMXPropertyMap'/>
<enum value='0' name='TMXPropertyNone'/>
<enum value='4' name='TMXPropertyObject'/>
<enum value='3' name='TMXPropertyObjectGroup'/>
<enum value='5' name='TMXPropertyTile'/>
<enum value='-1' name='kCCActionTagInvalid'/>
<enum value='0' name='kCCDirectorProjection2D'/>
<enum value='1' name='kCCDirectorProjection3D'/>
<enum value='2' name='kCCDirectorProjectionCustom'/>
<enum value='1' name='kCCDirectorProjectionDefault'/>
<enum value='1' name='kCCDirectorResize_AutoScale'/>
<enum value='0' name='kCCDirectorResize_NoScale'/>
<enum value='3758096384' name='kCCFlipedAll'/>
<enum value='536870911' name='kCCFlippedMask'/>
<enum value='0' name='kCCImageFormatJPEG'/>
<enum value='1' name='kCCImageFormatPNG'/>
<enum value='32' name='kCCItemSize'/>
<enum value='-1' name='kCCLabelAutomaticWidth'/>
<enum value='1' name='kCCLineBreakModeCharacterWrap'/>
<enum value='2' name='kCCLineBreakModeClip'/>
<enum value='3' name='kCCLineBreakModeHeadTruncation'/>
<enum value='5' name='kCCLineBreakModeMiddleTruncation'/>
<enum value='4' name='kCCLineBreakModeTailTruncation'/>
<enum value='0' name='kCCLineBreakModeWordWrap'/>
<enum value='168165376' name='kCCMacVersion_10_6'/>
<enum value='168230912' name='kCCMacVersion_10_7'/>
<enum value='168296448' name='kCCMacVersion_10_8'/>
<enum value='-128' name='kCCMenuHandlerPriority'/>
<enum value='1' name='kCCMenuStateTrackingTouch'/>
<enum value='0' name='kCCMenuStateWaiting'/>
<enum value='-1' name='kCCNodeTagInvalid'/>
<enum value='-1' name='kCCParticleDurationInfinity'/>
<enum value='0' name='kCCParticleModeGravity'/>
<enum value='1' name='kCCParticleModeRadius'/>
<enum value='-1' name='kCCParticleStartRadiusEqualToEndRadius'/>
<enum value='-1' name='kCCParticleStartSizeEqualToEndSize'/>
<enum value='0' name='kCCPositionTypeFree'/>
<enum value='2' name='kCCPositionTypeGrouped'/>
<enum value='1' name='kCCPositionTypeRelative'/>
<enum value='-2147483647' name='kCCPriorityNonSystemMin'/>
<enum value='-2147483648' name='kCCPrioritySystem'/>
<enum value='1' name='kCCProgressTimerTypeBar'/>
<enum value='0' name='kCCProgressTimerTypeRadial'/>
<enum value='4294967294' name='kCCRepeatForever'/>
<enum value='1' name='kCCResolutionMac'/>
<enum value='2' name='kCCResolutionMacRetinaDisplay'/>
<enum value='0' name='kCCResolutionUnknown'/>
<enum value='536870912' name='kCCTMXTileDiagonalFlag'/>
<enum value='2147483648' name='kCCTMXTileHorizontalFlag'/>
<enum value='1073741824' name='kCCTMXTileVerticalFlag'/>
<enum value='1' name='kCCTextAlignmentCenter'/>
<enum value='0' name='kCCTextAlignmentLeft'/>
<enum value='2' name='kCCTextAlignmentRight'/>
<enum value='3' name='kCCTexture2DPixelFormat_A8'/>
<enum value='5' name='kCCTexture2DPixelFormat_AI88'/>
<enum value='0' name='kCCTexture2DPixelFormat_Default'/>
<enum value='4' name='kCCTexture2DPixelFormat_I8'/>
<enum value='9' name='kCCTexture2DPixelFormat_PVRTC2'/>
<enum value='8' name='kCCTexture2DPixelFormat_PVRTC4'/>
<enum value='2' name='kCCTexture2DPixelFormat_RGB565'/>
<enum value='7' name='kCCTexture2DPixelFormat_RGB5A1'/>
<enum value='1' name='kCCTexture2DPixelFormat_RGB888'/>
<enum value='6' name='kCCTexture2DPixelFormat_RGBA4444'/>
<enum value='0' name='kCCTexture2DPixelFormat_RGBA8888'/>
<enum value='0' name='kCCUniformMVPMatrix'/>
<enum value='1' name='kCCUniformSampler'/>
<enum value='2' name='kCCUniform_MAX'/>
<enum value='2' name='kCCVertexAttribFlag_Color'/>
<enum value='0' name='kCCVertexAttribFlag_None'/>
<enum value='7' name='kCCVertexAttribFlag_PosColorTex'/>
<enum value='1' name='kCCVertexAttribFlag_Position'/>
<enum value='4' name='kCCVertexAttribFlag_TexCoords'/>
<enum value='1' name='kCCVertexAttrib_Color'/>
<enum value='3' name='kCCVertexAttrib_MAX'/>
<enum value='0' name='kCCVertexAttrib_Position'/>
<enum value='2' name='kCCVertexAttrib_TexCoords'/>
<enum value='2' name='kCCVerticalTextAlignmentBottom'/>
<enum value='1' name='kCCVerticalTextAlignmentCenter'/>
<enum value='0' name='kCCVerticalTextAlignmentTop'/>
<enum value='67108864' name='kCCiOSVersion_4_0'/>
<enum value='67109120' name='kCCiOSVersion_4_0_1'/>
<enum value='67174400' name='kCCiOSVersion_4_1'/>
<enum value='67239936' name='kCCiOSVersion_4_2'/>
<enum value='67240192' name='kCCiOSVersion_4_2_1'/>
<enum value='67305472' name='kCCiOSVersion_4_3'/>
<enum value='67305728' name='kCCiOSVersion_4_3_1'/>
<enum value='67305984' name='kCCiOSVersion_4_3_2'/>
<enum value='67306240' name='kCCiOSVersion_4_3_3'/>
<enum value='67306496' name='kCCiOSVersion_4_3_4'/>
<enum value='67306752' name='kCCiOSVersion_4_3_5'/>
<enum value='83886080' name='kCCiOSVersion_5_0'/>
<enum value='83886336' name='kCCiOSVersion_5_0_1'/>
<enum value='83951616' name='kCCiOSVersion_5_1_0'/>
<enum value='100663296' name='kCCiOSVersion_6_0_0'/>
<enum value='1' name='kOrientationDownOver'/>
<enum value='0' name='kOrientationLeftOver'/>
<enum value='1' name='kOrientationRightOver'/>
<enum value='0' name='kOrientationUpOver'/>
<enum value='-1' name='kParticleDurationInfinity'/>
<enum value='-1' name='kParticleStartSizeEqualToEndSize'/>
<enum value='0' name='kPositionTypeFree'/>
<enum value='2' name='kPositionTypeGrouped'/>
<function name='CCProfilingBeginTimingBlock'>
<arg declared_type='NSString*' name='timerName' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CCProfilingEndTimingBlock'>
<arg declared_type='NSString*' name='timerName' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CCProfilingResetTimingBlock'>
<arg declared_type='NSString*' name='timerName' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CGAffineToGL'>
<arg type64='^{CGAffineTransform=dddddd}' declared_type='CGAffineTransform*' name='t' type='^{CGAffineTransform=ffffff}' const='true'/>
<arg declared_type='GLfloat*' name='m' type='^f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='FNTConfigLoadFile'>
<arg declared_type='NSString*' name='file' type='@'/>
<retval declared_type='CCBMFontConfiguration*' type='@'/>
</function>
<function name='FNTConfigRemoveCache'>
<retval declared_type='void' type='v'/>
</function>
<function name='GLToCGAffine'>
<arg declared_type='GLfloat*' name='m' type='^f' const='true'/>
<arg type64='^{CGAffineTransform=dddddd}' declared_type='CGAffineTransform*' name='t' type='^{CGAffineTransform=ffffff}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='base64Decode'>
<arg declared_type='unsigned char*' name='in' type='*'/>
<arg declared_type='unsigned int' name='inLength' type='I'/>
<arg declared_type='unsigned char**' name='out' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='ccArrayAppendArray'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='plusArr' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayAppendArrayWithResize'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='plusArr' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayAppendObject'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg declared_type='id' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayAppendObjectWithResize'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg declared_type='id' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayContainsObject'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg declared_type='id' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccArrayDoubleCapacity'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayEnsureExtraCapacity'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg type64='Q' declared_type='NSUInteger' name='extra' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayFastRemoveObject'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg declared_type='id' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayFastRemoveObjectAtIndex'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayFree'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayFullRemoveArray'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='minusArr' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayGetIndexOfObject'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg declared_type='id' name='object' type='@'/>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</function>
<function name='ccArrayInsertObjectAtIndex'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg declared_type='id' name='object' type='@'/>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayMakeObjectPerformSelectorWithArrayObjects'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg declared_type='SEL' name='sel' type=':'/>
<arg declared_type='id' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayMakeObjectsPerformSelector'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg declared_type='SEL' name='sel' type=':'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayMakeObjectsPerformSelectorWithObject'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg declared_type='SEL' name='sel' type=':'/>
<arg declared_type='id' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayNew'>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I'/>
<retval type64='^{ccArray=QQ^@}' declared_type='ccArray*' type='^{ccArray=II^@}'/>
</function>
<function name='ccArrayRemoveAllObjects'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayRemoveArray'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='minusArr' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayRemoveObject'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg declared_type='id' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayRemoveObjectAtIndex'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArrayShrink'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccArraySwapObjectsAtIndexes'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='arr' type='^{ccArray=II^@}'/>
<arg type64='Q' declared_type='NSUInteger' name='index1' type='I'/>
<arg type64='Q' declared_type='NSUInteger' name='index2' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayAppendArray'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='arr' type='^{ccArray=II^@}'/>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='plusArr' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayAppendArrayWithResize'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='arr' type='^{ccArray=II^@}'/>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='plusArr' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayAppendValue'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='arr' type='^{ccArray=II^@}'/>
<arg declared_type='CCARRAY_ID' name='value' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayAppendValueWithResize'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='arr' type='^{ccArray=II^@}'/>
<arg declared_type='CCARRAY_ID' name='value' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayContainsValue'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='arr' type='^{ccArray=II^@}'/>
<arg declared_type='CCARRAY_ID' name='value' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccCArrayDoubleCapacity'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='arr' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayEnsureExtraCapacity'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='arr' type='^{ccArray=II^@}'/>
<arg type64='Q' declared_type='NSUInteger' name='extra' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayFastRemoveValueAtIndex'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='arr' type='^{ccArray=II^@}'/>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayFree'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='arr' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayFullRemoveArray'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='arr' type='^{ccArray=II^@}'/>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='minusArr' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayGetIndexOfValue'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='arr' type='^{ccArray=II^@}'/>
<arg declared_type='CCARRAY_ID' name='value' type='@'/>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</function>
<function name='ccCArrayInsertValueAtIndex'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='arr' type='^{ccArray=II^@}'/>
<arg declared_type='CCARRAY_ID' name='value' type='@'/>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayNew'>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I'/>
<retval type64='^{ccArray=QQ^@}' declared_type='ccCArray*' type='^{ccArray=II^@}'/>
</function>
<function name='ccCArrayRemoveAllValues'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='arr' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayRemoveArray'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='arr' type='^{ccArray=II^@}'/>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='minusArr' type='^{ccArray=II^@}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayRemoveValue'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='arr' type='^{ccArray=II^@}'/>
<arg declared_type='CCARRAY_ID' name='value' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCArrayRemoveValueAtIndex'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='arr' type='^{ccArray=II^@}'/>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccCardinalSplineAt'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='p0' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='p1' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='p2' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='p3' type='{CGPoint=ff}'/>
<arg type64='d' declared_type='CGFloat' name='tension' type='f'/>
<arg declared_type='ccTime' name='t' type='f'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccDrawCardinalSpline'>
<arg declared_type='CCPointArray*' name='config' type='@'/>
<arg type64='d' declared_type='CGFloat' name='tension' type='f'/>
<arg type64='Q' declared_type='NSUInteger' name='segments' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawCatmullRom'>
<arg declared_type='CCPointArray*' name='arrayOfControlPoints' type='@'/>
<arg type64='Q' declared_type='NSUInteger' name='segments' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawCircle'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='center' type='{CGPoint=ff}'/>
<arg declared_type='float' name='radius' type='f'/>
<arg declared_type='float' name='angle' type='f'/>
<arg type64='Q' declared_type='NSUInteger' name='segments' type='I'/>
<arg declared_type='BOOL' name='drawLineToCenter' type='B'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawColor4B'>
<arg declared_type='GLubyte' name='r' type='C'/>
<arg declared_type='GLubyte' name='g' type='C'/>
<arg declared_type='GLubyte' name='b' type='C'/>
<arg declared_type='GLubyte' name='a' type='C'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawColor4F'>
<arg declared_type='GLfloat' name='r' type='f'/>
<arg declared_type='GLfloat' name='g' type='f'/>
<arg declared_type='GLfloat' name='b' type='f'/>
<arg declared_type='GLfloat' name='a' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawCubicBezier'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='origin' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='control1' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='control2' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='destination' type='{CGPoint=ff}'/>
<arg type64='Q' declared_type='NSUInteger' name='segments' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawLine'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='origin' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='destination' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawPoint'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='point' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawPoints'>
<arg type64='^{CGPoint=dd}' declared_type='CGPoint*' name='points' type='^{CGPoint=ff}' const='true'/>
<arg type64='Q' declared_type='NSUInteger' name='numberOfPoints' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawPoly'>
<arg type64='^{CGPoint=dd}' declared_type='CGPoint*' name='vertices' type='^{CGPoint=ff}' const='true'/>
<arg type64='Q' declared_type='NSUInteger' name='numOfVertices' type='I'/>
<arg declared_type='BOOL' name='closePolygon' type='B'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawQuadBezier'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='origin' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='control' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='destination' type='{CGPoint=ff}'/>
<arg type64='Q' declared_type='NSUInteger' name='segments' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawRect'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='origin' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='destination' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawSolidPoly'>
<arg type64='^{CGPoint=dd}' declared_type='CGPoint*' name='poli' type='^{CGPoint=ff}' const='true'/>
<arg type64='Q' declared_type='NSUInteger' name='numberOfPoints' type='I'/>
<arg declared_type='ccColor4F' name='color' type='{ccColor4F=ffff}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccDrawSolidRect'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='origin' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='destination' type='{CGPoint=ff}'/>
<arg declared_type='ccColor4F' name='color' type='{ccColor4F=ffff}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLActiveTexture'>
<arg declared_type='GLenum' name='textureEnum' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLBindTexture2D'>
<arg declared_type='GLuint' name='textureId' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLBlendFunc'>
<arg declared_type='GLenum' name='sfactor' type='I'/>
<arg declared_type='GLenum' name='dfactor' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLDeleteProgram'>
<arg declared_type='GLuint' name='program' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLDeleteTexture'>
<arg declared_type='GLuint' name='textureId' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLEnable'>
<arg declared_type='ccGLServerState' name='flags' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLEnableVertexAttribs'>
<arg declared_type='unsigned int' name='flags' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLGetActiveTexture'>
<retval declared_type='GLenum' type='I'/>
</function>
<function name='ccGLInvalidateStateCache'>
<retval declared_type='void' type='v'/>
</function>
<function name='ccGLUseProgram'>
<arg declared_type='GLuint' name='program' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccInflateCCZFile'>
<arg declared_type='char*' name='filename' type='*' const='true'/>
<arg declared_type='unsigned char**' name='out' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='ccInflateGZipFile'>
<arg declared_type='char*' name='filename' type='*' const='true'/>
<arg declared_type='unsigned char**' name='out' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='ccInflateMemory'>
<arg declared_type='unsigned char*' name='in' type='*'/>
<arg declared_type='unsigned int' name='inLength' type='I'/>
<arg declared_type='unsigned char**' name='out' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='ccInflateMemoryWithHint'>
<arg declared_type='unsigned char*' name='in' type='*'/>
<arg declared_type='unsigned int' name='inLength' type='I'/>
<arg declared_type='unsigned char**' name='out' type='^*'/>
<arg declared_type='unsigned int' name='outLenghtHint' type='I'/>
<retval declared_type='int' type='i'/>
</function>
<function name='ccLoadFileIntoMemory'>
<arg declared_type='char*' name='filename' type='*' const='true'/>
<arg declared_type='unsigned char**' name='out' type='^*'/>
<retval type64='q' declared_type='NSInteger' type='i'/>
</function>
<function name='ccNextPOT'>
<arg type64='Q' declared_type='unsigned long' name='value' type='L'/>
<retval type64='Q' declared_type='unsigned long' type='L'/>
</function>
<function name='ccPointSize'>
<arg declared_type='GLfloat' name='pointSize' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccSetProjectionMatrixDirty'>
<retval declared_type='void' type='v'/>
</function>
<function name='ccVertexLineIntersect'>
<arg declared_type='float' name='Ax' type='f'/>
<arg declared_type='float' name='Ay' type='f'/>
<arg declared_type='float' name='Bx' type='f'/>
<arg declared_type='float' name='By' type='f'/>
<arg declared_type='float' name='Cx' type='f'/>
<arg declared_type='float' name='Cy' type='f'/>
<arg declared_type='float' name='Dx' type='f'/>
<arg declared_type='float' name='Dy' type='f'/>
<arg declared_type='float*' name='T' type='^f'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccVertexLineToPolygon'>
<arg type64='^{CGPoint=dd}' declared_type='CGPoint*' name='points' type='^{CGPoint=ff}'/>
<arg declared_type='float' name='stroke' type='f'/>
<arg declared_type='ccVertex2F*' name='vertices' type='^{_ccVertex2F=ff}'/>
<arg type64='Q' declared_type='NSUInteger' name='offset' type='I'/>
<arg type64='Q' declared_type='NSUInteger' name='nuPoints' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='cc_insertionSort'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='arr' type='^{ccArray=II^@}'/>
<arg declared_type='cc_comparator' name='comparator' type='^?' function_pointer='true'>
<arg declared_type='void*' type='^v' const='true'/>
<arg declared_type='void*' type='^v' const='true'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='cc_mergesortL'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccCArray*' name='array' type='^{ccArray=II^@}'/>
<arg type64='Q' declared_type='size_t' name='width' type='L'/>
<arg declared_type='cc_comparator' name='comparator' type='^?' function_pointer='true'>
<arg declared_type='void*' type='^v' const='true'/>
<arg declared_type='void*' type='^v' const='true'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='cc_pointerswap'>
<arg declared_type='void*' name='a' type='^v'/>
<arg declared_type='void*' name='b' type='^v'/>
<arg type64='Q' declared_type='size_t' name='width' type='L'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ccc3' inline='true'>
<arg declared_type='GLubyte' name='r' type='C' const='true'/>
<arg declared_type='GLubyte' name='g' type='C' const='true'/>
<arg declared_type='GLubyte' name='b' type='C' const='true'/>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</function>
<function name='ccc4' inline='true'>
<arg declared_type='GLubyte' name='r' type='C' const='true'/>
<arg declared_type='GLubyte' name='g' type='C' const='true'/>
<arg declared_type='GLubyte' name='b' type='C' const='true'/>
<arg declared_type='GLubyte' name='o' type='C' const='true'/>
<retval declared_type='ccColor4B' type='{_ccColor4B=CCCC}'/>
</function>
<function name='ccc4FEqual' inline='true'>
<arg declared_type='ccColor4F' name='a' type='{ccColor4F=ffff}'/>
<arg declared_type='ccColor4F' name='b' type='{ccColor4F=ffff}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccc4FFromccc3B' inline='true'>
<arg declared_type='ccColor3B' name='c' type='{_ccColor3B=CCC}'/>
<retval declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
</function>
<function name='ccc4FFromccc4B' inline='true'>
<arg declared_type='ccColor4B' name='c' type='{_ccColor4B=CCCC}'/>
<retval declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
</function>
<function name='ccc4f' inline='true'>
<arg declared_type='GLfloat' name='r' type='f' const='true'/>
<arg declared_type='GLfloat' name='g' type='f' const='true'/>
<arg declared_type='GLfloat' name='b' type='f' const='true'/>
<arg declared_type='GLfloat' name='a' type='f' const='true'/>
<retval declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
</function>
<function name='ccg' inline='true'>
<arg type64='q' declared_type='NSInteger' name='x' type='i' const='true'/>
<arg type64='q' declared_type='NSInteger' name='y' type='i' const='true'/>
<retval type64='{_ccGridSize=qq}' declared_type='ccGridSize' type='{_ccGridSize=ii}'/>
</function>
<function name='ccpAdd' inline='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v1' type='{CGPoint=ff}' const='true'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v2' type='{CGPoint=ff}' const='true'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpAngle'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='a' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='b' type='{CGPoint=ff}'/>
<retval declared_type='float' type='f'/>
</function>
<function name='ccpAngleSigned'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='a' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='b' type='{CGPoint=ff}'/>
<retval declared_type='float' type='f'/>
</function>
<function name='ccpClamp'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='p' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='from' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='to' type='{CGPoint=ff}'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpCompMult'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='a' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='b' type='{CGPoint=ff}'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpCompOp'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='p' type='{CGPoint=ff}'/>
<arg declared_type='float (*)(float)' name='opFunc' type='^?' function_pointer='true'>
<arg declared_type='float' type='f'/>
<retval declared_type='float' type='f'/>
</arg>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpCross' inline='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v1' type='{CGPoint=ff}' const='true'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v2' type='{CGPoint=ff}' const='true'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='ccpDistance'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v1' type='{CGPoint=ff}' const='true'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v2' type='{CGPoint=ff}' const='true'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='ccpDistanceSQ' inline='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='p1' type='{CGPoint=ff}' const='true'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='p2' type='{CGPoint=ff}' const='true'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='ccpDot' inline='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v1' type='{CGPoint=ff}' const='true'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v2' type='{CGPoint=ff}' const='true'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='ccpForAngle'>
<arg type64='d' declared_type='CGFloat' name='a' type='f' const='true'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpFromSize'>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='s' type='{CGSize=ff}'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpFuzzyEqual'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='a' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='b' type='{CGPoint=ff}'/>
<arg declared_type='float' name='variance' type='f'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccpIntersectPoint'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='A' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='B' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='C' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='D' type='{CGPoint=ff}'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpLength'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v' type='{CGPoint=ff}' const='true'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='ccpLengthSQ' inline='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v' type='{CGPoint=ff}' const='true'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='ccpLerp'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='a' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='b' type='{CGPoint=ff}'/>
<arg declared_type='float' name='alpha' type='f'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpLineIntersect'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='p1' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='p2' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='p3' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='p4' type='{CGPoint=ff}'/>
<arg declared_type='float*' name='s' type='^f'/>
<arg declared_type='float*' name='t' type='^f'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccpMidpoint' inline='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v1' type='{CGPoint=ff}' const='true'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v2' type='{CGPoint=ff}' const='true'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpMult' inline='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v' type='{CGPoint=ff}' const='true'/>
<arg type64='d' declared_type='CGFloat' name='s' type='f' const='true'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpNeg' inline='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v' type='{CGPoint=ff}' const='true'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpNormalize'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v' type='{CGPoint=ff}' const='true'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpPerp' inline='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v' type='{CGPoint=ff}' const='true'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpProject' inline='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v1' type='{CGPoint=ff}' const='true'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v2' type='{CGPoint=ff}' const='true'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpRPerp' inline='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v' type='{CGPoint=ff}' const='true'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpRotate' inline='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v1' type='{CGPoint=ff}' const='true'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v2' type='{CGPoint=ff}' const='true'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpRotateByAngle'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='pivot' type='{CGPoint=ff}'/>
<arg declared_type='float' name='angle' type='f'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpSegmentIntersect'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='A' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='B' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='C' type='{CGPoint=ff}'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='D' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='ccpSub' inline='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v1' type='{CGPoint=ff}' const='true'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v2' type='{CGPoint=ff}' const='true'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='ccpToAngle'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v' type='{CGPoint=ff}' const='true'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='ccpUnrotate' inline='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v1' type='{CGPoint=ff}' const='true'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v2' type='{CGPoint=ff}' const='true'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='clampf'>
<arg declared_type='float' name='value' type='f'/>
<arg declared_type='float' name='min_inclusive' type='f'/>
<arg declared_type='float' name='max_inclusive' type='f'/>
<retval declared_type='float' type='f'/>
</function>
<function name='cocos2dVersion'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='tgaDestroy'>
<arg declared_type='tImageTGA*' name='info' type='^{sImageTGA=iCCss*i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='tgaLoad'>
<arg declared_type='char*' name='filename' type='*' const='true'/>
<retval declared_type='tImageTGA*' type='^{sImageTGA=iCCss*i}'/>
</function>
<function name='tgaLoadHeader'>
<arg declared_type='FILE*' name='file' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg declared_type='tImageTGA*' name='info' type='^{sImageTGA=iCCss*i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='tgaLoadImageData'>
<arg declared_type='FILE*' name='file' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg declared_type='tImageTGA*' name='info' type='^{sImageTGA=iCCss*i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='tgaRGBtogreyscale'>
<arg declared_type='tImageTGA*' name='info' type='^{sImageTGA=iCCss*i}'/>
<retval declared_type='void' type='v'/>
</function>
<function_alias original='NSPointToCGPoint' name='CCNSPointToCGPoint'/>
<function_alias original='NSRectToCGRect' name='CCNSRectToCGRect'/>
<function_alias original='NSSizeToCGSize' name='CCNSSizeToCGSize'/>
<function_alias original='glBindVertexArrayAPPLE' name='glBindVertexArray'/>
<function_alias original='glDeleteVertexArraysAPPLE' name='glDeleteVertexArrays'/>
<function_alias original='glGenVertexArraysAPPLE' name='glGenVertexArrays'/>
<class name='CCAccelAmplitude'>
<method selector='actionWithAction:duration:' class_method='true'>
<arg declared_type='CCAction*' name='action' type='@' index='0'/>
<arg declared_type='ccTime' name='d' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:duration:'>
<arg declared_type='CCAction*' name='action' type='@' index='0'/>
<arg declared_type='ccTime' name='d' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' name='rate' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCAccelDeccelAmplitude'>
<method selector='actionWithAction:duration:' class_method='true'>
<arg declared_type='CCAction*' name='action' type='@' index='0'/>
<arg declared_type='ccTime' name='d' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:duration:'>
<arg declared_type='CCAction*' name='action' type='@' index='0'/>
<arg declared_type='ccTime' name='d' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' name='rate' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCAction'>
<method selector='action' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='copyWithZone:'>
<arg declared_type='NSZone*' name='zone' type='^{_NSZone=}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isDone'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='originalTarget'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setTag:'>
<arg type64='q' declared_type='NSInteger' name='tag' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startWithTarget:'>
<arg declared_type='id' name='target' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='step:'>
<arg declared_type='ccTime' name='dt' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tag'>
<retval type64='q' declared_type='NSInteger' type='i'/>
</method>
<method selector='target'>
<retval declared_type='id' type='@'/>
</method>
<method selector='update:'>
<arg declared_type='ccTime' name='time' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCActionCamera'>
<method selector='startWithTarget:'>
<arg declared_type='id' name='aTarget' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCActionEase'>
<method selector='actionWithAction:' class_method='true'>
<arg declared_type='CCActionInterval*' name='action' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:'>
<arg declared_type='CCActionInterval*' name='action' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCActionInstant'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCActionInterval'>
<method selector='actionWithDuration:' class_method='true'>
<arg declared_type='ccTime' name='d' type='f' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='elapsed'>
<retval declared_type='ccTime' type='f'/>
</method>
<method selector='initWithDuration:'>
<arg declared_type='ccTime' name='d' type='f' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isDone'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reverse'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
</class>
<class name='CCActionManager'>
<method selector='addAction:target:paused:'>
<arg declared_type='CCAction*' name='action' type='@' index='0'/>
<arg declared_type='id' name='target' type='@' index='1'/>
<arg declared_type='BOOL' name='paused' type='B' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getActionByTag:target:'>
<arg type64='q' declared_type='NSInteger' name='tag' type='i' index='0'/>
<arg declared_type='id' name='target' type='@' index='1'/>
<retval declared_type='CCAction*' type='@'/>
</method>
<method selector='numberOfRunningActionsInTarget:'>
<arg declared_type='id' name='target' type='@' index='0'/>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='pauseAllRunningActions'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='pauseTarget:'>
<arg declared_type='id' name='target' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAction:'>
<arg declared_type='CCAction*' name='action' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeActionByTag:target:'>
<arg type64='q' declared_type='NSInteger' name='tag' type='i' index='0'/>
<arg declared_type='id' name='target' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllActions'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllActionsFromTarget:'>
<arg declared_type='id' name='target' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeTarget:'>
<arg declared_type='id' name='target' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeTargets:'>
<arg declared_type='NSSet*' name='targetsToResume' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCActionTween'>
<method selector='actionWithDuration:key:from:to:' class_method='true'>
<arg declared_type='ccTime' name='aDuration' type='f' index='0'/>
<arg declared_type='NSString*' name='key' type='@' index='1'/>
<arg declared_type='float' name='from' type='f' index='2'/>
<arg declared_type='float' name='to' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:key:from:to:'>
<arg declared_type='ccTime' name='aDuration' type='f' index='0'/>
<arg declared_type='NSString*' name='key' type='@' index='1'/>
<arg declared_type='float' name='from' type='f' index='2'/>
<arg declared_type='float' name='to' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCAnimate'>
<method selector='actionWithAnimation:' class_method='true'>
<arg declared_type='CCAnimation*' name='animation' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='animation'>
<retval declared_type='CCAnimation*' type='@'/>
</method>
<method selector='initWithAnimation:'>
<arg declared_type='CCAnimation*' name='animation' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAnimation:'>
<arg declared_type='CCAnimation*' name='animation' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCAnimation'>
<method selector='addSpriteFrame:'>
<arg declared_type='CCSpriteFrame*' name='frame' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFrameWithFilename:'>
<arg declared_type='NSString*' name='filename' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFrameWithTexture:rect:'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animation' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='animationWithAnimationFrames:delayPerUnit:loops:' class_method='true'>
<arg declared_type='NSArray*' name='arrayOfAnimationFrames' type='@' index='0'/>
<arg declared_type='float' name='delayPerUnit' type='f' index='1'/>
<arg type64='Q' declared_type='NSUInteger' name='loops' type='I' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='animationWithSpriteFrames:' class_method='true'>
<arg declared_type='NSArray*' name='arrayOfSpriteFrameNames' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='animationWithSpriteFrames:delay:' class_method='true'>
<arg declared_type='NSArray*' name='arrayOfSpriteFrameNames' type='@' index='0'/>
<arg declared_type='float' name='delay' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='delayPerUnit'>
<retval declared_type='float' type='f'/>
</method>
<method selector='duration'>
<retval declared_type='float' type='f'/>
</method>
<method selector='frames'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='initWithAnimationFrames:delayPerUnit:loops:'>
<arg declared_type='NSArray*' name='arrayOfAnimationFrames' type='@' index='0'/>
<arg declared_type='float' name='delayPerUnit' type='f' index='1'/>
<arg type64='Q' declared_type='NSUInteger' name='loops' type='I' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSpriteFrames:'>
<arg declared_type='NSArray*' name='arrayOfSpriteFrameNames' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSpriteFrames:delay:'>
<arg declared_type='NSArray*' name='arrayOfSpriteFrameNames' type='@' index='0'/>
<arg declared_type='float' name='delay' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='loops'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='restoreOriginalFrame'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDelayPerUnit:'>
<arg declared_type='float' name='delayPerUnit' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrames:'>
<arg declared_type='NSMutableArray*' name='frames' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLoops:'>
<arg type64='Q' declared_type='NSUInteger' name='loops' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRestoreOriginalFrame:'>
<arg declared_type='BOOL' name='restoreOriginalFrame' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='totalDelayUnits'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='CCAnimationCache'>
<method selector='addAnimation:name:'>
<arg declared_type='CCAnimation*' name='animation' type='@' index='0'/>
<arg declared_type='NSString*' name='name' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAnimationsWithDictionary:'>
<arg declared_type='NSDictionary*' name='dictionary' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAnimationsWithFile:'>
<arg declared_type='NSString*' name='plist' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationByName:'>
<arg declared_type='NSString*' name='name' type='@' index='0'/>
<retval declared_type='CCAnimation*' type='@'/>
</method>
<method selector='purgeSharedAnimationCache' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAnimationByName:'>
<arg declared_type='NSString*' name='name' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedAnimationCache' class_method='true'>
<retval declared_type='CCAnimationCache*' type='@'/>
</method>
</class>
<class name='CCAnimationFrame'>
<method selector='delayUnits'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithSpriteFrame:delayUnits:userInfo:'>
<arg declared_type='CCSpriteFrame*' name='spriteFrame' type='@' index='0'/>
<arg declared_type='float' name='delayUnits' type='f' index='1'/>
<arg declared_type='NSDictionary*' name='userInfo' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDelayUnits:'>
<arg declared_type='float' name='delayUnits' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpriteFrame:'>
<arg declared_type='CCSpriteFrame*' name='spriteFrame' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='NSDictionary*' name='userInfo' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='spriteFrame'>
<retval declared_type='CCSpriteFrame*' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='CCArray'>
<method selector='addObject:'>
<arg declared_type='id' name='object' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObjectsFromArray:'>
<arg declared_type='CCArray*' name='otherArray' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObjectsFromNSArray:'>
<arg declared_type='NSArray*' name='otherArray' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='array' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='arrayWithArray:' class_method='true'>
<arg declared_type='CCArray*' name='otherArray' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='arrayWithCapacity:' class_method='true'>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='arrayWithNSArray:' class_method='true'>
<arg declared_type='NSArray*' name='otherArray' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='capacity'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='containsObject:'>
<arg declared_type='id' name='object' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='count'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='exchangeObject:withObject:'>
<arg declared_type='id' name='object1' type='@' index='0'/>
<arg declared_type='id' name='object2' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='exchangeObjectAtIndex:withObjectAtIndex:'>
<arg type64='Q' declared_type='NSUInteger' name='index1' type='I' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='index2' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fastRemoveObject:'>
<arg declared_type='id' name='object' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fastRemoveObjectAtIndex:'>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getNSArray'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='indexOfObject:'>
<arg declared_type='id' name='object' type='@' index='0'/>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='initWithArray:'>
<arg declared_type='CCArray*' name='otherArray' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCapacity:'>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithNSArray:'>
<arg declared_type='NSArray*' name='otherArray' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertObject:atIndex:'>
<arg declared_type='id' name='object' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertionSort:'>
<arg declared_type='SEL' name='selector' type=':' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertionSortUsingCFuncComparator:'>
<arg declared_type='int (*)(void *, void *)' name='comparator' type='^?' index='0' function_pointer='true'>
<arg declared_type='void*' type='^v' const='true'/>
<arg declared_type='void*' type='^v' const='true'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEqualToArray:'>
<arg declared_type='CCArray*' name='otherArray' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lastObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='makeObjectPerformSelectorWithArrayObjects:selector:'>
<arg declared_type='id' name='object' type='@' index='0'/>
<arg declared_type='SEL' name='aSelector' type=':' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeObjectsPerformSelector:'>
<arg declared_type='SEL' name='aSelector' type=':' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeObjectsPerformSelector:withObject:'>
<arg declared_type='SEL' name='aSelector' type=':' index='0'/>
<arg declared_type='id' name='object' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mergesortLUsingCFuncComparator:'>
<arg declared_type='int (*)(void *, void *)' name='comparator' type='^?' index='0' function_pointer='true'>
<arg declared_type='void*' type='^v' const='true'/>
<arg declared_type='void*' type='^v' const='true'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectAtIndex:'>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='qsortUsingCFuncComparator:'>
<arg declared_type='int (*)(void *, void *)' name='comparator' type='^?' index='0' function_pointer='true'>
<arg declared_type='void*' type='^v' const='true'/>
<arg declared_type='void*' type='^v' const='true'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='randomObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='reduceMemoryFootprint'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeLastObject'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObject:'>
<arg declared_type='id' name='object' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectAtIndex:'>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsInArray:'>
<arg declared_type='CCArray*' name='otherArray' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceObjectAtIndex:withObject:'>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='0'/>
<arg declared_type='id' name='anObject' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reverseObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortUsingFunction:context:'>
<arg declared_type='NSInteger (*)(id, id, void *)' name='compare' type='^?' index='0' function_pointer='true'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval type64='q' declared_type='NSInteger' type='i'/>
</arg>
<arg declared_type='void*' name='context' type='^v' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCAtlasNode'>
<method selector='atlasWithTileFile:tileWidth:tileHeight:itemsToRender:' class_method='true'>
<arg declared_type='NSString*' name='tile' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='w' type='I' index='1'/>
<arg type64='Q' declared_type='NSUInteger' name='h' type='I' index='2'/>
<arg type64='Q' declared_type='NSUInteger' name='c' type='I' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='initWithTileFile:tileWidth:tileHeight:itemsToRender:'>
<arg declared_type='NSString*' name='tile' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='w' type='I' index='1'/>
<arg type64='Q' declared_type='NSUInteger' name='h' type='I' index='2'/>
<arg type64='Q' declared_type='NSUInteger' name='c' type='I' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='quadsToDraw'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='setBlendFunc:'>
<arg declared_type='ccBlendFunc' name='blendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='ccColor3B' name='color' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg declared_type='GLubyte' name='opacity' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuadsToDraw:'>
<arg type64='Q' declared_type='NSUInteger' name='quadsToDraw' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureAtlas:'>
<arg declared_type='CCTextureAtlas*' name='textureAtlas' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textureAtlas'>
<retval declared_type='CCTextureAtlas*' type='@'/>
</method>
<method selector='updateAtlasValues'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCBMFontConfiguration'>
<method selector='atlasName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='configurationWithFNTFile:' class_method='true'>
<arg declared_type='NSString*' name='FNTfile' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFNTfile:'>
<arg declared_type='NSString*' name='FNTfile' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAtlasName:'>
<arg declared_type='NSString*' name='atlasName' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCBezierBy'>
<method selector='actionWithDuration:bezier:' class_method='true'>
<arg declared_type='ccTime' name='t' type='f' index='0'/>
<arg type64='{_ccBezierConfig={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}}' declared_type='ccBezierConfig' name='c' type='{_ccBezierConfig={CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:bezier:'>
<arg declared_type='ccTime' name='t' type='f' index='0'/>
<arg type64='{_ccBezierConfig={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}}' declared_type='ccBezierConfig' name='c' type='{_ccBezierConfig={CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCBezierTo'>
<method selector='startWithTarget:'>
<arg declared_type='CCNode*' name='aTarget' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCBlink'>
<method selector='actionWithDuration:blinks:' class_method='true'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='blinks' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:blinks:'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='blinks' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCCallBlock'>
<method selector='actionWithBlock:' class_method='true'>
<arg declared_type='void (^)()' name='block' type='@?' index='0' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='execute'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBlock:'>
<arg declared_type='void (^)()' name='block' type='@?' index='0' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCCallBlockN'>
<method selector='actionWithBlock:' class_method='true'>
<arg declared_type='void (^)(CCNode *)' name='block' type='@?' index='0' function_pointer='true'>
<arg declared_type='CCNode*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='execute'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBlock:'>
<arg declared_type='void (^)(CCNode *)' name='block' type='@?' index='0' function_pointer='true'>
<arg declared_type='CCNode*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCCallBlockO'>
<method selector='actionWithBlock:object:' class_method='true'>
<arg declared_type='void (^)(id)' name='block' type='@?' index='0' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='id' name='object' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='execute'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBlock:object:'>
<arg declared_type='void (^)(id)' name='block' type='@?' index='0' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='id' name='object' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='object'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setObject:'>
<arg declared_type='id' name='object' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCallFunc'>
<method selector='actionWithTarget:selector:' class_method='true'>
<arg declared_type='id' name='t' type='@' index='0'/>
<arg declared_type='SEL' name='s' type=':' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='execute'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithTarget:selector:'>
<arg declared_type='id' name='t' type='@' index='0'/>
<arg declared_type='SEL' name='s' type=':' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setTargetCallback:'>
<arg declared_type='id' name='targetCallback' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetCallback'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCCallFuncN'>
<method selector='execute'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCallFuncND'>
<method selector='actionWithTarget:selector:data:' class_method='true'>
<arg declared_type='id' name='t' type='@' index='0'/>
<arg declared_type='SEL' name='s' type=':' index='1'/>
<arg declared_type='void*' name='d' type='^v' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='callbackMethod'>
<retval declared_type='CC_CALLBACK_ND' type='^?' function_pointer='true'>
<arg declared_type='id' type='@'/>
<arg declared_type='SEL' type=':'/>
<arg declared_type='id' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='initWithTarget:selector:data:'>
<arg declared_type='id' name='t' type='@' index='0'/>
<arg declared_type='SEL' name='s' type=':' index='1'/>
<arg declared_type='void*' name='d' type='^v' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setCallbackMethod:'>
<arg declared_type='CC_CALLBACK_ND' name='callbackMethod' type='^?' index='0' function_pointer='true'>
<arg declared_type='id' type='@'/>
<arg declared_type='SEL' type=':'/>
<arg declared_type='id' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCallFuncO'>
<method selector='actionWithTarget:selector:object:' class_method='true'>
<arg declared_type='id' name='t' type='@' index='0'/>
<arg declared_type='SEL' name='s' type=':' index='1'/>
<arg declared_type='id' name='object' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:selector:object:'>
<arg declared_type='id' name='t' type='@' index='0'/>
<arg declared_type='SEL' name='s' type=':' index='1'/>
<arg declared_type='id' name='object' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='object'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setObject:'>
<arg declared_type='id' name='object' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCamera'>
<method selector='centerX:centerY:centerZ:'>
<arg declared_type='float*' name='x' type='^f' index='0'/>
<arg declared_type='float*' name='y' type='^f' index='1'/>
<arg declared_type='float*' name='z' type='^f' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dirty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='eyeX:eyeY:eyeZ:'>
<arg declared_type='float*' name='x' type='^f' index='0'/>
<arg declared_type='float*' name='y' type='^f' index='1'/>
<arg declared_type='float*' name='z' type='^f' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getZEye' class_method='true'>
<retval declared_type='float' type='f'/>
</method>
<method selector='locate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='restore'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCenterX:centerY:centerZ:'>
<arg declared_type='float' name='x' type='f' index='0'/>
<arg declared_type='float' name='y' type='f' index='1'/>
<arg declared_type='float' name='z' type='f' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDirty:'>
<arg declared_type='BOOL' name='dirty' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEyeX:eyeY:eyeZ:'>
<arg declared_type='float' name='x' type='f' index='0'/>
<arg declared_type='float' name='y' type='f' index='1'/>
<arg declared_type='float' name='z' type='f' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpX:upY:upZ:'>
<arg declared_type='float' name='x' type='f' index='0'/>
<arg declared_type='float' name='y' type='f' index='1'/>
<arg declared_type='float' name='z' type='f' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='upX:upY:upZ:'>
<arg declared_type='float*' name='x' type='^f' index='0'/>
<arg declared_type='float*' name='y' type='^f' index='1'/>
<arg declared_type='float*' name='z' type='^f' index='2'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCardinalSplineBy'>
<method selector='startWithTarget:'>
<arg declared_type='id' name='target' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCardinalSplineTo'>
<method selector='actionWithDuration:points:tension:' class_method='true'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='CCPointArray*' name='points' type='@' index='1'/>
<arg type64='d' declared_type='CGFloat' name='tension' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:points:tension:'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='CCPointArray*' name='points' type='@' index='1'/>
<arg type64='d' declared_type='CGFloat' name='tension' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='points'>
<retval declared_type='CCPointArray*' type='@'/>
</method>
<method selector='setPoints:'>
<arg declared_type='CCPointArray*' name='points' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCCatmullRomBy'>
<method selector='actionWithDuration:points:' class_method='true'>
<arg declared_type='ccTime' name='dt' type='f' index='0'/>
<arg declared_type='CCPointArray*' name='points' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:points:'>
<arg declared_type='ccTime' name='dt' type='f' index='0'/>
<arg declared_type='CCPointArray*' name='points' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCCatmullRomTo'>
<method selector='actionWithDuration:points:' class_method='true'>
<arg declared_type='ccTime' name='dt' type='f' index='0'/>
<arg declared_type='CCPointArray*' name='points' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:points:'>
<arg declared_type='ccTime' name='dt' type='f' index='0'/>
<arg declared_type='CCPointArray*' name='points' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCConfiguration'>
<method selector='OSVersion'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='checkForGLExtension:'>
<arg declared_type='NSString*' name='searchName' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maxModelviewStackDepth'>
<retval declared_type='GLint' type='i'/>
</method>
<method selector='maxTextureSize'>
<retval declared_type='GLint' type='i'/>
</method>
<method selector='maxTextureUnits'>
<retval declared_type='GLint' type='i'/>
</method>
<method selector='sharedConfiguration' class_method='true'>
<retval declared_type='CCConfiguration*' type='@'/>
</method>
<method selector='supportsBGRA8888'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportsDiscardFramebuffer'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportsNPOT'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportsPVRTC'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportsShareableVAO'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='CCDeccelAmplitude'>
<method selector='actionWithAction:duration:' class_method='true'>
<arg declared_type='CCAction*' name='action' type='@' index='0'/>
<arg declared_type='ccTime' name='d' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:duration:'>
<arg declared_type='CCAction*' name='action' type='@' index='0'/>
<arg declared_type='ccTime' name='d' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' name='rate' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCDelayTime'>
<method selector='update:'>
<arg declared_type='ccTime' name='dt' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCDirector'>
<method selector='actionManager'>
<retval declared_type='CCActionManager*' type='@'/>
</method>
<method selector='animationInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='convertEventToGL:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='convertToGL:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='p' type='{CGPoint=ff}' index='0'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='convertToUI:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='p' type='{CGPoint=ff}' index='0'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='createStatsLabel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='displayStats'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawScene'>
<retval declared_type='void' type='v'/>
</method>
<method selector='end'>
<retval declared_type='void' type='v'/>
</method>
<method selector='eventDispatcher'>
<retval declared_type='CCEventDispatcher*' type='@'/>
</method>
<method selector='getZEye'>
<retval declared_type='float' type='f'/>
</method>
<method selector='isAnimating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nextDeltaTimeZero'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='notificationNode'>
<retval declared_type='id' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='popScene'>
<retval declared_type='void' type='v'/>
</method>
<method selector='popToRootScene'>
<retval declared_type='void' type='v'/>
</method>
<method selector='projection'>
<retval declared_type='ccDirectorProjection' type='i'/>
</method>
<method selector='purgeCachedData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='pushScene:'>
<arg declared_type='CCScene*' name='scene' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceScene:'>
<arg declared_type='CCScene*' name='scene' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reshapeProjection:'>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='newWindowSize' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runWithScene:'>
<arg declared_type='CCScene*' name='scene' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runningScene'>
<retval declared_type='CCScene*' type='@'/>
</method>
<method selector='runningThread'>
<retval declared_type='NSThread*' type='@'/>
</method>
<method selector='scheduler'>
<retval declared_type='CCScheduler*' type='@'/>
</method>
<method selector='secondsPerFrame'>
<retval declared_type='ccTime' type='f'/>
</method>
<method selector='sendCleanupToScene'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setActionManager:'>
<arg declared_type='CCActionManager*' name='actionManager' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlphaBlending:'>
<arg declared_type='BOOL' name='on' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationInterval:'>
<arg declared_type='NSTimeInterval' name='animationInterval' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' name='delegate' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthTest:'>
<arg declared_type='BOOL' name='on' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayStats:'>
<arg declared_type='BOOL' name='displayStats' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEventDispatcher:'>
<arg declared_type='CCEventDispatcher*' name='eventDispatcher' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGLDefaultValues'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNextDeltaTimeZero:'>
<arg declared_type='BOOL' name='nextDeltaTimeZero' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotificationNode:'>
<arg declared_type='id' name='notificationNode' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProjection:'>
<arg declared_type='ccDirectorProjection' name='projection' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScheduler:'>
<arg declared_type='CCScheduler*' name='scheduler' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setView:'>
<arg declared_type='CCGLView*' name='view' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedDirector' class_method='true'>
<retval declared_type='CCDirector*' type='@'/>
</method>
<method selector='startAnimation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAnimation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='totalFrames'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='view'>
<retval declared_type='CCGLView*' type='@'/>
</method>
<method selector='winSize'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='winSizeInPixels'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
</class>
<class name='CCDirectorMac'>
<method selector='convertToLogicalCoordinates:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='coordinates' type='{CGPoint=ff}' index='0'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='isFullScreen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='originalWinSize'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='resizeMode'>
<retval declared_type='int' type='i'/>
</method>
<method selector='setFullScreen:'>
<arg declared_type='BOOL' name='fullscreen' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOriginalWinSize:'>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='originalWinSize' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResizeMode:'>
<arg declared_type='int' name='resizeMode' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseElastic'>
<method selector='actionWithAction:period:' class_method='true'>
<arg declared_type='CCActionInterval*' name='action' type='@' index='0'/>
<arg declared_type='float' name='period' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:period:'>
<arg declared_type='CCActionInterval*' name='action' type='@' index='0'/>
<arg declared_type='float' name='period' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='period'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setPeriod:'>
<arg declared_type='float' name='period' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEaseRateAction'>
<method selector='actionWithAction:rate:' class_method='true'>
<arg declared_type='CCActionInterval*' name='action' type='@' index='0'/>
<arg declared_type='float' name='rate' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:rate:'>
<arg declared_type='CCActionInterval*' name='action' type='@' index='0'/>
<arg declared_type='float' name='rate' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' name='rate' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCEventDispatcher'>
<method selector='addKeyboardDelegate:priority:'>
<arg declared_type='id' name='delegate' type='@' index='0'/>
<arg type64='q' declared_type='NSInteger' name='priority' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addMouseDelegate:priority:'>
<arg declared_type='id' name='delegate' type='@' index='0'/>
<arg type64='q' declared_type='NSInteger' name='priority' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTouchDelegate:priority:'>
<arg declared_type='id' name='delegate' type='@' index='0'/>
<arg type64='q' declared_type='NSInteger' name='priority' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dispatchEvent:'>
<arg declared_type='CCEventObject*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dispatchEvents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeAllKeyboardDelegates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllMouseDelegates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllTouchDelegates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeKeyboardDelegate:'>
<arg declared_type='id' name='delegate' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeMouseDelegate:'>
<arg declared_type='id' name='delegate' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTouchDelegate:'>
<arg declared_type='id' name='delegate' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDispatchEvents:'>
<arg declared_type='BOOL' name='dispatchEvents' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCFadeIn'>
<method selector='update:'>
<arg declared_type='ccTime' name='dt' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCFadeOut'>
<method selector='update:'>
<arg declared_type='ccTime' name='dt' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCFadeTo'>
<method selector='actionWithDuration:opacity:' class_method='true'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='GLubyte' name='opactiy' type='C' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:opacity:'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='GLubyte' name='opacity' type='C' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCFileUtils'>
<method selector='bundle'>
<retval declared_type='NSBundle*' type='@'/>
</method>
<method selector='fileManager'>
<retval declared_type='NSFileManager*' type='@'/>
</method>
<method selector='fullPathFromRelativePath:'>
<arg declared_type='NSString*' name='relPath' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fullPathFromRelativePath:resolutionType:'>
<arg declared_type='NSString*' name='relPath' type='@' index='0'/>
<arg declared_type='ccResolutionType*' name='resolutionType' type='^i' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='purgeCachedEntries'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBundle:'>
<arg declared_type='NSBundle*' name='bundle' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileManager:'>
<arg declared_type='NSFileManager*' name='fileManager' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedFileUtils' class_method='true'>
<retval declared_type='CCFileUtils*' type='@'/>
</method>
</class>
<class name='CCFiniteTimeAction'>
<method selector='duration'>
<retval declared_type='ccTime' type='f'/>
</method>
<method selector='reverse'>
<retval declared_type='CCFiniteTimeAction*' type='@'/>
</method>
<method selector='setDuration:'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCFlipX'>
<method selector='actionWithFlipX:' class_method='true'>
<arg declared_type='BOOL' name='x' type='B' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFlipX:'>
<arg declared_type='BOOL' name='x' type='B' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCFlipX3D'>
<method selector='actionWithDuration:' class_method='true'>
<arg declared_type='ccTime' name='d' type='f' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:'>
<arg declared_type='ccTime' name='d' type='f' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCFlipY'>
<method selector='actionWithFlipY:' class_method='true'>
<arg declared_type='BOOL' name='y' type='B' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFlipY:'>
<arg declared_type='BOOL' name='y' type='B' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCFollow'>
<method selector='actionWithTarget:' class_method='true'>
<arg declared_type='CCNode*' name='followedNode' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionWithTarget:worldBoundary:' class_method='true'>
<arg declared_type='CCNode*' name='followedNode' type='@' index='0'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='boundarySet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithTarget:'>
<arg declared_type='CCNode*' name='followedNode' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:worldBoundary:'>
<arg declared_type='CCNode*' name='followedNode' type='@' index='0'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setBoundarySet:'>
<arg declared_type='BOOL' name='boundarySet' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCGLProgram'>
<method selector='addAttribute:index:'>
<arg declared_type='NSString*' name='attributeName' type='@' index='0'/>
<arg declared_type='GLuint' name='index' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fragmentShaderLog'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithVertexShaderByteArray:fragmentShaderByteArray:'>
<arg declared_type='GLchar*' name='vShaderByteArray' type='*' index='0' const='true'/>
<arg declared_type='GLchar*' name='fShaderByteArray' type='*' index='1' const='true'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithVertexShaderFilename:fragmentShaderFilename:'>
<arg declared_type='NSString*' name='vShaderFilename' type='@' index='0'/>
<arg declared_type='NSString*' name='fShaderFilename' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='link'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='programLog'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setUniformForModelViewProjectionMatrix'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:with2fv:count:'>
<arg type64='Q' declared_type='NSUInteger' name='location' type='I' index='0'/>
<arg declared_type='GLfloat*' name='floats' type='^f' index='1'/>
<arg type64='Q' declared_type='NSUInteger' name='numberOfArrays' type='I' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:with3fv:count:'>
<arg type64='Q' declared_type='NSUInteger' name='location' type='I' index='0'/>
<arg declared_type='GLfloat*' name='floats' type='^f' index='1'/>
<arg type64='Q' declared_type='NSUInteger' name='numberOfArrays' type='I' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:with4fv:count:'>
<arg type64='Q' declared_type='NSUInteger' name='location' type='I' index='0'/>
<arg declared_type='GLvoid*' name='floats' type='^v' index='1'/>
<arg type64='Q' declared_type='NSUInteger' name='numberOfArrays' type='I' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withF1:'>
<arg type64='Q' declared_type='NSUInteger' name='location' type='I' index='0'/>
<arg declared_type='GLfloat' name='f1' type='f' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withF1:f2:'>
<arg type64='Q' declared_type='NSUInteger' name='location' type='I' index='0'/>
<arg declared_type='GLfloat' name='f1' type='f' index='1'/>
<arg declared_type='GLfloat' name='f2' type='f' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withF1:f2:f3:'>
<arg type64='Q' declared_type='NSUInteger' name='location' type='I' index='0'/>
<arg declared_type='GLfloat' name='f1' type='f' index='1'/>
<arg declared_type='GLfloat' name='f2' type='f' index='2'/>
<arg declared_type='GLfloat' name='f3' type='f' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withF1:f2:f3:f4:'>
<arg type64='Q' declared_type='NSUInteger' name='location' type='I' index='0'/>
<arg declared_type='GLfloat' name='f1' type='f' index='1'/>
<arg declared_type='GLfloat' name='f2' type='f' index='2'/>
<arg declared_type='GLfloat' name='f3' type='f' index='3'/>
<arg declared_type='GLfloat' name='f4' type='f' index='4'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withI1:'>
<arg type64='Q' declared_type='NSUInteger' name='location' type='I' index='0'/>
<arg declared_type='GLint' name='i1' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniformLocation:withMatrix4fv:count:'>
<arg type64='Q' declared_type='NSUInteger' name='location' type='I' index='0'/>
<arg declared_type='GLvoid*' name='matrix_array' type='^v' index='1'/>
<arg type64='Q' declared_type='NSUInteger' name='numberOfMatrix' type='I' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateUniforms'>
<retval declared_type='void' type='v'/>
</method>
<method selector='use'>
<retval declared_type='void' type='v'/>
</method>
<method selector='vertexShaderLog'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='CCGLView'>
<method selector='depthFormat'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='eventDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrame:shareContext:'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='NSRect' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
<arg declared_type='NSOpenGLContext*' name='context' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='load_' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='lockOpenGLContext'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEventDelegate:'>
<arg declared_type='id' name='eventDelegate' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unlockOpenGLContext'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCGrabber'>
<method selector='afterRender:'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beforeRender:'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='grab:'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCGrid3D'>
<method selector='originalVertex:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='pos' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccVertex3F' type='{_ccVertex3F=fff}'/>
</method>
<method selector='setVertex:vertex:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='pos' type='{_ccGridSize=ii}' index='0'/>
<arg declared_type='ccVertex3F' name='vertex' type='{_ccVertex3F=fff}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='vertex:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='pos' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccVertex3F' type='{_ccVertex3F=fff}'/>
</method>
</class>
<class name='CCGrid3DAction'>
<method selector='originalVertex:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='pos' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccVertex3F' type='{_ccVertex3F=fff}'/>
</method>
<method selector='setVertex:vertex:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='pos' type='{_ccGridSize=ii}' index='0'/>
<arg declared_type='ccVertex3F' name='vertex' type='{_ccVertex3F=fff}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='vertex:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='pos' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccVertex3F' type='{_ccVertex3F=fff}'/>
</method>
</class>
<class name='CCGridAction'>
<method selector='actionWithSize:duration:' class_method='true'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='size' type='{_ccGridSize=ii}' index='0'/>
<arg declared_type='ccTime' name='d' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='grid'>
<retval declared_type='CCGridBase*' type='@'/>
</method>
<method selector='gridSize'>
<retval type64='{_ccGridSize=qq}' declared_type='ccGridSize' type='{_ccGridSize=ii}'/>
</method>
<method selector='initWithSize:duration:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='0'/>
<arg declared_type='ccTime' name='d' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setGridSize:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCGridBase'>
<method selector='active'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='afterDraw:'>
<arg declared_type='CCNode*' name='target' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beforeDraw'>
<retval declared_type='void' type='v'/>
</method>
<method selector='blit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='calculateVertexPoints'>
<retval declared_type='void' type='v'/>
</method>
<method selector='grabber'>
<retval declared_type='CCGrabber*' type='@'/>
</method>
<method selector='gridSize'>
<retval type64='{_ccGridSize=qq}' declared_type='ccGridSize' type='{_ccGridSize=ii}'/>
</method>
<method selector='gridWithSize:' class_method='true'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='gridWithSize:texture:flippedTexture:' class_method='true'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='0'/>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='1'/>
<arg declared_type='BOOL' name='flipped' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSize:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSize:texture:flippedTexture:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='0'/>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='1'/>
<arg declared_type='BOOL' name='flipped' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isTextureFlipped'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reuse'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reuseGrid'>
<retval declared_type='int' type='i'/>
</method>
<method selector='setActive:'>
<arg declared_type='BOOL' name='active' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGrabber:'>
<arg declared_type='CCGrabber*' name='grabber' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsTextureFlipped:'>
<arg declared_type='BOOL' name='isTextureFlipped' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReuseGrid:'>
<arg declared_type='int' name='reuseGrid' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShaderProgram:'>
<arg declared_type='CCGLProgram*' name='shaderProgram' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStep:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='step' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shaderProgram'>
<retval declared_type='CCGLProgram*' type='@'/>
</method>
<method selector='step'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
</class>
<class name='CCHide'>
<method selector='update:'>
<arg declared_type='ccTime' name='time' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCJumpBy'>
<method selector='actionWithDuration:position:height:jumps:' class_method='true'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='position' type='{CGPoint=ff}' index='1'/>
<arg declared_type='ccTime' name='height' type='f' index='2'/>
<arg type64='Q' declared_type='NSUInteger' name='jumps' type='I' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:position:height:jumps:'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='position' type='{CGPoint=ff}' index='1'/>
<arg declared_type='ccTime' name='height' type='f' index='2'/>
<arg type64='Q' declared_type='NSUInteger' name='jumps' type='I' index='3'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCJumpTiles3D'>
<method selector='actionWithJumps:amplitude:grid:duration:' class_method='true'>
<arg declared_type='int' name='j' type='i' index='0'/>
<arg declared_type='float' name='amp' type='f' index='1'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='2'/>
<arg declared_type='ccTime' name='d' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithJumps:amplitude:grid:duration:'>
<arg declared_type='int' name='j' type='i' index='0'/>
<arg declared_type='float' name='amp' type='f' index='1'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='2'/>
<arg declared_type='ccTime' name='d' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAmplitude:'>
<arg declared_type='float' name='amplitude' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg declared_type='float' name='amplitudeRate' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCJumpTo'>
<method selector='startWithTarget:'>
<arg declared_type='CCNode*' name='aTarget' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCLabelAtlas'>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg declared_type='NSString*' name='charmapfile' type='@' index='1'/>
<arg type64='Q' declared_type='NSUInteger' name='w' type='I' index='2'/>
<arg type64='Q' declared_type='NSUInteger' name='h' type='I' index='3'/>
<arg type64='Q' declared_type='NSUInteger' name='firstElement' type='I' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fntFile:'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg declared_type='NSString*' name='fontFile' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:charMapFile:itemWidth:itemHeight:startCharMap:' class_method='true'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg declared_type='NSString*' name='charmapfile' type='@' index='1'/>
<arg type64='Q' declared_type='NSUInteger' name='w' type='I' index='2'/>
<arg type64='Q' declared_type='NSUInteger' name='h' type='I' index='3'/>
<arg type64='Q' declared_type='NSUInteger' name='firstElement' type='I' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fntFile:' class_method='true'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg declared_type='NSString*' name='fontFile' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCLabelBMFont'>
<method selector='alignment'>
<retval declared_type='CCTextAlignment' type='i'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='createFontChars'>
<retval declared_type='void' type='v'/>
</method>
<method selector='fntFile'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithString:fntFile:'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg declared_type='NSString*' name='fntFile' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fntFile:width:alignment:'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg declared_type='NSString*' name='fntFile' type='@' index='1'/>
<arg declared_type='float' name='width' type='f' index='2'/>
<arg declared_type='CCTextAlignment' name='alignment' type='i' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fntFile:width:alignment:imageOffset:'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg declared_type='NSString*' name='fntFile' type='@' index='1'/>
<arg declared_type='float' name='width' type='f' index='2'/>
<arg declared_type='CCTextAlignment' name='alignment' type='i' index='3'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='offset' type='{CGPoint=ff}' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fntFile:' class_method='true'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg declared_type='NSString*' name='fntFile' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fntFile:width:alignment:' class_method='true'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg declared_type='NSString*' name='fntFile' type='@' index='1'/>
<arg declared_type='float' name='width' type='f' index='2'/>
<arg declared_type='CCTextAlignment' name='alignment' type='i' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fntFile:width:alignment:imageOffset:' class_method='true'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg declared_type='NSString*' name='fntFile' type='@' index='1'/>
<arg declared_type='float' name='width' type='f' index='2'/>
<arg declared_type='CCTextAlignment' name='alignment' type='i' index='3'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='offset' type='{CGPoint=ff}' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='purgeCachedData' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlignment:'>
<arg declared_type='CCTextAlignment' name='alignment' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='ccColor3B' name='color' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFntFile:'>
<arg declared_type='NSString*' name='fntFile' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg declared_type='GLubyte' name='opacity' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type='float' name='width' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCLabelTTF'>
<method selector='dimensions'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='fontName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fontSize'>
<retval declared_type='float' type='f'/>
</method>
<method selector='horizontalAlignment'>
<retval declared_type='CCTextAlignment' type='i'/>
</method>
<method selector='initWithString:dimensions:hAlignment:fontName:fontSize:'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='dimensions' type='{CGSize=ff}' index='1'/>
<arg declared_type='CCTextAlignment' name='alignment' type='i' index='2'/>
<arg declared_type='NSString*' name='name' type='@' index='3'/>
<arg type64='d' declared_type='CGFloat' name='size' type='f' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:dimensions:hAlignment:lineBreakMode:fontName:fontSize:'>
<arg declared_type='NSString*' name='str' type='@' index='0'/>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='dimensions' type='{CGSize=ff}' index='1'/>
<arg declared_type='CCTextAlignment' name='alignment' type='i' index='2'/>
<arg declared_type='CCLineBreakMode' name='lineBreakMode' type='i' index='3'/>
<arg declared_type='NSString*' name='name' type='@' index='4'/>
<arg type64='d' declared_type='CGFloat' name='size' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:fontName:fontSize:'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='dimensions' type='{CGSize=ff}' index='1'/>
<arg declared_type='CCTextAlignment' name='alignment' type='i' index='2'/>
<arg declared_type='CCVerticalTextAlignment' name='vertAlignment' type='i' index='3'/>
<arg declared_type='NSString*' name='name' type='@' index='4'/>
<arg type64='d' declared_type='CGFloat' name='size' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:lineBreakMode:fontName:fontSize:'>
<arg declared_type='NSString*' name='str' type='@' index='0'/>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='dimensions' type='{CGSize=ff}' index='1'/>
<arg declared_type='CCTextAlignment' name='alignment' type='i' index='2'/>
<arg declared_type='CCVerticalTextAlignment' name='vAlignment' type='i' index='3'/>
<arg declared_type='CCLineBreakMode' name='lineBreakMode' type='i' index='4'/>
<arg declared_type='NSString*' name='name' type='@' index='5'/>
<arg type64='d' declared_type='CGFloat' name='size' type='f' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fontName:fontSize:'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg declared_type='NSString*' name='name' type='@' index='1'/>
<arg type64='d' declared_type='CGFloat' name='size' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:dimensions:hAlignment:fontName:fontSize:' class_method='true'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='dimensions' type='{CGSize=ff}' index='1'/>
<arg declared_type='CCTextAlignment' name='alignment' type='i' index='2'/>
<arg declared_type='NSString*' name='name' type='@' index='3'/>
<arg type64='d' declared_type='CGFloat' name='size' type='f' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:dimensions:hAlignment:lineBreakMode:fontName:fontSize:' class_method='true'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='dimensions' type='{CGSize=ff}' index='1'/>
<arg declared_type='CCTextAlignment' name='alignment' type='i' index='2'/>
<arg declared_type='CCLineBreakMode' name='lineBreakMode' type='i' index='3'/>
<arg declared_type='NSString*' name='name' type='@' index='4'/>
<arg type64='d' declared_type='CGFloat' name='size' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:dimensions:hAlignment:vAlignment:fontName:fontSize:' class_method='true'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='dimensions' type='{CGSize=ff}' index='1'/>
<arg declared_type='CCTextAlignment' name='alignment' type='i' index='2'/>
<arg declared_type='CCVerticalTextAlignment' name='vertAlignment' type='i' index='3'/>
<arg declared_type='NSString*' name='name' type='@' index='4'/>
<arg type64='d' declared_type='CGFloat' name='size' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:dimensions:hAlignment:vAlignment:lineBreakMode:fontName:fontSize:' class_method='true'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='dimensions' type='{CGSize=ff}' index='1'/>
<arg declared_type='CCTextAlignment' name='alignment' type='i' index='2'/>
<arg declared_type='CCVerticalTextAlignment' name='vertAlignment' type='i' index='3'/>
<arg declared_type='CCLineBreakMode' name='lineBreakMode' type='i' index='4'/>
<arg declared_type='NSString*' name='name' type='@' index='5'/>
<arg type64='d' declared_type='CGFloat' name='size' type='f' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='labelWithString:fontName:fontSize:' class_method='true'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg declared_type='NSString*' name='name' type='@' index='1'/>
<arg type64='d' declared_type='CGFloat' name='size' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDimensions:'>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='dimensions' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontName:'>
<arg declared_type='NSString*' name='fontName' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontSize:'>
<arg declared_type='float' name='fontSize' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHorizontalAlignment:'>
<arg declared_type='CCTextAlignment' name='horizontalAlignment' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setString:'>
<arg declared_type='NSString*' name='str' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerticalAlignment:'>
<arg declared_type='CCVerticalTextAlignment' name='verticalAlignment' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='verticalAlignment'>
<retval declared_type='CCVerticalTextAlignment' type='i'/>
</method>
</class>
<class name='CCLayer'>
<method selector='isKeyboardEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMouseEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTouchEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyboardDelegatePriority'>
<retval type64='q' declared_type='NSInteger' type='i'/>
</method>
<method selector='mouseDelegatePriority'>
<retval type64='q' declared_type='NSInteger' type='i'/>
</method>
<method selector='setIsKeyboardEnabled:'>
<arg declared_type='BOOL' name='isKeyboardEnabled' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsMouseEnabled:'>
<arg declared_type='BOOL' name='isMouseEnabled' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsTouchEnabled:'>
<arg declared_type='BOOL' name='isTouchEnabled' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchDelegatePriority'>
<retval type64='q' declared_type='NSInteger' type='i'/>
</method>
</class>
<class name='CCLayerColor'>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='changeHeight:'>
<arg declared_type='GLfloat' name='h' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeWidth:'>
<arg declared_type='GLfloat' name='w' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeWidth:height:'>
<arg declared_type='GLfloat' name='w' type='f' index='0'/>
<arg declared_type='GLfloat' name='h' type='f' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='initWithColor:'>
<arg declared_type='ccColor4B' name='color' type='{_ccColor4B=CCCC}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithColor:width:height:'>
<arg declared_type='ccColor4B' name='color' type='{_ccColor4B=CCCC}' index='0'/>
<arg declared_type='GLfloat' name='w' type='f' index='1'/>
<arg declared_type='GLfloat' name='h' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerWithColor:' class_method='true'>
<arg declared_type='ccColor4B' name='color' type='{_ccColor4B=CCCC}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerWithColor:width:height:' class_method='true'>
<arg declared_type='ccColor4B' name='color' type='{_ccColor4B=CCCC}' index='0'/>
<arg declared_type='GLfloat' name='w' type='f' index='1'/>
<arg declared_type='GLfloat' name='h' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='setBlendFunc:'>
<arg declared_type='ccBlendFunc' name='blendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCLayerGradient'>
<method selector='compressedInterpolation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='endColor'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='endOpacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='initWithColor:fadingTo:'>
<arg declared_type='ccColor4B' name='start' type='{_ccColor4B=CCCC}' index='0'/>
<arg declared_type='ccColor4B' name='end' type='{_ccColor4B=CCCC}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithColor:fadingTo:alongVector:'>
<arg declared_type='ccColor4B' name='start' type='{_ccColor4B=CCCC}' index='0'/>
<arg declared_type='ccColor4B' name='end' type='{_ccColor4B=CCCC}' index='1'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v' type='{CGPoint=ff}' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerWithColor:fadingTo:' class_method='true'>
<arg declared_type='ccColor4B' name='start' type='{_ccColor4B=CCCC}' index='0'/>
<arg declared_type='ccColor4B' name='end' type='{_ccColor4B=CCCC}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerWithColor:fadingTo:alongVector:' class_method='true'>
<arg declared_type='ccColor4B' name='start' type='{_ccColor4B=CCCC}' index='0'/>
<arg declared_type='ccColor4B' name='end' type='{_ccColor4B=CCCC}' index='1'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='v' type='{CGPoint=ff}' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setCompressedInterpolation:'>
<arg declared_type='BOOL' name='compressedInterpolation' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndColor:'>
<arg declared_type='ccColor3B' name='endColor' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndOpacity:'>
<arg declared_type='GLubyte' name='endOpacity' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartColor:'>
<arg declared_type='ccColor3B' name='startColor' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartOpacity:'>
<arg declared_type='GLubyte' name='startOpacity' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVector:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='vector' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startColor'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='startOpacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='vector'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
</class>
<class name='CCLayerMultiplex'>
<method selector='initWithLayers:vaList:'>
<arg declared_type='CCLayer*' name='layer' type='@' index='0'/>
<arg declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' declared_type='va_list' name='params' type='*' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerWithLayers:' sentinel='0' variadic='true' class_method='true'>
<arg declared_type='CCLayer*' name='layer' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='switchTo:'>
<arg declared_type='unsigned int' name='n' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='switchToAndReleaseMe:'>
<arg declared_type='unsigned int' name='n' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCLens3D'>
<method selector='actionWithPosition:radius:grid:duration:' class_method='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='pos' type='{CGPoint=ff}' index='0'/>
<arg declared_type='float' name='r' type='f' index='1'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='2'/>
<arg declared_type='ccTime' name='d' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPosition:radius:grid:duration:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='pos' type='{CGPoint=ff}' index='0'/>
<arg declared_type='float' name='r' type='f' index='1'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='2'/>
<arg declared_type='ccTime' name='d' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lensEffect'>
<retval declared_type='float' type='f'/>
</method>
<method selector='position'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='setLensEffect:'>
<arg declared_type='float' name='lensEffect' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='position' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCLiquid'>
<method selector='actionWithWaves:amplitude:grid:duration:' class_method='true'>
<arg declared_type='int' name='wav' type='i' index='0'/>
<arg declared_type='float' name='amp' type='f' index='1'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='2'/>
<arg declared_type='ccTime' name='d' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg declared_type='int' name='wav' type='i' index='0'/>
<arg declared_type='float' name='amp' type='f' index='1'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='2'/>
<arg declared_type='ccTime' name='d' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAmplitude:'>
<arg declared_type='float' name='amplitude' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg declared_type='float' name='amplitudeRate' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenu'>
<method selector='alignItemsHorizontally'>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsHorizontallyWithPadding:'>
<arg declared_type='float' name='padding' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsInColumns:' sentinel='0' variadic='true'>
<arg declared_type='NSNumber*' name='columns' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsInColumns:vaList:'>
<arg declared_type='NSNumber*' name='columns' type='@' index='0'/>
<arg declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' declared_type='va_list' name='args' type='*' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsInRows:' sentinel='0' variadic='true'>
<arg declared_type='NSNumber*' name='rows' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsInRows:vaList:'>
<arg declared_type='NSNumber*' name='rows' type='@' index='0'/>
<arg declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' declared_type='va_list' name='args' type='*' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsVertically'>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignItemsVerticallyWithPadding:'>
<arg declared_type='float' name='padding' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='enabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithArray:'>
<arg declared_type='NSArray*' name='arrayOfItems' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='menuWithArray:' class_method='true'>
<arg declared_type='NSArray*' name='arrayOfItems' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='menuWithItems:' sentinel='0' variadic='true' class_method='true'>
<arg declared_type='CCMenuItem*' name='item' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='menuWithItems:vaList:' class_method='true'>
<arg declared_type='CCMenuItem*' name='firstItem' type='@' index='0'/>
<arg declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' declared_type='va_list' name='args' type='*' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' name='enabled' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHandlerPriority:'>
<arg type64='q' declared_type='NSInteger' name='newPriority' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItem'>
<method selector='activate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cleanup'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBlock:'>
<arg declared_type='void (^)(id)' name='block' type='@?' index='0' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:selector:'>
<arg declared_type='id' name='target' type='@' index='0'/>
<arg declared_type='SEL' name='selector' type=':' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemWithBlock:' class_method='true'>
<arg declared_type='void (^)(id)' name='block' type='@?' index='0' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithTarget:selector:' class_method='true'>
<arg declared_type='id' name='target' type='@' index='0'/>
<arg declared_type='SEL' name='selector' type=':' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='selected'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlock:'>
<arg declared_type='void (^)(id)' name='block' type='@?' index='0' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsEnabled:'>
<arg declared_type='BOOL' name='enabled' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:selector:'>
<arg declared_type='id' name='target' type='@' index='0'/>
<arg declared_type='SEL' name='selector' type=':' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unselected'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItemAtlasFont'>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:block:'>
<arg declared_type='NSString*' name='value' type='@' index='0'/>
<arg declared_type='NSString*' name='charMapFile' type='@' index='1'/>
<arg declared_type='int' name='itemWidth' type='i' index='2'/>
<arg declared_type='int' name='itemHeight' type='i' index='3'/>
<arg declared_type='char' name='startCharMap' type='c' index='4'/>
<arg declared_type='void (^)(id)' name='block' type='@?' index='5' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:'>
<arg declared_type='NSString*' name='value' type='@' index='0'/>
<arg declared_type='NSString*' name='charMapFile' type='@' index='1'/>
<arg declared_type='int' name='itemWidth' type='i' index='2'/>
<arg declared_type='int' name='itemHeight' type='i' index='3'/>
<arg declared_type='char' name='startCharMap' type='c' index='4'/>
<arg declared_type='id' name='target' type='@' index='5'/>
<arg declared_type='SEL' name='selector' type=':' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:' class_method='true'>
<arg declared_type='NSString*' name='value' type='@' index='0'/>
<arg declared_type='NSString*' name='charMapFile' type='@' index='1'/>
<arg declared_type='int' name='itemWidth' type='i' index='2'/>
<arg declared_type='int' name='itemHeight' type='i' index='3'/>
<arg declared_type='char' name='startCharMap' type='c' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:block:' class_method='true'>
<arg declared_type='NSString*' name='value' type='@' index='0'/>
<arg declared_type='NSString*' name='charMapFile' type='@' index='1'/>
<arg declared_type='int' name='itemWidth' type='i' index='2'/>
<arg declared_type='int' name='itemHeight' type='i' index='3'/>
<arg declared_type='char' name='startCharMap' type='c' index='4'/>
<arg declared_type='void (^)(id)' name='block' type='@?' index='5' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:charMapFile:itemWidth:itemHeight:startCharMap:target:selector:' class_method='true'>
<arg declared_type='NSString*' name='value' type='@' index='0'/>
<arg declared_type='NSString*' name='charMapFile' type='@' index='1'/>
<arg declared_type='int' name='itemWidth' type='i' index='2'/>
<arg declared_type='int' name='itemHeight' type='i' index='3'/>
<arg declared_type='char' name='startCharMap' type='c' index='4'/>
<arg declared_type='id' name='target' type='@' index='5'/>
<arg declared_type='SEL' name='selector' type=':' index='6'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCMenuItemFont'>
<method selector='fontName' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fontName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fontSize' class_method='true'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='fontSize'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='initWithString:block:'>
<arg declared_type='NSString*' name='value' type='@' index='0'/>
<arg declared_type='void (^)(id)' name='block' type='@?' index='1' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:target:selector:'>
<arg declared_type='NSString*' name='value' type='@' index='0'/>
<arg declared_type='id' name='r' type='@' index='1'/>
<arg declared_type='SEL' name='s' type=':' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:' class_method='true'>
<arg declared_type='NSString*' name='value' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:block:' class_method='true'>
<arg declared_type='NSString*' name='value' type='@' index='0'/>
<arg declared_type='void (^)(id)' name='block' type='@?' index='1' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithString:target:selector:' class_method='true'>
<arg declared_type='NSString*' name='value' type='@' index='0'/>
<arg declared_type='id' name='r' type='@' index='1'/>
<arg declared_type='SEL' name='s' type=':' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setFontName:' class_method='true'>
<arg declared_type='NSString*' name='n' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontName:'>
<arg declared_type='NSString*' name='n' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontSize:' class_method='true'>
<arg type64='Q' declared_type='NSUInteger' name='s' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontSize:'>
<arg type64='Q' declared_type='NSUInteger' name='s' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItemImage'>
<method selector='initWithNormalImage:selectedImage:disabledImage:block:'>
<arg declared_type='NSString*' name='value' type='@' index='0'/>
<arg declared_type='NSString*' name='value2' type='@' index='1'/>
<arg declared_type='NSString*' name='value3' type='@' index='2'/>
<arg declared_type='void (^)(id)' name='block' type='@?' index='3' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithNormalImage:selectedImage:disabledImage:target:selector:'>
<arg declared_type='NSString*' name='value' type='@' index='0'/>
<arg declared_type='NSString*' name='value2' type='@' index='1'/>
<arg declared_type='NSString*' name='value3' type='@' index='2'/>
<arg declared_type='id' name='r' type='@' index='3'/>
<arg declared_type='SEL' name='s' type=':' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalImage:selectedImage:' class_method='true'>
<arg declared_type='NSString*' name='value' type='@' index='0'/>
<arg declared_type='NSString*' name='value2' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalImage:selectedImage:block:' class_method='true'>
<arg declared_type='NSString*' name='value' type='@' index='0'/>
<arg declared_type='NSString*' name='value2' type='@' index='1'/>
<arg declared_type='void (^)(id)' name='block' type='@?' index='2' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalImage:selectedImage:disabledImage:block:' class_method='true'>
<arg declared_type='NSString*' name='value' type='@' index='0'/>
<arg declared_type='NSString*' name='value2' type='@' index='1'/>
<arg declared_type='NSString*' name='value3' type='@' index='2'/>
<arg declared_type='void (^)(id)' name='block' type='@?' index='3' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalImage:selectedImage:disabledImage:target:selector:' class_method='true'>
<arg declared_type='NSString*' name='value' type='@' index='0'/>
<arg declared_type='NSString*' name='value2' type='@' index='1'/>
<arg declared_type='NSString*' name='value3' type='@' index='2'/>
<arg declared_type='id' name='r' type='@' index='3'/>
<arg declared_type='SEL' name='s' type=':' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalImage:selectedImage:target:selector:' class_method='true'>
<arg declared_type='NSString*' name='value' type='@' index='0'/>
<arg declared_type='NSString*' name='value2' type='@' index='1'/>
<arg declared_type='id' name='r' type='@' index='2'/>
<arg declared_type='SEL' name='s' type=':' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDisabledSpriteFrame:'>
<arg declared_type='CCSpriteFrame*' name='frame' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNormalSpriteFrame:'>
<arg declared_type='CCSpriteFrame*' name='frame' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedSpriteFrame:'>
<arg declared_type='CCSpriteFrame*' name='frame' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItemLabel'>
<method selector='disabledColor'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='initWithLabel:block:'>
<arg declared_type='CCNode*' name='label' type='@' index='0'/>
<arg declared_type='void (^)(id)' name='block' type='@?' index='1' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLabel:target:selector:'>
<arg declared_type='CCNode*' name='label' type='@' index='0'/>
<arg declared_type='id' name='target' type='@' index='1'/>
<arg declared_type='SEL' name='selector' type=':' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithLabel:' class_method='true'>
<arg declared_type='CCNode*' name='label' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithLabel:block:' class_method='true'>
<arg declared_type='CCNode*' name='label' type='@' index='0'/>
<arg declared_type='void (^)(id)' name='block' type='@?' index='1' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithLabel:target:selector:' class_method='true'>
<arg declared_type='CCNode*' name='label' type='@' index='0'/>
<arg declared_type='id' name='target' type='@' index='1'/>
<arg declared_type='SEL' name='selector' type=':' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='label'>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='setDisabledColor:'>
<arg declared_type='ccColor3B' name='disabledColor' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsEnabled:'>
<arg declared_type='BOOL' name='enabled' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type='CCNode*' name='label' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setString:'>
<arg declared_type='NSString*' name='label' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItemSprite'>
<method selector='disabledImage'>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='initWithNormalSprite:selectedSprite:disabledSprite:block:'>
<arg declared_type='CCNode*' name='normalSprite' type='@' index='0'/>
<arg declared_type='CCNode*' name='selectedSprite' type='@' index='1'/>
<arg declared_type='CCNode*' name='disabledSprite' type='@' index='2'/>
<arg declared_type='void (^)(id)' name='block' type='@?' index='3' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithNormalSprite:selectedSprite:disabledSprite:target:selector:'>
<arg declared_type='CCNode*' name='normalSprite' type='@' index='0'/>
<arg declared_type='CCNode*' name='selectedSprite' type='@' index='1'/>
<arg declared_type='CCNode*' name='disabledSprite' type='@' index='2'/>
<arg declared_type='id' name='target' type='@' index='3'/>
<arg declared_type='SEL' name='selector' type=':' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:' class_method='true'>
<arg declared_type='CCNode*' name='normalSprite' type='@' index='0'/>
<arg declared_type='CCNode*' name='selectedSprite' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:block:' class_method='true'>
<arg declared_type='CCNode*' name='normalSprite' type='@' index='0'/>
<arg declared_type='CCNode*' name='selectedSprite' type='@' index='1'/>
<arg declared_type='void (^)(id)' name='block' type='@?' index='2' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:disabledSprite:block:' class_method='true'>
<arg declared_type='CCNode*' name='normalSprite' type='@' index='0'/>
<arg declared_type='CCNode*' name='selectedSprite' type='@' index='1'/>
<arg declared_type='CCNode*' name='disabledSprite' type='@' index='2'/>
<arg declared_type='void (^)(id)' name='block' type='@?' index='3' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:disabledSprite:target:selector:' class_method='true'>
<arg declared_type='CCNode*' name='normalSprite' type='@' index='0'/>
<arg declared_type='CCNode*' name='selectedSprite' type='@' index='1'/>
<arg declared_type='CCNode*' name='disabledSprite' type='@' index='2'/>
<arg declared_type='id' name='target' type='@' index='3'/>
<arg declared_type='SEL' name='selector' type=':' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithNormalSprite:selectedSprite:target:selector:' class_method='true'>
<arg declared_type='CCNode*' name='normalSprite' type='@' index='0'/>
<arg declared_type='CCNode*' name='selectedSprite' type='@' index='1'/>
<arg declared_type='id' name='target' type='@' index='2'/>
<arg declared_type='SEL' name='selector' type=':' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='normalImage'>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='selectedImage'>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='setDisabledImage:'>
<arg declared_type='CCNode*' name='disabledImage' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNormalImage:'>
<arg declared_type='CCNode*' name='normalImage' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedImage:'>
<arg declared_type='CCNode*' name='selectedImage' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMenuItemToggle'>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='initWithItems:block:'>
<arg declared_type='NSArray*' name='arrayOfItems' type='@' index='0'/>
<arg declared_type='void (^)(id)' name='block' type='@?' index='1' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithItems:block:' class_method='true'>
<arg declared_type='NSArray*' name='arrayOfItems' type='@' index='0'/>
<arg declared_type='void (^)(id)' name='block' type='@?' index='1' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithTarget:selector:items:' sentinel='0' variadic='true' class_method='true'>
<arg declared_type='id' name='target' type='@' index='0'/>
<arg declared_type='SEL' name='selector' type=':' index='1'/>
<arg declared_type='CCMenuItem*' name='item' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemWithTarget:selector:items:vaList:' class_method='true'>
<arg declared_type='id' name='target' type='@' index='0'/>
<arg declared_type='SEL' name='selector' type=':' index='1'/>
<arg declared_type='CCMenuItem*' name='item' type='@' index='2'/>
<arg declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' declared_type='va_list' name='args' type='*' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='selectedIndex'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='selectedItem'>
<retval declared_type='CCMenuItem*' type='@'/>
</method>
<method selector='setSelectedIndex:'>
<arg type64='Q' declared_type='NSUInteger' name='selectedIndex' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubItems:'>
<arg declared_type='NSMutableArray*' name='subItems' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subItems'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
</class>
<class name='CCMotionStreak'>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='initWithFade:minSeg:width:color:texture:'>
<arg declared_type='float' name='fade' type='f' index='0'/>
<arg declared_type='float' name='minSeg' type='f' index='1'/>
<arg declared_type='float' name='stroke' type='f' index='2'/>
<arg declared_type='ccColor3B' name='color' type='{_ccColor3B=CCC}' index='3'/>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFade:minSeg:width:color:textureFilename:'>
<arg declared_type='float' name='fade' type='f' index='0'/>
<arg declared_type='float' name='minSeg' type='f' index='1'/>
<arg declared_type='float' name='stroke' type='f' index='2'/>
<arg declared_type='ccColor3B' name='color' type='{_ccColor3B=CCC}' index='3'/>
<arg declared_type='NSString*' name='path' type='@' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isFastMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg declared_type='ccBlendFunc' name='blendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFastMode:'>
<arg declared_type='BOOL' name='fastMode' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='streakWithFade:minSeg:width:color:texture:' class_method='true'>
<arg declared_type='float' name='fade' type='f' index='0'/>
<arg declared_type='float' name='minSeg' type='f' index='1'/>
<arg declared_type='float' name='stroke' type='f' index='2'/>
<arg declared_type='ccColor3B' name='color' type='{_ccColor3B=CCC}' index='3'/>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='streakWithFade:minSeg:width:color:textureFilename:' class_method='true'>
<arg declared_type='float' name='fade' type='f' index='0'/>
<arg declared_type='float' name='minSeg' type='f' index='1'/>
<arg declared_type='float' name='stroke' type='f' index='2'/>
<arg declared_type='ccColor3B' name='color' type='{_ccColor3B=CCC}' index='3'/>
<arg declared_type='NSString*' name='path' type='@' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='tintWithColor:'>
<arg declared_type='ccColor3B' name='colors' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCMoveBy'>
<method selector='actionWithDuration:position:' class_method='true'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='deltaPosition' type='{CGPoint=ff}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:position:'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='deltaPosition' type='{CGPoint=ff}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCMoveTo'>
<method selector='actionWithDuration:position:' class_method='true'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='position' type='{CGPoint=ff}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:position:'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='position' type='{CGPoint=ff}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCNode'>
<method selector='actionManager'>
<retval declared_type='CCActionManager*' type='@'/>
</method>
<method selector='addChild:'>
<arg declared_type='CCNode*' name='node' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addChild:z:'>
<arg declared_type='CCNode*' name='node' type='@' index='0'/>
<arg type64='q' declared_type='NSInteger' name='z' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addChild:z:tag:'>
<arg declared_type='CCNode*' name='node' type='@' index='0'/>
<arg type64='q' declared_type='NSInteger' name='z' type='i' index='1'/>
<arg type64='q' declared_type='NSInteger' name='tag' type='i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='anchorPoint'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='anchorPointInPoints'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='boundingBox'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='camera'>
<retval declared_type='CCCamera*' type='@'/>
</method>
<method selector='children'>
<retval declared_type='CCArray*' type='@'/>
</method>
<method selector='cleanup'>
<retval declared_type='void' type='v'/>
</method>
<method selector='contentSize'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='convertToNodeSpace:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='worldPoint' type='{CGPoint=ff}' index='0'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='convertToNodeSpaceAR:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='worldPoint' type='{CGPoint=ff}' index='0'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='convertToWorldSpace:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='nodePoint' type='{CGPoint=ff}' index='0'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='convertToWorldSpaceAR:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='nodePoint' type='{CGPoint=ff}' index='0'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='draw'>
<retval declared_type='void' type='v'/>
</method>
<method selector='getActionByTag:'>
<arg type64='q' declared_type='NSInteger' name='tag' type='i' index='0'/>
<retval declared_type='CCAction*' type='@'/>
</method>
<method selector='getChildByTag:'>
<arg type64='q' declared_type='NSInteger' name='tag' type='i' index='0'/>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='glServerState'>
<retval declared_type='ccGLServerState' type='i'/>
</method>
<method selector='grid'>
<retval declared_type='CCGridBase*' type='@'/>
</method>
<method selector='ignoreAnchorPointForPosition'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isRunning'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='node' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='nodeToParentTransform'>
<retval type64='{CGAffineTransform=dddddd}' declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='nodeToWorldTransform'>
<retval type64='{CGAffineTransform=dddddd}' declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='numberOfRunningActions'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='onEnter'>
<retval declared_type='void' type='v'/>
</method>
<method selector='onEnterTransitionDidFinish'>
<retval declared_type='void' type='v'/>
</method>
<method selector='onExit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='onExitTransitionDidStart'>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderOfArrival'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='parent'>
<retval declared_type='CCNode*' type='@'/>
</method>
<method selector='parentToNodeTransform'>
<retval type64='{CGAffineTransform=dddddd}' declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='pauseSchedulerAndActions'>
<retval declared_type='void' type='v'/>
</method>
<method selector='position'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='removeAllChildrenWithCleanup:'>
<arg declared_type='BOOL' name='cleanup' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeChild:cleanup:'>
<arg declared_type='CCNode*' name='node' type='@' index='0'/>
<arg declared_type='BOOL' name='cleanup' type='B' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeChildByTag:cleanup:'>
<arg type64='q' declared_type='NSInteger' name='tag' type='i' index='0'/>
<arg declared_type='BOOL' name='cleanup' type='B' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeFromParentAndCleanup:'>
<arg declared_type='BOOL' name='cleanup' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reorderChild:z:'>
<arg declared_type='CCNode*' name='child' type='@' index='0'/>
<arg type64='q' declared_type='NSInteger' name='zOrder' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeSchedulerAndActions'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotation'>
<retval declared_type='float' type='f'/>
</method>
<method selector='runAction:'>
<arg declared_type='CCAction*' name='action' type='@' index='0'/>
<retval declared_type='CCAction*' type='@'/>
</method>
<method selector='scale'>
<retval declared_type='float' type='f'/>
</method>
<method selector='scaleX'>
<retval declared_type='float' type='f'/>
</method>
<method selector='scaleY'>
<retval declared_type='float' type='f'/>
</method>
<method selector='schedule:'>
<arg declared_type='SEL' name='s' type=':' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='schedule:interval:'>
<arg declared_type='SEL' name='s' type=':' index='0'/>
<arg declared_type='ccTime' name='seconds' type='f' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='schedule:interval:repeat:delay:'>
<arg declared_type='SEL' name='selector' type=':' index='0'/>
<arg declared_type='ccTime' name='interval' type='f' index='1'/>
<arg declared_type='uint' name='repeat' type='I' index='2'/>
<arg declared_type='ccTime' name='delay' type='f' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleOnce:delay:'>
<arg declared_type='SEL' name='selector' type=':' index='0'/>
<arg declared_type='ccTime' name='delay' type='f' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleUpdate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleUpdateWithPriority:'>
<arg type64='q' declared_type='NSInteger' name='priority' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduler'>
<retval declared_type='CCScheduler*' type='@'/>
</method>
<method selector='setActionManager:'>
<arg declared_type='CCActionManager*' name='actionManager' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorPoint:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='anchorPoint' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentSize:'>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='contentSize' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGlServerState:'>
<arg declared_type='ccGLServerState' name='glServerState' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGrid:'>
<arg declared_type='CCGridBase*' name='grid' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIgnoreAnchorPointForPosition:'>
<arg declared_type='BOOL' name='ignoreAnchorPointForPosition' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrderOfArrival:'>
<arg type64='Q' declared_type='NSUInteger' name='orderOfArrival' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParent:'>
<arg declared_type='CCNode*' name='parent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='position' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotation:'>
<arg declared_type='float' name='rotation' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScale:'>
<arg declared_type='float' name='scale' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScaleX:'>
<arg declared_type='float' name='scaleX' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScaleY:'>
<arg declared_type='float' name='scaleY' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScheduler:'>
<arg declared_type='CCScheduler*' name='scheduler' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShaderProgram:'>
<arg declared_type='CCGLProgram*' name='shaderProgram' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSkewX:'>
<arg declared_type='float' name='skewX' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSkewY:'>
<arg declared_type='float' name='skewY' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTag:'>
<arg type64='q' declared_type='NSInteger' name='tag' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserData:'>
<arg declared_type='void*' name='userData' type='^v' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserObject:'>
<arg declared_type='id' name='userObject' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexZ:'>
<arg declared_type='float' name='vertexZ' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisible:'>
<arg declared_type='BOOL' name='visible' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZOrder:'>
<arg type64='Q' declared_type='NSUInteger' name='z' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shaderProgram'>
<retval declared_type='CCGLProgram*' type='@'/>
</method>
<method selector='skewX'>
<retval declared_type='float' type='f'/>
</method>
<method selector='skewY'>
<retval declared_type='float' type='f'/>
</method>
<method selector='sortAllChildren'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAction:'>
<arg declared_type='CCAction*' name='action' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopActionByTag:'>
<arg type64='q' declared_type='NSInteger' name='tag' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAllActions'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tag'>
<retval type64='q' declared_type='NSInteger' type='i'/>
</method>
<method selector='transform'>
<retval declared_type='void' type='v'/>
</method>
<method selector='transformAncestors'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unschedule:'>
<arg declared_type='SEL' name='s' type=':' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleAllSelectors'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleUpdate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='update:'>
<arg declared_type='ccTime' name='delta' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userData'>
<retval declared_type='void*' type='^v'/>
</method>
<method selector='userObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='vertexZ'>
<retval declared_type='float' type='f'/>
</method>
<method selector='visible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='visit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='worldToNodeTransform'>
<retval type64='{CGAffineTransform=dddddd}' declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='zOrder'>
<retval type64='q' declared_type='NSInteger' type='i'/>
</method>
</class>
<class name='CCOrbitCamera'>
<method selector='actionWithDuration:radius:deltaRadius:angleZ:deltaAngleZ:angleX:deltaAngleX:' class_method='true'>
<arg declared_type='float' name='t' type='f' index='0'/>
<arg declared_type='float' name='r' type='f' index='1'/>
<arg declared_type='float' name='dr' type='f' index='2'/>
<arg declared_type='float' name='z' type='f' index='3'/>
<arg declared_type='float' name='dz' type='f' index='4'/>
<arg declared_type='float' name='x' type='f' index='5'/>
<arg declared_type='float' name='dx' type='f' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:radius:deltaRadius:angleZ:deltaAngleZ:angleX:deltaAngleX:'>
<arg declared_type='float' name='t' type='f' index='0'/>
<arg declared_type='float' name='r' type='f' index='1'/>
<arg declared_type='float' name='dr' type='f' index='2'/>
<arg declared_type='float' name='z' type='f' index='3'/>
<arg declared_type='float' name='dz' type='f' index='4'/>
<arg declared_type='float' name='x' type='f' index='5'/>
<arg declared_type='float' name='dx' type='f' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='sphericalRadius:zenith:azimuth:'>
<arg declared_type='float*' name='r' type='^f' index='0'/>
<arg declared_type='float*' name='zenith' type='^f' index='1'/>
<arg declared_type='float*' name='azimuth' type='^f' index='2'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCParallaxNode'>
<method selector='addChild:z:parallaxRatio:positionOffset:'>
<arg declared_type='CCNode*' name='node' type='@' index='0'/>
<arg type64='q' declared_type='NSInteger' name='z' type='i' index='1'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='c' type='{CGPoint=ff}' index='2'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='positionOffset' type='{CGPoint=ff}' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parallaxArray'>
<retval type64='^{ccArray=QQ^@}' declared_type='ccArray*' type='^{ccArray=II^@}'/>
</method>
<method selector='setParallaxArray:'>
<arg type64='^{ccArray=QQ^@}' declared_type='ccArray*' name='parallaxArray' type='^{ccArray=II^@}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCParticleBatchNode'>
<method selector='addChild:z:tag:'>
<arg declared_type='CCParticleSystem*' name='child' type='@' index='0'/>
<arg type64='q' declared_type='NSInteger' name='z' type='i' index='1'/>
<arg type64='q' declared_type='NSInteger' name='aTag' type='i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='batchNodeWithFile:' class_method='true'>
<arg declared_type='NSString*' name='imageFile' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithFile:capacity:' class_method='true'>
<arg declared_type='NSString*' name='fileImage' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithTexture:' class_method='true'>
<arg declared_type='CCTexture2D*' name='tex' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithTexture:capacity:' class_method='true'>
<arg declared_type='CCTexture2D*' name='tex' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='disableParticle:'>
<arg type64='Q' declared_type='NSUInteger' name='particleIndex' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithFile:capacity:'>
<arg declared_type='NSString*' name='fileImage' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg declared_type='CCTexture2D*' name='tex' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertChild:inAtlasAtIndex:'>
<arg declared_type='CCParticleSystem*' name='pSystem' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeChild:cleanup:'>
<arg declared_type='CCParticleSystem*' name='pSystem' type='@' index='0'/>
<arg declared_type='BOOL' name='doCleanUp' type='B' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg declared_type='ccBlendFunc' name='blendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureAtlas:'>
<arg declared_type='CCTextureAtlas*' name='textureAtlas' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textureAtlas'>
<retval declared_type='CCTextureAtlas*' type='@'/>
</method>
</class>
<class name='CCParticleSystem'>
<method selector='active'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='angle'>
<retval declared_type='float' type='f'/>
</method>
<method selector='angleVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='atlasIndex'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='autoRemoveOnFinish'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='batchNode'>
<retval declared_type='CCParticleBatchNode*' type='@'/>
</method>
<method selector='blendAdditive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='doesOpacityModifyRGB'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='duration'>
<retval declared_type='float' type='f'/>
</method>
<method selector='emissionRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='emitterMode'>
<retval type64='q' declared_type='NSInteger' type='i'/>
</method>
<method selector='endColor'>
<retval declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
</method>
<method selector='endColorVar'>
<retval declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
</method>
<method selector='endRadius'>
<retval declared_type='float' type='f'/>
</method>
<method selector='endRadiusVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='endSize'>
<retval declared_type='float' type='f'/>
</method>
<method selector='endSizeVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='endSpin'>
<retval declared_type='float' type='f'/>
</method>
<method selector='endSpinVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='gravity'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='initWithDictionary:'>
<arg declared_type='NSDictionary*' name='dictionary' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFile:'>
<arg declared_type='NSString*' name='plistFile' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTotalParticles:'>
<arg type64='Q' declared_type='NSUInteger' name='numberOfParticles' type='I' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isFull'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='life'>
<retval declared_type='float' type='f'/>
</method>
<method selector='lifeVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='particleCount'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='particleWithFile:' class_method='true'>
<arg declared_type='NSString*' name='plistFile' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='posVar'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='positionType'>
<retval declared_type='tCCPositionType' type='i'/>
</method>
<method selector='postStep'>
<retval declared_type='void' type='v'/>
</method>
<method selector='radialAccel'>
<retval declared_type='float' type='f'/>
</method>
<method selector='radialAccelVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='resetSystem'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotatePerSecond'>
<retval declared_type='float' type='f'/>
</method>
<method selector='rotatePerSecondVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setAngle:'>
<arg declared_type='float' name='angle' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAngleVar:'>
<arg declared_type='float' name='angleVar' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAtlasIndex:'>
<arg type64='Q' declared_type='NSUInteger' name='atlasIndex' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoRemoveOnFinish:'>
<arg declared_type='BOOL' name='autoRemoveOnFinish' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBatchNode:'>
<arg declared_type='CCParticleBatchNode*' name='batchNode' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendAdditive:'>
<arg declared_type='BOOL' name='blendAdditive' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg declared_type='ccBlendFunc' name='blendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDuration:'>
<arg declared_type='float' name='duration' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmissionRate:'>
<arg declared_type='float' name='emissionRate' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmitterMode:'>
<arg type64='q' declared_type='NSInteger' name='emitterMode' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndColor:'>
<arg declared_type='ccColor4F' name='endColor' type='{ccColor4F=ffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndColorVar:'>
<arg declared_type='ccColor4F' name='endColorVar' type='{ccColor4F=ffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndRadius:'>
<arg declared_type='float' name='endRadius' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndRadiusVar:'>
<arg declared_type='float' name='endRadiusVar' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndSize:'>
<arg declared_type='float' name='endSize' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndSizeVar:'>
<arg declared_type='float' name='endSizeVar' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndSpin:'>
<arg declared_type='float' name='endSpin' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndSpinVar:'>
<arg declared_type='float' name='endSpinVar' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGravity:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='gravity' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLife:'>
<arg declared_type='float' name='life' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLifeVar:'>
<arg declared_type='float' name='lifeVar' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacityModifyRGB:'>
<arg declared_type='BOOL' name='opacityModifyRGB' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosVar:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='posVar' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPositionType:'>
<arg declared_type='tCCPositionType' name='positionType' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadialAccel:'>
<arg declared_type='float' name='radialAccel' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadialAccelVar:'>
<arg declared_type='float' name='radialAccelVar' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotatePerSecond:'>
<arg declared_type='float' name='rotatePerSecond' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotatePerSecondVar:'>
<arg declared_type='float' name='rotatePerSecondVar' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourcePosition:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='sourcePosition' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeed:'>
<arg declared_type='float' name='speed' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeedVar:'>
<arg declared_type='float' name='speedVar' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartColor:'>
<arg declared_type='ccColor4F' name='startColor' type='{ccColor4F=ffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartColorVar:'>
<arg declared_type='ccColor4F' name='startColorVar' type='{ccColor4F=ffff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartRadius:'>
<arg declared_type='float' name='startRadius' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartRadiusVar:'>
<arg declared_type='float' name='startRadiusVar' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartSize:'>
<arg declared_type='float' name='startSize' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartSizeVar:'>
<arg declared_type='float' name='startSizeVar' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartSpin:'>
<arg declared_type='float' name='startSpin' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartSpinVar:'>
<arg declared_type='float' name='startSpinVar' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTangentialAccel:'>
<arg declared_type='float' name='tangentialAccel' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTangentialAccelVar:'>
<arg declared_type='float' name='tangentialAccelVar' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTotalParticles:'>
<arg type64='Q' declared_type='NSUInteger' name='totalParticles' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourcePosition'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='speed'>
<retval declared_type='float' type='f'/>
</method>
<method selector='speedVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startColor'>
<retval declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
</method>
<method selector='startColorVar'>
<retval declared_type='ccColor4F' type='{ccColor4F=ffff}'/>
</method>
<method selector='startRadius'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startRadiusVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startSize'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startSizeVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startSpin'>
<retval declared_type='float' type='f'/>
</method>
<method selector='startSpinVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='stopSystem'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tangentialAccel'>
<retval declared_type='float' type='f'/>
</method>
<method selector='tangentialAccelVar'>
<retval declared_type='float' type='f'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='totalParticles'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='update:'>
<arg declared_type='ccTime' name='dt' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateQuadWithParticle:newPosition:'>
<arg type64='^{sCCParticle={CGPoint=dd}{CGPoint=dd}{ccColor4F=ffff}{ccColor4F=ffff}fffffQ(?={?={CGPoint=dd}ff}{?=ffff})}' declared_type='tCCParticle*' name='particle' type='^{sCCParticle={CGPoint=ff}{CGPoint=ff}{ccColor4F=ffff}{ccColor4F=ffff}fffffI(?={?={CGPoint=ff}ff}{?=ffff})}' index='0'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='pos' type='{CGPoint=ff}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateWithNoTime'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCParticleSystemQuad'>
<method selector='initIndices'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initTexCoordsWithRect:'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayFrame:'>
<arg declared_type='CCSpriteFrame*' name='spriteFrame' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:withRect:'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCPlace'>
<method selector='actionWithPosition:' class_method='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='pos' type='{CGPoint=ff}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPosition:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='pos' type='{CGPoint=ff}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCPointArray'>
<method selector='addControlPoint:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='controlPoint' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='arrayWithCapacity:' class_method='true'>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='controlPoints'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='count'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='getControlPointAtIndex:'>
<arg type64='q' declared_type='NSInteger' name='index' type='i' index='0'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='initWithCapacity:'>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertControlPoint:atIndex:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='controlPoint' type='{CGPoint=ff}' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeControlPointAtIndex:'>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceControlPoint:atIndex:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='controlPoint' type='{CGPoint=ff}' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reverse'>
<retval declared_type='CCPointArray*' type='@'/>
</method>
<method selector='reverseInline'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setControlPoints:'>
<arg declared_type='NSMutableArray*' name='controlPoints' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCProfiler'>
<method selector='createAndAddTimerWithName:'>
<arg declared_type='NSString*' name='timerName' type='@' index='0'/>
<retval declared_type='CCProfilingTimer*' type='@'/>
</method>
<method selector='displayTimers'>
<retval declared_type='void' type='v'/>
</method>
<method selector='releaseAllTimers'>
<retval declared_type='void' type='v'/>
</method>
<method selector='releaseTimer:'>
<arg declared_type='NSString*' name='timerName' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedProfiler' class_method='true'>
<retval declared_type='CCProfiler*' type='@'/>
</method>
</class>
<class name='CCProfilingTimer'>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCProgressFromTo'>
<method selector='actionWithDuration:from:to:' class_method='true'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='float' name='fromPercentage' type='f' index='1'/>
<arg declared_type='float' name='toPercentage' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:from:to:'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='float' name='fromPercentage' type='f' index='1'/>
<arg declared_type='float' name='toPercentage' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCProgressTimer'>
<method selector='barChangeRate'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='initWithSprite:'>
<arg declared_type='CCSprite*' name='sprite' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='midpoint'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='percentage'>
<retval declared_type='float' type='f'/>
</method>
<method selector='progressWithSprite:' class_method='true'>
<arg declared_type='CCSprite*' name='sprite' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='reverseDirection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBarChangeRate:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='barChangeRate' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='ccColor3B' name='color' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMidpoint:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='midpoint' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg declared_type='GLubyte' name='opacity' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPercentage:'>
<arg declared_type='float' name='percentage' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReverseDirection:'>
<arg declared_type='BOOL' name='reverseDirection' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSprite:'>
<arg declared_type='CCSprite*' name='sprite' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setType:'>
<arg declared_type='CCProgressTimerType' name='type' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sprite'>
<retval declared_type='CCSprite*' type='@'/>
</method>
<method selector='type'>
<retval declared_type='CCProgressTimerType' type='i'/>
</method>
<method selector='vertexData'>
<retval declared_type='ccV2F_C4B_T2F*' type='^{_ccV2F_C4B_T2F={_ccVertex2F=ff}{_ccColor4B=CCCC}{_ccTex2F=ff}}'/>
</method>
<method selector='vertexDataCount'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='CCProgressTo'>
<method selector='actionWithDuration:percent:' class_method='true'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='float' name='percent' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:percent:'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='float' name='percent' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCRenderTexture'>
<method selector='begin'>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginWithClear:g:b:a:'>
<arg declared_type='float' name='r' type='f' index='0'/>
<arg declared_type='float' name='g' type='f' index='1'/>
<arg declared_type='float' name='b' type='f' index='2'/>
<arg declared_type='float' name='a' type='f' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginWithClear:g:b:a:depth:'>
<arg declared_type='float' name='r' type='f' index='0'/>
<arg declared_type='float' name='g' type='f' index='1'/>
<arg declared_type='float' name='b' type='f' index='2'/>
<arg declared_type='float' name='a' type='f' index='3'/>
<arg declared_type='float' name='depthValue' type='f' index='4'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginWithClear:g:b:a:depth:stencil:'>
<arg declared_type='float' name='r' type='f' index='0'/>
<arg declared_type='float' name='g' type='f' index='1'/>
<arg declared_type='float' name='b' type='f' index='2'/>
<arg declared_type='float' name='a' type='f' index='3'/>
<arg declared_type='float' name='depthValue' type='f' index='4'/>
<arg declared_type='int' name='stencilValue' type='i' index='5'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clear:g:b:a:'>
<arg declared_type='float' name='r' type='f' index='0'/>
<arg declared_type='float' name='g' type='f' index='1'/>
<arg declared_type='float' name='b' type='f' index='2'/>
<arg declared_type='float' name='a' type='f' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearDepth:'>
<arg declared_type='float' name='depthValue' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearStencil:'>
<arg declared_type='int' name='stencilValue' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='end'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithWidth:height:pixelFormat:'>
<arg declared_type='int' name='w' type='i' index='0'/>
<arg declared_type='int' name='h' type='i' index='1'/>
<arg declared_type='CCTexture2DPixelFormat' name='format' type='i' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithWidth:height:pixelFormat:depthStencilFormat:'>
<arg declared_type='int' name='w' type='i' index='0'/>
<arg declared_type='int' name='h' type='i' index='1'/>
<arg declared_type='CCTexture2DPixelFormat' name='format' type='i' index='2'/>
<arg declared_type='GLuint' name='depthStencilFormat' type='I' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='newCGImage'>
<retval declared_type='CGImageRef' type='^{CGImage=}'/>
</method>
<method selector='renderTextureWithWidth:height:' class_method='true'>
<arg declared_type='int' name='w' type='i' index='0'/>
<arg declared_type='int' name='h' type='i' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='renderTextureWithWidth:height:pixelFormat:' class_method='true'>
<arg declared_type='int' name='w' type='i' index='0'/>
<arg declared_type='int' name='h' type='i' index='1'/>
<arg declared_type='CCTexture2DPixelFormat' name='format' type='i' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='renderTextureWithWidth:height:pixelFormat:depthStencilFormat:' class_method='true'>
<arg declared_type='int' name='w' type='i' index='0'/>
<arg declared_type='int' name='h' type='i' index='1'/>
<arg declared_type='CCTexture2DPixelFormat' name='format' type='i' index='2'/>
<arg declared_type='GLuint' name='depthStencilFormat' type='I' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='saveToFile:'>
<arg declared_type='NSString*' name='name' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveToFile:format:'>
<arg declared_type='NSString*' name='name' type='@' index='0'/>
<arg declared_type='tCCImageFormat' name='format' type='i' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setSprite:'>
<arg declared_type='CCSprite*' name='sprite' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sprite'>
<retval declared_type='CCSprite*' type='@'/>
</method>
</class>
<class name='CCRepeat'>
<method selector='actionWithAction:times:' class_method='true'>
<arg declared_type='CCFiniteTimeAction*' name='action' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='times' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:times:'>
<arg declared_type='CCFiniteTimeAction*' name='action' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='times' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='innerAction'>
<retval declared_type='CCFiniteTimeAction*' type='@'/>
</method>
<method selector='setInnerAction:'>
<arg declared_type='CCFiniteTimeAction*' name='innerAction' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCRepeatForever'>
<method selector='actionWithAction:' class_method='true'>
<arg declared_type='CCActionInterval*' name='action' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:'>
<arg declared_type='CCActionInterval*' name='action' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='innerAction'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='setInnerAction:'>
<arg declared_type='CCActionInterval*' name='innerAction' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCReuseGrid'>
<method selector='actionWithTimes:' class_method='true'>
<arg declared_type='int' name='times' type='i' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTimes:'>
<arg declared_type='int' name='times' type='i' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCReverseTime'>
<method selector='actionWithAction:' class_method='true'>
<arg declared_type='CCFiniteTimeAction*' name='action' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:'>
<arg declared_type='CCFiniteTimeAction*' name='action' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCRipple3D'>
<method selector='actionWithPosition:radius:waves:amplitude:grid:duration:' class_method='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='pos' type='{CGPoint=ff}' index='0'/>
<arg declared_type='float' name='r' type='f' index='1'/>
<arg declared_type='int' name='wav' type='i' index='2'/>
<arg declared_type='float' name='amp' type='f' index='3'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='4'/>
<arg declared_type='ccTime' name='d' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithPosition:radius:waves:amplitude:grid:duration:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='pos' type='{CGPoint=ff}' index='0'/>
<arg declared_type='float' name='r' type='f' index='1'/>
<arg declared_type='int' name='wav' type='i' index='2'/>
<arg declared_type='float' name='amp' type='f' index='3'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='4'/>
<arg declared_type='ccTime' name='d' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='position'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='setAmplitude:'>
<arg declared_type='float' name='amplitude' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg declared_type='float' name='amplitudeRate' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='position' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCRotateBy'>
<method selector='actionWithDuration:angle:' class_method='true'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='float' name='deltaAngle' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:angle:'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='float' name='deltaAngle' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCRotateTo'>
<method selector='actionWithDuration:angle:' class_method='true'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='float' name='angle' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:angle:'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='float' name='angle' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCScaleBy'>
<method selector='startWithTarget:'>
<arg declared_type='CCNode*' name='aTarget' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCScaleTo'>
<method selector='actionWithDuration:scale:' class_method='true'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='float' name='s' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionWithDuration:scaleX:scaleY:' class_method='true'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='float' name='sx' type='f' index='1'/>
<arg declared_type='float' name='sy' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:scale:'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='float' name='s' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:scaleX:scaleY:'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='float' name='sx' type='f' index='1'/>
<arg declared_type='float' name='sy' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCScene'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCScheduler'>
<method selector='isTargetPaused:'>
<arg declared_type='id' name='target' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pauseAllTargets'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='pauseAllTargetsWithMinPriority:'>
<arg type64='q' declared_type='NSInteger' name='minPriority' type='i' index='0'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='pauseTarget:'>
<arg declared_type='id' name='target' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeTarget:'>
<arg declared_type='id' name='target' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeTargets:'>
<arg declared_type='NSSet*' name='targetsToResume' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleSelector:forTarget:interval:paused:'>
<arg declared_type='SEL' name='selector' type=':' index='0'/>
<arg declared_type='id' name='target' type='@' index='1'/>
<arg declared_type='ccTime' name='interval' type='f' index='2'/>
<arg declared_type='BOOL' name='paused' type='B' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleSelector:forTarget:interval:paused:repeat:delay:'>
<arg declared_type='SEL' name='selector' type=':' index='0'/>
<arg declared_type='id' name='target' type='@' index='1'/>
<arg declared_type='ccTime' name='interval' type='f' index='2'/>
<arg declared_type='BOOL' name='paused' type='B' index='3'/>
<arg declared_type='uint' name='repeat' type='I' index='4'/>
<arg declared_type='ccTime' name='delay' type='f' index='5'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleUpdateForTarget:priority:paused:'>
<arg declared_type='id' name='target' type='@' index='0'/>
<arg type64='q' declared_type='NSInteger' name='priority' type='i' index='1'/>
<arg declared_type='BOOL' name='paused' type='B' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeScale:'>
<arg declared_type='ccTime' name='timeScale' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timeScale'>
<retval declared_type='ccTime' type='f'/>
</method>
<method selector='unscheduleAllSelectors'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleAllSelectorsForTarget:'>
<arg declared_type='id' name='target' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleAllSelectorsWithMinPriority:'>
<arg type64='q' declared_type='NSInteger' name='minPriority' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleSelector:forTarget:'>
<arg declared_type='SEL' name='selector' type=':' index='0'/>
<arg declared_type='id' name='target' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscheduleUpdateForTarget:'>
<arg declared_type='id' name='target' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='update:'>
<arg declared_type='ccTime' name='dt' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCSequence'>
<method selector='actionOne:two:' class_method='true'>
<arg declared_type='CCFiniteTimeAction*' name='actionOne' type='@' index='0'/>
<arg declared_type='CCFiniteTimeAction*' name='actionTwo' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionWithArray:' class_method='true'>
<arg declared_type='NSArray*' name='arrayOfActions' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actions:' sentinel='0' variadic='true' class_method='true'>
<arg declared_type='CCFiniteTimeAction*' name='action1' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actions:vaList:' class_method='true'>
<arg declared_type='CCFiniteTimeAction*' name='action1' type='@' index='0'/>
<arg declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' declared_type='va_list' name='args' type='*' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initOne:two:'>
<arg declared_type='CCFiniteTimeAction*' name='actionOne' type='@' index='0'/>
<arg declared_type='CCFiniteTimeAction*' name='actionTwo' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCShaderCache'>
<method selector='addProgram:forKey:'>
<arg declared_type='CCGLProgram*' name='program' type='@' index='0'/>
<arg declared_type='NSString*' name='key' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadDefaultShaders'>
<retval declared_type='void' type='v'/>
</method>
<method selector='programForKey:'>
<arg declared_type='NSString*' name='key' type='@' index='0'/>
<retval declared_type='CCGLProgram*' type='@'/>
</method>
<method selector='purgeSharedShaderCache' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedShaderCache' class_method='true'>
<retval declared_type='CCShaderCache*' type='@'/>
</method>
</class>
<class name='CCShaky3D'>
<method selector='actionWithRange:shakeZ:grid:duration:' class_method='true'>
<arg declared_type='int' name='range' type='i' index='0'/>
<arg declared_type='BOOL' name='shakeZ' type='B' index='1'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='2'/>
<arg declared_type='ccTime' name='d' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRange:shakeZ:grid:duration:'>
<arg declared_type='int' name='range' type='i' index='0'/>
<arg declared_type='BOOL' name='shakeZ' type='B' index='1'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='2'/>
<arg declared_type='ccTime' name='d' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCShakyTiles3D'>
<method selector='actionWithRange:shakeZ:grid:duration:' class_method='true'>
<arg declared_type='int' name='range' type='i' index='0'/>
<arg declared_type='BOOL' name='shakeZ' type='B' index='1'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='2'/>
<arg declared_type='ccTime' name='d' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRange:shakeZ:grid:duration:'>
<arg declared_type='int' name='range' type='i' index='0'/>
<arg declared_type='BOOL' name='shakeZ' type='B' index='1'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='2'/>
<arg declared_type='ccTime' name='d' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCShatteredTiles3D'>
<method selector='actionWithRange:shatterZ:grid:duration:' class_method='true'>
<arg declared_type='int' name='range' type='i' index='0'/>
<arg declared_type='BOOL' name='shatterZ' type='B' index='1'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='2'/>
<arg declared_type='ccTime' name='d' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRange:shatterZ:grid:duration:'>
<arg declared_type='int' name='range' type='i' index='0'/>
<arg declared_type='BOOL' name='shatterZ' type='B' index='1'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='2'/>
<arg declared_type='ccTime' name='d' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCShow'>
<method selector='update:'>
<arg declared_type='ccTime' name='time' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCShuffleTiles'>
<method selector='actionWithSeed:grid:duration:' class_method='true'>
<arg declared_type='int' name='s' type='i' index='0'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='1'/>
<arg declared_type='ccTime' name='d' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSeed:grid:duration:'>
<arg declared_type='int' name='s' type='i' index='0'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='1'/>
<arg declared_type='ccTime' name='d' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCSkewBy'>
<method selector='initWithDuration:skewX:skewY:'>
<arg declared_type='ccTime' name='t' type='f' index='0'/>
<arg declared_type='float' name='sx' type='f' index='1'/>
<arg declared_type='float' name='sy' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCSkewTo'>
<method selector='actionWithDuration:skewX:skewY:' class_method='true'>
<arg declared_type='ccTime' name='t' type='f' index='0'/>
<arg declared_type='float' name='sx' type='f' index='1'/>
<arg declared_type='float' name='sy' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:skewX:skewY:'>
<arg declared_type='ccTime' name='t' type='f' index='0'/>
<arg declared_type='float' name='sx' type='f' index='1'/>
<arg declared_type='float' name='sy' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCSpawn'>
<method selector='actionOne:two:' class_method='true'>
<arg declared_type='CCFiniteTimeAction*' name='one' type='@' index='0'/>
<arg declared_type='CCFiniteTimeAction*' name='two' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actionWithArray:' class_method='true'>
<arg declared_type='NSArray*' name='arrayOfActions' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actions:' sentinel='0' variadic='true' class_method='true'>
<arg declared_type='CCFiniteTimeAction*' name='action1' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='actions:vaList:' class_method='true'>
<arg declared_type='CCFiniteTimeAction*' name='action1' type='@' index='0'/>
<arg declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' declared_type='va_list' name='args' type='*' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initOne:two:'>
<arg declared_type='CCFiniteTimeAction*' name='one' type='@' index='0'/>
<arg declared_type='CCFiniteTimeAction*' name='two' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCSpeed'>
<method selector='actionWithAction:speed:' class_method='true'>
<arg declared_type='CCActionInterval*' name='action' type='@' index='0'/>
<arg declared_type='float' name='value' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAction:speed:'>
<arg declared_type='CCActionInterval*' name='action' type='@' index='0'/>
<arg declared_type='float' name='value' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='innerAction'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='setInnerAction:'>
<arg declared_type='CCActionInterval*' name='innerAction' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeed:'>
<arg declared_type='float' name='speed' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speed'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='CCSplitCols'>
<method selector='actionWithCols:duration:' class_method='true'>
<arg declared_type='int' name='cols' type='i' index='0'/>
<arg declared_type='ccTime' name='duration' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCols:duration:'>
<arg declared_type='int' name='cols' type='i' index='0'/>
<arg declared_type='ccTime' name='duration' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCSplitRows'>
<method selector='actionWithRows:duration:' class_method='true'>
<arg declared_type='int' name='rows' type='i' index='0'/>
<arg declared_type='ccTime' name='duration' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRows:duration:'>
<arg declared_type='int' name='rows' type='i' index='0'/>
<arg declared_type='ccTime' name='duration' type='f' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCSprite'>
<method selector='atlasIndex'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='batchNode'>
<retval declared_type='CCSpriteBatchNode*' type='@'/>
</method>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='dirty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='displayFrame'>
<retval declared_type='CCSpriteFrame*' type='@'/>
</method>
<method selector='flipX'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='flipY'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCGImage:key:'>
<arg declared_type='CGImageRef' name='image' type='^{CGImage=}' index='0'/>
<arg declared_type='NSString*' name='key' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFile:'>
<arg declared_type='NSString*' name='filename' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFile:rect:'>
<arg declared_type='NSString*' name='filename' type='@' index='0'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSpriteFrame:'>
<arg declared_type='CCSpriteFrame*' name='spriteFrame' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSpriteFrameName:'>
<arg declared_type='NSString*' name='spriteFrameName' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:rect:'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:rect:rotated:'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<arg declared_type='BOOL' name='rotated' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isFrameDisplayed:'>
<arg declared_type='CCSpriteFrame*' name='frame' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='offsetPosition'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='quad'>
<retval declared_type='ccV3F_C4B_T2F_Quad' type='{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}'/>
</method>
<method selector='setAtlasIndex:'>
<arg type64='Q' declared_type='NSUInteger' name='atlasIndex' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBatchNode:'>
<arg declared_type='CCSpriteBatchNode*' name='batchNode' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg declared_type='ccBlendFunc' name='blendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='ccColor3B' name='color' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDirty:'>
<arg declared_type='BOOL' name='dirty' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayFrame:'>
<arg declared_type='CCSpriteFrame*' name='newFrame' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayFrameWithAnimationName:index:'>
<arg declared_type='NSString*' name='animationName' type='@' index='0'/>
<arg declared_type='int' name='frameIndex' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFlipX:'>
<arg declared_type='BOOL' name='flipX' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFlipY:'>
<arg declared_type='BOOL' name='flipY' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg declared_type='GLubyte' name='opacity' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureAtlas:'>
<arg declared_type='CCTextureAtlas*' name='textureAtlas' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureRect:'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureRect:rotated:untrimmedSize:'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0'/>
<arg declared_type='BOOL' name='rotated' type='B' index='1'/>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='size' type='{CGSize=ff}' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexRect:'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='spriteWithCGImage:key:' class_method='true'>
<arg declared_type='CGImageRef' name='image' type='^{CGImage=}' index='0'/>
<arg declared_type='NSString*' name='key' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithFile:' class_method='true'>
<arg declared_type='NSString*' name='filename' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithFile:rect:' class_method='true'>
<arg declared_type='NSString*' name='filename' type='@' index='0'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithSpriteFrame:' class_method='true'>
<arg declared_type='CCSpriteFrame*' name='spriteFrame' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithSpriteFrameName:' class_method='true'>
<arg declared_type='NSString*' name='spriteFrameName' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithTexture:' class_method='true'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='spriteWithTexture:rect:' class_method='true'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='textureAtlas'>
<retval declared_type='CCTextureAtlas*' type='@'/>
</method>
<method selector='textureRect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='textureRectRotated'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updateTransform'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCSpriteBatchNode'>
<method selector='addQuadFromSprite:quadIndex:'>
<arg declared_type='CCSprite*' name='sprite' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteWithoutQuad:z:tag:'>
<arg declared_type='CCSprite*' name='child' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='z' type='I' index='1'/>
<arg type64='q' declared_type='NSInteger' name='aTag' type='i' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='appendChild:'>
<arg declared_type='CCSprite*' name='sprite' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='atlasIndexForChild:atZ:'>
<arg declared_type='CCSprite*' name='sprite' type='@' index='0'/>
<arg type64='q' declared_type='NSInteger' name='z' type='i' index='1'/>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='batchNodeWithFile:' class_method='true'>
<arg declared_type='NSString*' name='fileImage' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithFile:capacity:' class_method='true'>
<arg declared_type='NSString*' name='fileImage' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithTexture:' class_method='true'>
<arg declared_type='CCTexture2D*' name='tex' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='batchNodeWithTexture:capacity:' class_method='true'>
<arg declared_type='CCTexture2D*' name='tex' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='descendants'>
<retval declared_type='CCArray*' type='@'/>
</method>
<method selector='increaseAtlasCapacity'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithFile:capacity:'>
<arg declared_type='NSString*' name='fileImage' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg declared_type='CCTexture2D*' name='tex' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertChild:inAtlasAtIndex:'>
<arg declared_type='CCSprite*' name='child' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rebuildIndexInOrder:atlasIndex:'>
<arg declared_type='CCSprite*' name='parent' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='1'/>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='removeChild:cleanup:'>
<arg declared_type='CCSprite*' name='sprite' type='@' index='0'/>
<arg declared_type='BOOL' name='doCleanup' type='B' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeChildAtIndex:cleanup:'>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='0'/>
<arg declared_type='BOOL' name='doCleanup' type='B' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSpriteFromAtlas:'>
<arg declared_type='CCSprite*' name='sprite' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reorderBatch:'>
<arg declared_type='BOOL' name='reorder' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg declared_type='ccBlendFunc' name='blendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureAtlas:'>
<arg declared_type='CCTextureAtlas*' name='textureAtlas' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textureAtlas'>
<retval declared_type='CCTextureAtlas*' type='@'/>
</method>
</class>
<class name='CCSpriteFrame'>
<method selector='frameWithTexture:rect:' class_method='true'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='frameWithTexture:rectInPixels:rotated:offset:originalSize:' class_method='true'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<arg declared_type='BOOL' name='rotated' type='B' index='2'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='offset' type='{CGPoint=ff}' index='3'/>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='originalSize' type='{CGSize=ff}' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='frameWithTextureFilename:rect:' class_method='true'>
<arg declared_type='NSString*' name='filename' type='@' index='0'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='frameWithTextureFilename:rectInPixels:rotated:offset:originalSize:' class_method='true'>
<arg declared_type='NSString*' name='filename' type='@' index='0'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<arg declared_type='BOOL' name='rotated' type='B' index='2'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='offset' type='{CGPoint=ff}' index='3'/>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='originalSize' type='{CGSize=ff}' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:rect:'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:rectInPixels:rotated:offset:originalSize:'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<arg declared_type='BOOL' name='rotated' type='B' index='2'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='offset' type='{CGPoint=ff}' index='3'/>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='originalSize' type='{CGSize=ff}' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTextureFilename:rect:'>
<arg declared_type='NSString*' name='filename' type='@' index='0'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTextureFilename:rectInPixels:rotated:offset:originalSize:'>
<arg declared_type='NSString*' name='filename' type='@' index='0'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='1'/>
<arg declared_type='BOOL' name='rotated' type='B' index='2'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='offset' type='{CGPoint=ff}' index='3'/>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='originalSize' type='{CGSize=ff}' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='offset'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='offsetInPixels'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='originalSize'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='originalSizeInPixels'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='rect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='rectInPixels'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='rotated'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setOffset:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='offset' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffsetInPixels:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='offsetInPixels' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOriginalSize:'>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='originalSize' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOriginalSizeInPixels:'>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='originalSizeInPixels' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRect:'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRectInPixels:'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rectInPixels' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotated:'>
<arg declared_type='BOOL' name='rotated' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='textureFilename'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='CCSpriteFrameCache'>
<method selector='addSpriteFrame:name:'>
<arg declared_type='CCSpriteFrame*' name='frame' type='@' index='0'/>
<arg declared_type='NSString*' name='frameName' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFramesWithFile:'>
<arg declared_type='NSString*' name='plist' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFramesWithFile:texture:'>
<arg declared_type='NSString*' name='plist' type='@' index='0'/>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSpriteFramesWithFile:textureFilename:'>
<arg declared_type='NSString*' name='plist' type='@' index='0'/>
<arg declared_type='NSString*' name='filename' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='purgeSharedSpriteFrameCache' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSpriteFrameByName:'>
<arg declared_type='NSString*' name='name' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSpriteFrames'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSpriteFramesFromFile:'>
<arg declared_type='NSString*' name='plist' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSpriteFramesFromTexture:'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeUnusedSpriteFrames'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedSpriteFrameCache' class_method='true'>
<retval declared_type='CCSpriteFrameCache*' type='@'/>
</method>
<method selector='spriteFrameByName:'>
<arg declared_type='NSString*' name='name' type='@' index='0'/>
<retval declared_type='CCSpriteFrame*' type='@'/>
</method>
</class>
<class name='CCTMXLayer'>
<method selector='addChild:z:tag:'>
<arg declared_type='CCNode*' name='node' type='@' index='0'/>
<arg type64='q' declared_type='NSInteger' name='z' type='i' index='1'/>
<arg type64='q' declared_type='NSInteger' name='tag' type='i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithTilesetInfo:layerInfo:mapInfo:'>
<arg declared_type='CCTMXTilesetInfo*' name='tilesetInfo' type='@' index='0'/>
<arg declared_type='CCTMXLayerInfo*' name='layerInfo' type='@' index='1'/>
<arg declared_type='CCTMXMapInfo*' name='mapInfo' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='layerOrientation'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='layerSize'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='layerWithTilesetInfo:layerInfo:mapInfo:' class_method='true'>
<arg declared_type='CCTMXTilesetInfo*' name='tilesetInfo' type='@' index='0'/>
<arg declared_type='CCTMXLayerInfo*' name='layerInfo' type='@' index='1'/>
<arg declared_type='CCTMXMapInfo*' name='mapInfo' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapTileSize'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='positionAt:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='tileCoordinate' type='{CGPoint=ff}' index='0'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='properties'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='propertyNamed:'>
<arg declared_type='NSString*' name='propertyName' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='releaseMap'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTileAt:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='tileCoordinate' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayerName:'>
<arg declared_type='NSString*' name='layerName' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayerOrientation:'>
<arg type64='Q' declared_type='NSUInteger' name='layerOrientation' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayerSize:'>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='layerSize' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapTileSize:'>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='mapTileSize' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProperties:'>
<arg declared_type='NSMutableArray*' name='properties' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileGID:at:'>
<arg declared_type='uint32_t' name='gid' type='I' index='0'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='tileCoordinate' type='{CGPoint=ff}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileGID:at:withFlags:'>
<arg declared_type='uint32_t' name='gid' type='I' index='0'/>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='pos' type='{CGPoint=ff}' index='1'/>
<arg declared_type='ccTMXTileFlags' name='flags' type='i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTiles:'>
<arg declared_type='uint32_t*' name='tiles' type='^I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileset:'>
<arg declared_type='CCTMXTilesetInfo*' name='tileset' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setupTiles'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileAt:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='tileCoordinate' type='{CGPoint=ff}' index='0'/>
<retval declared_type='CCSprite*' type='@'/>
</method>
<method selector='tileGIDAt:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='tileCoordinate' type='{CGPoint=ff}' index='0'/>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='tileGIDAt:withFlags:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='pos' type='{CGPoint=ff}' index='0'/>
<arg declared_type='ccTMXTileFlags*' name='flags' type='^i' index='1'/>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='tiles'>
<retval declared_type='uint32_t*' type='^I'/>
</method>
<method selector='tileset'>
<retval declared_type='CCTMXTilesetInfo*' type='@'/>
</method>
</class>
<class name='CCTMXLayerInfo'>
<method selector='layerSize'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='maxGID'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='minGID'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='offset'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='opacity'>
<retval declared_type='unsigned char' type='C'/>
</method>
<method selector='ownTiles'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='properties'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='setLayerSize:'>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='layerSize' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxGID:'>
<arg declared_type='unsigned int' name='maxGID' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinGID:'>
<arg declared_type='unsigned int' name='minGID' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString*' name='name' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffset:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='offset' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg declared_type='unsigned char' name='opacity' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOwnTiles:'>
<arg declared_type='BOOL' name='ownTiles' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProperties:'>
<arg declared_type='NSMutableDictionary*' name='properties' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTiles:'>
<arg declared_type='unsigned int*' name='tiles' type='^I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisible:'>
<arg declared_type='BOOL' name='visible' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tiles'>
<retval declared_type='unsigned int*' type='^I'/>
</method>
<method selector='visible'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='CCTMXMapInfo'>
<method selector='filename'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='formatWithTMXFile:' class_method='true'>
<arg declared_type='NSString*' name='tmxFile' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='formatWithXML:resourcePath:' class_method='true'>
<arg declared_type='NSString*' name='tmxString' type='@' index='0'/>
<arg declared_type='NSString*' name='resourcePath' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTMXFile:'>
<arg declared_type='NSString*' name='tmxFile' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithXML:resourcePath:'>
<arg declared_type='NSString*' name='tmxString' type='@' index='0'/>
<arg declared_type='NSString*' name='resourcePath' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layers'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='mapSize'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='objectGroups'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='orientation'>
<retval declared_type='int' type='i'/>
</method>
<method selector='properties'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='resources'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setFilename:'>
<arg declared_type='NSString*' name='filename' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayers:'>
<arg declared_type='NSMutableArray*' name='layers' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapSize:'>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='mapSize' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectGroups:'>
<arg declared_type='NSMutableArray*' name='objectGroups' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrientation:'>
<arg declared_type='int' name='orientation' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProperties:'>
<arg declared_type='NSMutableDictionary*' name='properties' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResources:'>
<arg declared_type='NSString*' name='resources' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileProperties:'>
<arg declared_type='NSMutableDictionary*' name='tileProperties' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileSize:'>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='tileSize' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTilesets:'>
<arg declared_type='NSMutableArray*' name='tilesets' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileProperties'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='tileSize'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='tilesets'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
</class>
<class name='CCTMXObjectGroup'>
<method selector='groupName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='objectNamed:'>
<arg declared_type='NSString*' name='objectName' type='@' index='0'/>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='objects'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='positionOffset'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='properties'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='propertyNamed:'>
<arg declared_type='NSString*' name='propertyName' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setGroupName:'>
<arg declared_type='NSString*' name='groupName' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjects:'>
<arg declared_type='NSMutableArray*' name='objects' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPositionOffset:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='positionOffset' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProperties:'>
<arg declared_type='NSMutableDictionary*' name='properties' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTMXTiledMap'>
<method selector='initWithTMXFile:'>
<arg declared_type='NSString*' name='tmxFile' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithXML:resourcePath:'>
<arg declared_type='NSString*' name='tmxString' type='@' index='0'/>
<arg declared_type='NSString*' name='resourcePath' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layerNamed:'>
<arg declared_type='NSString*' name='layerName' type='@' index='0'/>
<retval declared_type='CCTMXLayer*' type='@'/>
</method>
<method selector='mapOrientation'>
<retval declared_type='int' type='i'/>
</method>
<method selector='mapSize'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='objectGroupNamed:'>
<arg declared_type='NSString*' name='groupName' type='@' index='0'/>
<retval declared_type='CCTMXObjectGroup*' type='@'/>
</method>
<method selector='objectGroups'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='properties'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='propertiesForGID:'>
<arg declared_type='unsigned int' name='GID' type='I' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='propertyNamed:'>
<arg declared_type='NSString*' name='propertyName' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setObjectGroups:'>
<arg declared_type='NSMutableArray*' name='objectGroups' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProperties:'>
<arg declared_type='NSMutableDictionary*' name='properties' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileSize'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='tiledMapWithTMXFile:' class_method='true'>
<arg declared_type='NSString*' name='tmxFile' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='tiledMapWithXML:resourcePath:' class_method='true'>
<arg declared_type='NSString*' name='tmxString' type='@' index='0'/>
<arg declared_type='NSString*' name='resourcePath' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTMXTilesetInfo'>
<method selector='firstGid'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='imageSize'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='margin'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='rectForGID:'>
<arg declared_type='unsigned int' name='gid' type='I' index='0'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='setFirstGid:'>
<arg declared_type='unsigned int' name='firstGid' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageSize:'>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='imageSize' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMargin:'>
<arg declared_type='unsigned int' name='margin' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString*' name='name' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceImage:'>
<arg declared_type='NSString*' name='sourceImage' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpacing:'>
<arg declared_type='unsigned int' name='spacing' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileSize:'>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='tileSize' type='{CGSize=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceImage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='spacing'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='tileSize'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
</class>
<class name='CCTargetedAction'>
<method selector='actionWithTarget:action:' class_method='true'>
<arg declared_type='id' name='target' type='@' index='0'/>
<arg declared_type='CCFiniteTimeAction*' name='action' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='forcedTarget'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:action:'>
<arg declared_type='id' name='target' type='@' index='0'/>
<arg declared_type='CCFiniteTimeAction*' name='action' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setForcedTarget:'>
<arg declared_type='id' name='forcedTarget' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTexture2D'>
<method selector='PVRImagesHavePremultipliedAlpha:' class_method='true'>
<arg declared_type='BOOL' name='haveAlphaPremultiplied' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bitsPerPixelForFormat'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='bitsPerPixelForFormat:' class_method='true'>
<arg declared_type='CCTexture2DPixelFormat' name='format' type='i' index='0'/>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='contentSize'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='contentSizeInPixels'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='defaultAlphaPixelFormat' class_method='true'>
<retval declared_type='CCTexture2DPixelFormat' type='i'/>
</method>
<method selector='drawAtPoint:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='point' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='generateMipmap'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasPremultipliedAlpha'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCGImage:'>
<arg declared_type='CGImageRef' name='cgImage' type='^{CGImage=}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithData:pixelFormat:pixelsWide:pixelsHigh:contentSize:'>
<arg declared_type='void*' name='data' type='^v' index='0' const='true'/>
<arg declared_type='CCTexture2DPixelFormat' name='pixelFormat' type='i' index='1'/>
<arg type64='Q' declared_type='NSUInteger' name='width' type='I' index='2'/>
<arg type64='Q' declared_type='NSUInteger' name='height' type='I' index='3'/>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='size' type='{CGSize=ff}' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPVRFile:'>
<arg declared_type='NSString*' name='file' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:fontName:fontSize:'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='dimensions' type='{CGSize=ff}' index='1'/>
<arg declared_type='CCTextAlignment' name='alignment' type='i' index='2'/>
<arg declared_type='CCVerticalTextAlignment' name='vertAlignment' type='i' index='3'/>
<arg declared_type='NSString*' name='name' type='@' index='4'/>
<arg type64='d' declared_type='CGFloat' name='size' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:dimensions:hAlignment:vAlignment:lineBreakMode:fontName:fontSize:'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg type64='{CGSize=dd}' declared_type='CGSize' name='dimensions' type='{CGSize=ff}' index='1'/>
<arg declared_type='CCTextAlignment' name='alignment' type='i' index='2'/>
<arg declared_type='CCVerticalTextAlignment' name='vertAlignment' type='i' index='3'/>
<arg declared_type='CCLineBreakMode' name='lineBreakMode' type='i' index='4'/>
<arg declared_type='NSString*' name='name' type='@' index='5'/>
<arg type64='d' declared_type='CGFloat' name='size' type='f' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:fontName:fontSize:'>
<arg declared_type='NSString*' name='string' type='@' index='0'/>
<arg declared_type='NSString*' name='name' type='@' index='1'/>
<arg type64='d' declared_type='CGFloat' name='size' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='keepData:length:'>
<arg declared_type='void*' name='data' type='^v' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='length' type='I' index='1'/>
<retval declared_type='void*' type='^v'/>
</method>
<method selector='maxS'>
<retval declared_type='GLfloat' type='f'/>
</method>
<method selector='maxT'>
<retval declared_type='GLfloat' type='f'/>
</method>
<method selector='name'>
<retval declared_type='GLuint' type='I'/>
</method>
<method selector='pixelFormat'>
<retval declared_type='CCTexture2DPixelFormat' type='i'/>
</method>
<method selector='pixelsHigh'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='pixelsWide'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='releaseData:'>
<arg declared_type='void*' name='data' type='^v' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAliasTexParameters'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAntiAliasTexParameters'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultAlphaPixelFormat:' class_method='true'>
<arg declared_type='CCTexture2DPixelFormat' name='format' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxS:'>
<arg declared_type='GLfloat' name='maxS' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxT:'>
<arg declared_type='GLfloat' name='maxT' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShaderProgram:'>
<arg declared_type='CCGLProgram*' name='shaderProgram' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexParameters:'>
<arg declared_type='ccTexParams*' name='texParams' type='^{_ccTexParams=IIII}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shaderProgram'>
<retval declared_type='CCGLProgram*' type='@'/>
</method>
<method selector='stringForFormat'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='CCTextureAtlas'>
<method selector='capacity'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='drawNumberOfQuads:'>
<arg type64='Q' declared_type='NSUInteger' name='n' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawNumberOfQuads:fromIndex:'>
<arg type64='Q' declared_type='NSUInteger' name='n' type='I' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='start' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawQuads'>
<retval declared_type='void' type='v'/>
</method>
<method selector='fillWithEmptyQuadsFromIndex:amount:'>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='amount' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='increaseTotalQuadsWith:'>
<arg type64='Q' declared_type='NSUInteger' name='amount' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithFile:capacity:'>
<arg declared_type='NSString*' name='file' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTexture:capacity:'>
<arg declared_type='CCTexture2D*' name='tex' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertQuad:atIndex:'>
<arg declared_type='ccV3F_C4B_T2F_Quad*' name='quad' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertQuadFromIndex:atIndex:'>
<arg type64='Q' declared_type='NSUInteger' name='fromIndex' type='I' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='newIndex' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertQuads:atIndex:amount:'>
<arg declared_type='ccV3F_C4B_T2F_Quad*' name='quads' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='1'/>
<arg type64='Q' declared_type='NSUInteger' name='amount' type='I' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveQuadsFromIndex:amount:atIndex:'>
<arg type64='Q' declared_type='NSUInteger' name='oldIndex' type='I' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='amount' type='I' index='1'/>
<arg type64='Q' declared_type='NSUInteger' name='newIndex' type='I' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveQuadsFromIndex:to:'>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='newIndex' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='quads'>
<retval declared_type='ccV3F_C4B_T2F_Quad*' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}'/>
</method>
<method selector='removeAllQuads'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeQuadAtIndex:'>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeQuadsAtIndex:amount:'>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='amount' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resizeCapacity:'>
<arg type64='Q' declared_type='NSUInteger' name='n' type='I' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setQuads:'>
<arg declared_type='ccV3F_C4B_T2F_Quad*' name='quads' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='textureAtlasWithFile:capacity:' class_method='true'>
<arg declared_type='NSString*' name='file' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='textureAtlasWithTexture:capacity:' class_method='true'>
<arg declared_type='CCTexture2D*' name='tex' type='@' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='capacity' type='I' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='totalQuads'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='updateQuad:atIndex:'>
<arg declared_type='ccV3F_C4B_T2F_Quad*' name='quad' type='^{_ccV3F_C4B_T2F_Quad={_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}{_ccV3F_C4B_T2F={_ccVertex3F=fff}{_ccColor4B=CCCC}{_ccTex2F=ff}}}' index='0'/>
<arg type64='Q' declared_type='NSUInteger' name='index' type='I' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTextureCache'>
<method selector='addCGImage:forKey:'>
<arg declared_type='CGImageRef' name='image' type='^{CGImage=}' index='0'/>
<arg declared_type='NSString*' name='key' type='@' index='1'/>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='addImage:'>
<arg declared_type='NSString*' name='fileimage' type='@' index='0'/>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='addImageAsync:target:selector:'>
<arg declared_type='NSString*' name='filename' type='@' index='0'/>
<arg declared_type='id' name='target' type='@' index='1'/>
<arg declared_type='SEL' name='selector' type=':' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addImageAsync:withBlock:'>
<arg declared_type='NSString*' name='filename' type='@' index='0'/>
<arg declared_type='void (^)(CCTexture2D *)' name='block' type='@?' index='1' function_pointer='true'>
<arg declared_type='CCTexture2D*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPVRImage:'>
<arg declared_type='NSString*' name='filename' type='@' index='0'/>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='dumpCachedTextureInfo'>
<retval declared_type='void' type='v'/>
</method>
<method selector='purgeSharedTextureCache' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllTextures'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTexture:'>
<arg declared_type='CCTexture2D*' name='tex' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTextureForKey:'>
<arg declared_type='NSString*' name='textureKeyName' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeUnusedTextures'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedTextureCache' class_method='true'>
<retval declared_type='CCTextureCache*' type='@'/>
</method>
<method selector='textureForKey:'>
<arg declared_type='NSString*' name='key' type='@' index='0'/>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
</class>
<class name='CCTexturePVR'>
<method selector='format'>
<retval declared_type='CCTexture2DPixelFormat' type='i'/>
</method>
<method selector='hasAlpha'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='height'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg declared_type='NSString*' name='path' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg declared_type='NSURL*' name='url' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='GLuint' type='I'/>
</method>
<method selector='numberOfMipmaps'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='pvrTextureWithContentsOfFile:' class_method='true'>
<arg declared_type='NSString*' name='path' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='pvrTextureWithContentsOfURL:' class_method='true'>
<arg declared_type='NSURL*' name='url' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='retainName'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setRetainName:'>
<arg declared_type='BOOL' name='retainName' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='width'>
<retval declared_type='uint32_t' type='I'/>
</method>
</class>
<class name='CCTileMapAtlas'>
<method selector='initWithTileFile:mapFile:tileWidth:tileHeight:'>
<arg declared_type='NSString*' name='tile' type='@' index='0'/>
<arg declared_type='NSString*' name='map' type='@' index='1'/>
<arg declared_type='int' name='w' type='i' index='2'/>
<arg declared_type='int' name='h' type='i' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='releaseMap'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTile:at:'>
<arg declared_type='ccColor3B' name='tile' type='{_ccColor3B=CCC}' index='0'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='position' type='{_ccGridSize=ii}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tgaInfo'>
<retval declared_type='tImageTGA*' type='^{sImageTGA=iCCss*i}'/>
</method>
<method selector='tileAt:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='position' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='tileMapAtlasWithTileFile:mapFile:tileWidth:tileHeight:' class_method='true'>
<arg declared_type='NSString*' name='tile' type='@' index='0'/>
<arg declared_type='NSString*' name='map' type='@' index='1'/>
<arg declared_type='int' name='w' type='i' index='2'/>
<arg declared_type='int' name='h' type='i' index='3'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTiledGrid3D'>
<method selector='originalTile:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='pos' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccQuad3' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}'/>
</method>
<method selector='setTile:coords:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='pos' type='{_ccGridSize=ii}' index='0'/>
<arg declared_type='ccQuad3' name='coords' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tile:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='pos' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccQuad3' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}'/>
</method>
</class>
<class name='CCTiledGrid3DAction'>
<method selector='originalTile:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='pos' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccQuad3' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}'/>
</method>
<method selector='setTile:coords:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='pos' type='{_ccGridSize=ii}' index='0'/>
<arg declared_type='ccQuad3' name='coords' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tile:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='pos' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='ccQuad3' type='{_ccQuad3={_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}{_ccVertex3F=fff}}'/>
</method>
</class>
<class name='CCTimer'>
<method selector='initWithTarget:selector:'>
<arg declared_type='id' name='t' type='@' index='0'/>
<arg declared_type='SEL' name='s' type=':' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTarget:selector:interval:repeat:delay:'>
<arg declared_type='id' name='t' type='@' index='0'/>
<arg declared_type='SEL' name='s' type=':' index='1'/>
<arg declared_type='ccTime' name='seconds' type='f' index='2'/>
<arg declared_type='uint' name='r' type='I' index='3'/>
<arg declared_type='ccTime' name='d' type='f' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='interval'>
<retval declared_type='ccTime' type='f'/>
</method>
<method selector='setInterval:'>
<arg declared_type='ccTime' name='interval' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timerWithTarget:selector:' class_method='true'>
<arg declared_type='id' name='t' type='@' index='0'/>
<arg declared_type='SEL' name='s' type=':' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='timerWithTarget:selector:interval:' class_method='true'>
<arg declared_type='id' name='t' type='@' index='0'/>
<arg declared_type='SEL' name='s' type=':' index='1'/>
<arg declared_type='ccTime' name='seconds' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='update:'>
<arg declared_type='ccTime' name='dt' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTintBy'>
<method selector='actionWithDuration:red:green:blue:' class_method='true'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='GLshort' name='deltaRed' type='s' index='1'/>
<arg declared_type='GLshort' name='deltaGreen' type='s' index='2'/>
<arg declared_type='GLshort' name='deltaBlue' type='s' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:red:green:blue:'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='GLshort' name='deltaRed' type='s' index='1'/>
<arg declared_type='GLshort' name='deltaGreen' type='s' index='2'/>
<arg declared_type='GLshort' name='deltaBlue' type='s' index='3'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTintTo'>
<method selector='actionWithDuration:red:green:blue:' class_method='true'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='GLubyte' name='red' type='C' index='1'/>
<arg declared_type='GLubyte' name='green' type='C' index='2'/>
<arg declared_type='GLubyte' name='blue' type='C' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDuration:red:green:blue:'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='GLubyte' name='red' type='C' index='1'/>
<arg declared_type='GLubyte' name='green' type='C' index='2'/>
<arg declared_type='GLubyte' name='blue' type='C' index='3'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCToggleVisibility'>
<method selector='update:'>
<arg declared_type='ccTime' name='time' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTransitionFade'>
<method selector='initWithDuration:scene:withColor:'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='CCScene*' name='scene' type='@' index='1'/>
<arg declared_type='ccColor3B' name='color' type='{_ccColor3B=CCC}' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='transitionWithDuration:scene:withColor:' class_method='true'>
<arg declared_type='ccTime' name='duration' type='f' index='0'/>
<arg declared_type='CCScene*' name='scene' type='@' index='1'/>
<arg declared_type='ccColor3B' name='color' type='{_ccColor3B=CCC}' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionFadeTR'>
<method selector='actionWithSize:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='vector' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
</class>
<class name='CCTransitionMoveInL'>
<method selector='action'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='initScenes'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTransitionPageTurn'>
<method selector='actionWithSize:'>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='vector' type='{_ccGridSize=ii}' index='0'/>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='initWithDuration:scene:backwards:'>
<arg declared_type='ccTime' name='t' type='f' index='0'/>
<arg declared_type='CCScene*' name='s' type='@' index='1'/>
<arg declared_type='BOOL' name='back' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='transitionWithDuration:scene:backwards:' class_method='true'>
<arg declared_type='ccTime' name='t' type='f' index='0'/>
<arg declared_type='CCScene*' name='s' type='@' index='1'/>
<arg declared_type='BOOL' name='back' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionScene'>
<method selector='finish'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hideOutShowIn'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithDuration:scene:'>
<arg declared_type='ccTime' name='t' type='f' index='0'/>
<arg declared_type='CCScene*' name='s' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='transitionWithDuration:scene:' class_method='true'>
<arg declared_type='ccTime' name='t' type='f' index='0'/>
<arg declared_type='CCScene*' name='s' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionSceneOriented'>
<method selector='initWithDuration:scene:orientation:'>
<arg declared_type='ccTime' name='t' type='f' index='0'/>
<arg declared_type='CCScene*' name='s' type='@' index='1'/>
<arg declared_type='tOrientation' name='o' type='i' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='transitionWithDuration:scene:orientation:' class_method='true'>
<arg declared_type='ccTime' name='t' type='f' index='0'/>
<arg declared_type='CCScene*' name='s' type='@' index='1'/>
<arg declared_type='tOrientation' name='o' type='i' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTransitionSlideInL'>
<method selector='action'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='initScenes'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCTransitionSplitCols'>
<method selector='action'>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
</class>
<class name='CCTurnOffTiles'>
<method selector='actionWithSeed:grid:duration:' class_method='true'>
<arg declared_type='int' name='s' type='i' index='0'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='1'/>
<arg declared_type='ccTime' name='d' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSeed:grid:duration:'>
<arg declared_type='int' name='s' type='i' index='0'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='1'/>
<arg declared_type='ccTime' name='d' type='f' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CCTwirl'>
<method selector='actionWithPosition:twirls:amplitude:grid:duration:' class_method='true'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='pos' type='{CGPoint=ff}' index='0'/>
<arg declared_type='int' name='t' type='i' index='1'/>
<arg declared_type='float' name='amp' type='f' index='2'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='3'/>
<arg declared_type='ccTime' name='d' type='f' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithPosition:twirls:amplitude:grid:duration:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='pos' type='{CGPoint=ff}' index='0'/>
<arg declared_type='int' name='t' type='i' index='1'/>
<arg declared_type='float' name='amp' type='f' index='2'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='3'/>
<arg declared_type='ccTime' name='d' type='f' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='position'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='setAmplitude:'>
<arg declared_type='float' name='amplitude' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg declared_type='float' name='amplitudeRate' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg type64='{CGPoint=dd}' declared_type='CGPoint' name='position' type='{CGPoint=ff}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCWaves'>
<method selector='actionWithWaves:amplitude:horizontal:vertical:grid:duration:' class_method='true'>
<arg declared_type='int' name='wav' type='i' index='0'/>
<arg declared_type='float' name='amp' type='f' index='1'/>
<arg declared_type='BOOL' name='h' type='B' index='2'/>
<arg declared_type='BOOL' name='v' type='B' index='3'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='4'/>
<arg declared_type='ccTime' name='d' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithWaves:amplitude:horizontal:vertical:grid:duration:'>
<arg declared_type='int' name='wav' type='i' index='0'/>
<arg declared_type='float' name='amp' type='f' index='1'/>
<arg declared_type='BOOL' name='h' type='B' index='2'/>
<arg declared_type='BOOL' name='v' type='B' index='3'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='4'/>
<arg declared_type='ccTime' name='d' type='f' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAmplitude:'>
<arg declared_type='float' name='amplitude' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg declared_type='float' name='amplitudeRate' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCWaves3D'>
<method selector='actionWithWaves:amplitude:grid:duration:' class_method='true'>
<arg declared_type='int' name='wav' type='i' index='0'/>
<arg declared_type='float' name='amp' type='f' index='1'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='2'/>
<arg declared_type='ccTime' name='d' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg declared_type='int' name='wav' type='i' index='0'/>
<arg declared_type='float' name='amp' type='f' index='1'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='2'/>
<arg declared_type='ccTime' name='d' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAmplitude:'>
<arg declared_type='float' name='amplitude' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg declared_type='float' name='amplitudeRate' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCWavesTiles3D'>
<method selector='actionWithWaves:amplitude:grid:duration:' class_method='true'>
<arg declared_type='int' name='wav' type='i' index='0'/>
<arg declared_type='float' name='amp' type='f' index='1'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='2'/>
<arg declared_type='ccTime' name='d' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='amplitude'>
<retval declared_type='float' type='f'/>
</method>
<method selector='amplitudeRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithWaves:amplitude:grid:duration:'>
<arg declared_type='int' name='wav' type='i' index='0'/>
<arg declared_type='float' name='amp' type='f' index='1'/>
<arg type64='{_ccGridSize=qq}' declared_type='ccGridSize' name='gridSize' type='{_ccGridSize=ii}' index='2'/>
<arg declared_type='ccTime' name='d' type='f' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAmplitude:'>
<arg declared_type='float' name='amplitude' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAmplitudeRate:'>
<arg declared_type='float' name='amplitudeRate' type='f' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CCWindow'>
<method selector='initWithFrame:fullscreen:'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='NSRect' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' index='0'/>
<arg declared_type='BOOL' name='fullscreen' type='B' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='blendFunc'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='ccFlagsChanged:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccKeyDown:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccKeyUp:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccMouseDown:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccMouseDragged:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccMouseEntered:'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ccMouseExited:'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ccMouseMoved:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccMouseUp:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccOtherMouseDown:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccOtherMouseDragged:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccOtherMouseUp:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccRightMouseDown:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccRightMouseDragged:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccRightMouseUp:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccScrollWheel:'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccTouchesBeganWithEvent:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccTouchesCancelledWithEvent:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccTouchesEndedWithEvent:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccTouchesMovedWithEvent:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='color'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='doesOpacityModifyRGB'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='easeActionWithAction:'>
<arg declared_type='CCActionInterval*' name='action' type='@' index='0'/>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
<method selector='flagsChanged:'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyDown:'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyUp:'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseDown:'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseDragged:'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseEntered:'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseExited:'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseMoved:'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseUp:'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='opacity'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='otherMouseDown:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='otherMouseDragged:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='otherMouseUp:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightMouseDown:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightMouseDragged:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightMouseUp:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollWheel:'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFunc:'>
<arg declared_type='ccBlendFunc' name='blendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCString:'>
<arg declared_type='char*' name='label' type='*' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='ccColor3B' name='color' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg declared_type='GLubyte' name='opacity' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacityModifyRGB:'>
<arg declared_type='BOOL' name='boolean' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setString:'>
<arg declared_type='NSString*' name='label' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='string'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='texture'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
<method selector='touchesBeganWithEvent:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesCancelledWithEvent:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesEndedWithEvent:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesMovedWithEvent:'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateProjection'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSThread'>
<method selector='performBlock:'>
<arg declared_type='void (^)(void)' name='block' type='@?' index='0' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='performBlock:waitUntilDone:'>
<arg declared_type='void (^)(void)' name='block' type='@?' index='0' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='BOOL' name='wait' type='B' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performBlock:withObject:waitUntilDone:'>
<arg declared_type='void (^)(id)' name='block' type='@?' index='0' function_pointer='true'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='id' name='object' type='@' index='1'/>
<arg declared_type='BOOL' name='wait' type='B' index='2'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='CCBlendProtocol'>
<method selector='blendFunc' type64='{_ccBlendFunc=II}16@0:8' type='{_ccBlendFunc=II}8@0:4'>
<retval declared_type='ccBlendFunc' type='{_ccBlendFunc=II}'/>
</method>
<method selector='setBlendFunc:' type64='v24@0:8{_ccBlendFunc=II}16' type='v16@0:4{_ccBlendFunc=II}8'>
<arg declared_type='ccBlendFunc' name='blendFunc' type='{_ccBlendFunc=II}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CCDirectorDelegate'>
<method selector='updateProjection' type64='v16@0:8' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CCEventDelegate'>
<method selector='flagsChanged:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyDown:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyUp:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseDown:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseDragged:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseEntered:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseExited:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseMoved:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseUp:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='otherMouseDown:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='otherMouseDragged:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='otherMouseUp:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightMouseDown:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightMouseDragged:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightMouseUp:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollWheel:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesBeganWithEvent:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesCancelledWithEvent:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesEndedWithEvent:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesMovedWithEvent:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CCKeyboardEventDelegate'>
<method selector='ccFlagsChanged:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccKeyDown:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccKeyUp:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='CCLabelProtocol'>
<method selector='setCString:' type64='v24@0:8*16' type='v12@0:4*8'>
<arg declared_type='char*' name='label' type='*' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setString:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSString*' name='label' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='string' type64='@16@0:8' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='CCMouseEventDelegate'>
<method selector='ccMouseDown:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccMouseDragged:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccMouseEntered:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ccMouseExited:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ccMouseMoved:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccMouseUp:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccOtherMouseDown:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccOtherMouseDragged:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccOtherMouseUp:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccRightMouseDown:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccRightMouseDragged:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccRightMouseUp:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccScrollWheel:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='theEvent' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='CCRGBAProtocol'>
<method selector='color' type64='{_ccColor3B=CCC}16@0:8' type='{_ccColor3B=CCC}8@0:4'>
<retval declared_type='ccColor3B' type='{_ccColor3B=CCC}'/>
</method>
<method selector='doesOpacityModifyRGB' type64='B16@0:8' type='B8@0:4'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='opacity' type64='C16@0:8' type='C8@0:4'>
<retval declared_type='GLubyte' type='C'/>
</method>
<method selector='setColor:' type64='v19@0:8{_ccColor3B=CCC}16' type='v11@0:4{_ccColor3B=CCC}8'>
<arg declared_type='ccColor3B' name='color' type='{_ccColor3B=CCC}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:' type64='v20@0:8C16' type='v12@0:4C8'>
<arg declared_type='GLubyte' name='opacity' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacityModifyRGB:' type64='v20@0:8B16' type='v12@0:4B8'>
<arg declared_type='BOOL' name='boolean' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CCTextureProtocol'>
<method selector='setTexture:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg declared_type='CCTexture2D*' name='texture' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='texture' type64='@16@0:8' type='@8@0:4'>
<retval declared_type='CCTexture2D*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='CCTouchEventDelegate'>
<method selector='ccTouchesBeganWithEvent:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccTouchesCancelledWithEvent:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccTouchesEndedWithEvent:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ccTouchesMovedWithEvent:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg declared_type='NSEvent*' name='event' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='CCTransitionEaseScene'>
<method selector='easeActionWithAction:' type64='@24@0:8@16' type='@12@0:4@8'>
<arg declared_type='CCActionInterval*' name='action' type='@' index='0'/>
<retval declared_type='CCActionInterval*' type='@'/>
</method>
</informal_protocol>
</signatures>
