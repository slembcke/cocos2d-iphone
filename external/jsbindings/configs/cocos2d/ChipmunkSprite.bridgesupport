<?xml version='1.0'?>
<signatures version='1.0'>
<class name='ChipmunkDebugNode'>
<method selector='debugNodeForCPSpace:' class_method='true'>
<arg name='space' declared_type='cpSpace*' type='^{cpSpace=i{CGPoint=ff}fffffIi^v^{cpBody}If^{cpArray}^{cpArray}^{cpArray}^{cpSpatialIndex}^{cpSpatialIndex}^{cpArray}^{cpContactBufferHeader}^{cpHashSet}^{cpArray}^{cpArray}^{cpArray}i^{cpHashSet}{cpCollisionHandler=II^?^?^?^?^v}i^{cpArray}{cpBody=^?^?ffff{CGPoint=ff}{CGPoint=ff}{CGPoint=ff}fff{CGPoint=ff}^vff{CGPoint=ff}f^{cpSpace}^{cpShape}^{cpArbiter}^{cpConstraint}{cpComponentNode=^{cpBody}^{cpBody}f}}}' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='debugNodeForChipmunkSpace:' class_method='true'>
<arg name='space' declared_type='ChipmunkSpace*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='ChipmunkSprite'>
<method selector='body'>
<retval declared_type='cpBody*' type='^{cpBody=^?^?ffff{CGPoint=ff}{CGPoint=ff}{CGPoint=ff}fff{CGPoint=ff}^vff{CGPoint=ff}f^{cpSpace}^{cpShape}^{cpArbiter}^{cpConstraint}{cpComponentNode=^{cpBody}^{cpBody}f}}'/>
</method>
<method selector='ignoreBodyRotation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBody:'>
<arg name='body' declared_type='cpBody*' type='^{cpBody=^?^?ffff{CGPoint=ff}{CGPoint=ff}{CGPoint=ff}fff{CGPoint=ff}^vff{CGPoint=ff}f^{cpSpace}^{cpShape}^{cpArbiter}^{cpConstraint}{cpComponentNode=^{cpBody}^{cpBody}f}}' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIgnoreBodyRotation:'>
<arg name='ignoreBodyRotation' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
</signatures>
