/*
* AUTOGENERATED FILE. DO NOT EDIT IT
* Generated by ../../tools/js/generate_spidermonkey_bindings.py on 2012-06-01
*/
#import "js_bindings_NSObject.h"

/*
 * CCDirector
 */
#pragma mark - CCDirector

extern JSObject *JSPROXY_CCDirector_object;
extern JSClass *JSPROXY_CCDirector_class;
void JSPROXY_CCDirector_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCDirector : CCDirector
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end

/*
 * CCNode
 */
#pragma mark - CCNode

extern JSObject *JSPROXY_CCNode_object;
extern JSClass *JSPROXY_CCNode_class;
void JSPROXY_CCNode_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCNode : CCNode
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end

/*
 * CCSprite
 */
#pragma mark - CCSprite

extern JSObject *JSPROXY_CCSprite_object;
extern JSClass *JSPROXY_CCSprite_class;
void JSPROXY_CCSprite_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCSprite : CCSprite
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end

/*
 * CCAction
 */
#pragma mark - CCAction

extern JSObject *JSPROXY_CCAction_object;
extern JSClass *JSPROXY_CCAction_class;
void JSPROXY_CCAction_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCAction : CCAction
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end

/*
 * CCFiniteTimeAction
 */
#pragma mark - CCFiniteTimeAction

extern JSObject *JSPROXY_CCFiniteTimeAction_object;
extern JSClass *JSPROXY_CCFiniteTimeAction_class;
void JSPROXY_CCFiniteTimeAction_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCFiniteTimeAction : CCFiniteTimeAction
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end

/*
 * CCActionInterval
 */
#pragma mark - CCActionInterval

extern JSObject *JSPROXY_CCActionInterval_object;
extern JSClass *JSPROXY_CCActionInterval_class;
void JSPROXY_CCActionInterval_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCActionInterval : CCActionInterval
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end

/*
 * CCScaleTo
 */
#pragma mark - CCScaleTo

extern JSObject *JSPROXY_CCScaleTo_object;
extern JSClass *JSPROXY_CCScaleTo_class;
void JSPROXY_CCScaleTo_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCScaleTo : CCScaleTo
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end

/*
 * CCScaleBy
 */
#pragma mark - CCScaleBy

extern JSObject *JSPROXY_CCScaleBy_object;
extern JSClass *JSPROXY_CCScaleBy_class;
void JSPROXY_CCScaleBy_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCScaleBy : CCScaleBy
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end

/*
 * CCLayer
 */
#pragma mark - CCLayer

extern JSObject *JSPROXY_CCLayer_object;
extern JSClass *JSPROXY_CCLayer_class;
void JSPROXY_CCLayer_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCLayer : CCLayer
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end

/*
 * CCMoveTo
 */
#pragma mark - CCMoveTo

extern JSObject *JSPROXY_CCMoveTo_object;
extern JSClass *JSPROXY_CCMoveTo_class;
void JSPROXY_CCMoveTo_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCMoveTo : CCMoveTo
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end

/*
 * CCMoveBy
 */
#pragma mark - CCMoveBy

extern JSObject *JSPROXY_CCMoveBy_object;
extern JSClass *JSPROXY_CCMoveBy_class;
void JSPROXY_CCMoveBy_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCMoveBy : CCMoveBy
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end

/*
 * CCScene
 */
#pragma mark - CCScene

extern JSObject *JSPROXY_CCScene_object;
extern JSClass *JSPROXY_CCScene_class;
void JSPROXY_CCScene_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCScene : CCScene
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end

/*
 * CCLabelTTF
 */
#pragma mark - CCLabelTTF

extern JSObject *JSPROXY_CCLabelTTF_object;
extern JSClass *JSPROXY_CCLabelTTF_class;
void JSPROXY_CCLabelTTF_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCLabelTTF : CCLabelTTF
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end

/*
 * CCSpriteBatchNode
 */
#pragma mark - CCSpriteBatchNode

extern JSObject *JSPROXY_CCSpriteBatchNode_object;
extern JSClass *JSPROXY_CCSpriteBatchNode_class;
void JSPROXY_CCSpriteBatchNode_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCSpriteBatchNode : CCSpriteBatchNode
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end

/*
 * CCLabelBMFont
 */
#pragma mark - CCLabelBMFont

extern JSObject *JSPROXY_CCLabelBMFont_object;
extern JSClass *JSPROXY_CCLabelBMFont_class;
void JSPROXY_CCLabelBMFont_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCLabelBMFont : CCLabelBMFont
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end

/*
 * CCParticleSystem
 */
#pragma mark - CCParticleSystem

extern JSObject *JSPROXY_CCParticleSystem_object;
extern JSClass *JSPROXY_CCParticleSystem_class;
void JSPROXY_CCParticleSystem_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCParticleSystem : CCParticleSystem
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end

/*
 * CCParticleSystemQuad
 */
#pragma mark - CCParticleSystemQuad

extern JSObject *JSPROXY_CCParticleSystemQuad_object;
extern JSClass *JSPROXY_CCParticleSystemQuad_class;
void JSPROXY_CCParticleSystemQuad_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCParticleSystemQuad : CCParticleSystemQuad
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end

/*
 * CCRotateBy
 */
#pragma mark - CCRotateBy

extern JSObject *JSPROXY_CCRotateBy_object;
extern JSClass *JSPROXY_CCRotateBy_class;
void JSPROXY_CCRotateBy_createClass( JSContext* cx, JSObject* globalObj, const char* name );

/* Callback class */
@interface JSPROXY_CCRotateBy : CCRotateBy
{
        JSObject *jsObject_;
}
@property (nonatomic, readwrite, assign) JSObject *jsObject;

@end
