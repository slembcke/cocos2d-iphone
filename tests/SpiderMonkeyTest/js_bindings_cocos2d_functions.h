/*
* AUTOGENERATED FILE. DO NOT EDIT IT
* Generated by "generate_spidermonkey_bindings.py -c cocos2d_spidermonkey.ini" on 2012-07-20
*/

#ifdef __cplusplus
extern "C" {
#endif
JSBool JSPROXY_ccCardinalSplineAt(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccDrawCardinalSpline(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccDrawCatmullRom(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccDrawCircle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccDrawColor4B(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccDrawColor4F(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccDrawCubicBezier(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccDrawLine(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccDrawPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccDrawQuadBezier(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccDrawRect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccDrawSolidRect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccGLBindTexture2D(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccGLBindTexture2DN(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccGLBindVAO(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccGLBlendFunc(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccGLBlendResetToCache(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccGLDeleteProgram(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccGLDeleteTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccGLEnable(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccGLEnableVertexAttribs(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccGLInvalidateStateCache(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccGLUseProgram(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccNextPOT(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccPointSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccSetProjectionMatrixDirty(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccc3(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccc4(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccc4FEqual(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccc4FFromccc3B(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccc4FFromccc4B(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccc4f(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccg(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpAdd(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpAngle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpAngleSigned(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpClamp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpCompMult(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpCross(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpDistance(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpDistanceSQ(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpDot(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpForAngle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpFromSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpFuzzyEqual(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpIntersectPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpLength(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpLengthSQ(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpLerp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpMidpoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpMult(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpNeg(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpNormalize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpPerp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpProject(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpRPerp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpRotate(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpRotateByAngle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpSegmentIntersect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpSub(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpToAngle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_ccpUnrotate(JSContext *cx, uint32_t argc, jsval *vp);

#ifdef __cplusplus
}
#endif
