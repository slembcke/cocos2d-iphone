/*
* AUTOGENERATED FILE. DO NOT EDIT IT
* Generated by ../../tools/js/generate_spidermonkey_bindings.py on 2012-06-20
*/

#ifdef __cplusplus
extern "C" {
#endif
JSBool JSPROXY_cpAreaForCircle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpAreaForSegment(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBArea(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBClampVect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBContainsBB(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBContainsVect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBExpand(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBIntersects(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBIntersectsSegment(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBMerge(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBMergedArea(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBNew(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBNewForCircle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBSegmentQuery(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBWrapVect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyActivate(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyActivateStatic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyAddShape(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyAlloc(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyApplyForce(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyApplyImpulse(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyDestroy(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyFree(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyGetVelAtLocalPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyGetVelAtWorldPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyInit(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyInitStatic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyIsRogue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyIsSleeping(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyIsStatic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyKineticEnergy(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyLocal2World(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyNew(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyNewStatic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyRemoveShape(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyResetForces(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodySanityCheck(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodySetAngle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodySetMass(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodySetMoment(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodySetPos(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodySleep(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodySleepWithGroup(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyUpdatePosition(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyUpdateVelocity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBodyWorld2Local(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBoxShapeNew(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBoxShapeNew2(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpCircleShapeNew(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpCircleShapeSetOffset(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpCircleShapeSetRadius(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpInitChipmunk(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpMomentForBox(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpMomentForBox2(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpMomentForCircle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpMomentForSegment(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpPolyShapeGetNumVerts(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpPolyShapeGetVert(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpResetShapeIdCounter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSegmentShapeNew(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSegmentShapeSetEndpoints(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSegmentShapeSetNeighbors(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSegmentShapeSetRadius(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpShapeActive(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpShapeCacheBB(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpShapeDestroy(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpShapeFree(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpShapePointQuery(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpShapeSetBody(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpShapeUpdate(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceActivateShapesTouchingShape(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceAddBody(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceAddShape(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceAddStaticShape(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceAlloc(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceContainsBody(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceContainsShape(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceDestroy(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceFree(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceInit(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceIsLocked(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceNew(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceReindexShape(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceReindexShapesForBody(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceReindexStatic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceRemoveBody(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceRemoveShape(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceRemoveStaticShape(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceStep(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpSpaceUseSpatialHash(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpfabs(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpfclamp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpfclamp01(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpflerp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpflerpconst(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpfmax(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpfmin(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpv(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvadd(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvclamp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvcross(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvdist(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvdistsq(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvdot(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpveql(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvforangle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvlength(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvlengthsq(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvlerp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvlerpconst(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvmult(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvnear(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvneg(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvnormalize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvnormalize_safe(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvperp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvproject(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvrotate(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvrperp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvslerp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvslerpconst(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvsub(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvtoangle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvunrotate(JSContext *cx, uint32_t argc, jsval *vp);

#ifdef __cplusplus
}
#endif
