/*
* AUTOGENERATED FILE. DO NOT EDIT IT
* Generated by ../../tools/js/generate_spidermonkey_bindings.py on 2012-06-19
*/

#ifdef __cplusplus
extern "C" {
#endif
JSBool JSPROXY_cpAreaForCircle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpAreaForSegment(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBArea(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBClampVect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBContainsBB(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBContainsVect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBExpand(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBIntersects(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBIntersectsSegment(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBMerge(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBMergedArea(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBNew(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBNewForCircle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBSegmentQuery(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpBBWrapVect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpInitChipmunk(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpMomentForBox(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpMomentForBox2(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpMomentForCircle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpMomentForSegment(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpResetShapeIdCounter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpfabs(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpfclamp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpfclamp01(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpflerp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpflerpconst(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpfmax(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpfmin(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpv(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvadd(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvclamp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvcross(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvdist(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvdistsq(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvdot(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpveql(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvforangle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvlength(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvlengthsq(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvlerp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvlerpconst(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvmult(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvnear(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvneg(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvnormalize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvnormalize_safe(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvperp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvproject(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvrotate(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvrperp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvslerp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvslerpconst(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvsub(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvtoangle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool JSPROXY_cpvunrotate(JSContext *cx, uint32_t argc, jsval *vp);

#ifdef __cplusplus
}
#endif
